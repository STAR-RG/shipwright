[
  {
    "raw_dockerfile": "FROM quay.io/sharelatex/texlive-full:2017.1\n\n# RUN usermod -u 1001 tex",
    "raw_stdout_log": "Sending build context to Docker daemon  3.102MB\r\r\nStep 1/1 : FROM quay.io/sharelatex/texlive-full:2017.1",
    "raw_stderr_log": "unauthorized: access to the requested resource is not authorized",
    "html_url": "https://github.com/overleaf/clsi",
    "repo_commit": "7254a025ae021c856eab2398b59852f2879890f4",
    "repo_id": 16775434
  },
  {
    "raw_dockerfile": "######################\n### BASE (FIRST)\n#######################\n\nFROM quay.io/criticaljuncture/baseimage:18.04\n\n\n#######################\n### RUBY\n#######################\n\nRUN apt-get update && apt-get install -y ruby2.6 ruby2.6-dev\n\n\n#######################\n### VARIOUS PACKAGES\n#######################\n\nRUN apt-get update && apt-get install -y libcurl4-openssl-dev libpcre3-dev git libmysqlclient-dev libssl-dev mysql-client secure-delete \\\n  # capybara-webkit\n  libqt4-dev libqtwebkit-dev &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# node js - packages are out of date\nRUN curl -sL https://deb.nodesource.com/setup_12.x | bash - &&\\\n  apt-get install -y nodejs &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# npm packages for testing\nRUN npm install -g jshint\nRUN npm install -g coffeelint\n\n\n##################\n### TIMEZONE\n##################\n\nRUN ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime\n\n\n##################\n### SERVICES\n##################\n\nCOPY docker/web/my_init.d /etc/my_init.d\nCOPY docker/web/service /etc/service\n\n\n###############################\n### APP USER/GROUP\n###############################\n\nRUN addgroup --gid 1000 app &&\\\n  adduser app -uid 1000 --gid 1000 --system &&\\\n  usermod -a -G docker_env app\n\n\n# rotate logs\nCOPY docker/web/files/logrotate/app /etc/logrotate.d/app\n\n\n###############################\n### GEMS & PASSENGER INSTALL\n###############################\n\nRUN gem install bundler -v '~> 2.0'\n\nWORKDIR /tmp\nCOPY Gemfile /tmp/Gemfile\nCOPY Gemfile.lock /tmp/Gemfile.lock\nRUN bundle install --system &&\\\n  passenger-config install-standalone-runtime &&\\\n  passenger start --runtime-check-only\n\n\n# docker cached layer build optimization:\n# caches the latest security upgrade versions\n# at the same time we're doing something else slow (changing the bundle)\n# but something we do often enough that the final unattended upgrade at the\n# end of this dockerfile isn't installing the entire world of security updates\n# since we set up the dockerfile for the project\nRUN apt-get update && unattended-upgrade -d\n\nENV PASSENGER_MIN_INSTANCES 1\nENV WEB_PORT 3000\n\n\n##################\n### APP\n##################\n\nCOPY --chown=1000:1000 . /home/app/\n\nWORKDIR /home/app\n\nRUN DB_ADAPTER=nulldb SECRET_KEY_BASE=XXX AWS_ACCESS_KEY_ID=XXX AWS_SECRET_ACCESS_KEY=XXX RAILS_ENV=production bundle exec rake assets:precompile &&\\\n  chown -R app /home/app\n\n# CI setup\nRUN mkdir log/test/ && touch log/test/vcr.log && chown -R app log\n\n\n##################\n### BASE (LAST)\n##################\n\n# ensure all packages are as up to date as possible\n# installs all updates since we last bundled\nRUN apt-get update && unattended-upgrade -d\n\n# set terminal\nENV TERM=linux",
    "raw_stdout_log": "Sending build context to Docker daemon  8.944MB\r\r\nStep 1/25 : FROM quay.io/criticaljuncture/baseimage:18.04",
    "raw_stderr_log": "unauthorized: access to the requested resource is not authorized",
    "html_url": "https://github.com/usnationalarchives/federalregister-web",
    "repo_commit": "09fd3d5b403cd2cd90ce9a7a3225e82c5b7ca8e0",
    "repo_id": 2252148
  },
  {
    "raw_dockerfile": "# mount the GHC source code into /home/ghc\n#\n#    docker run --rm -it --privileged -v `pwd`:/home/ghc alexeyraga/ghc-cross-arm /bin/bash\n#\n\nFROM quay.io/alexeyraga/ghc-7.8.4\nMAINTAINER Alexey Raga\n\n## disable prompts from apt\nENV DEBIAN_FRONTEND noninteractive\n\nADD ./scripts/* /etc/ghc-install/\n\nRUN sudo /etc/ghc-install/install-deps.sh\nRUN sudo /etc/ghc-install/install-linaro.sh\nRUN sudo /etc/ghc-install/build-ghc.sh\n\nADD ./cabal-arm /opt/cabal-arm\nRUN sudo chmod +x /opt/cabal-arm && sudo ln -s /opt/cabal-arm /usr/local/bin/cabal-arm",
    "raw_stdout_log": "Sending build context to Docker daemon  76.29kB\r\r\nStep 1/9 : FROM quay.io/alexeyraga/ghc-7.8.4",
    "raw_stderr_log": "unauthorized: access to the requested resource is not authorized",
    "html_url": "https://github.com/AlexeyRaga/ghc-docker-cross-arm",
    "repo_commit": "fefd8f0002589367efcbd0ac6f04ff8533bd8d5a",
    "repo_id": 33440483
  },
  {
    "raw_dockerfile": "FROM quay.io/fundingcircle/alpine-ruby-builder:2.5 as builder\n\nRUN apk --no-cache add \\\n  cmake \\\n  nodejs \\\n  sqlite-dev \\\n  libgit2-dev \\\n  libssh2-dev\n\nWORKDIR /tmp\nCOPY Gemfile* ./\nRUN bundle config build.rugged --use-system-libraries \\\n && bundle install --deployment --without dockerignore development test\n\nARG RAILS_ENV=production\n\nCOPY Rakefile ./\nCOPY lib/tasks/env.rake lib/tasks/\nCOPY lib/prometheus_client.rb lib/\n\nCOPY \\\n config/application.rb \\\n config/boot.rb \\\n config/environment.rb \\\n config/\n\nCOPY config/environments/production.rb config/environments/\n\nCOPY app/assets app/assets\nCOPY vendor/assets vendor/assets\nCOPY .env.assets .\n\nRUN bundle exec rake assets:precompile\n\nFROM quay.io/fundingcircle/alpine-ruby:2.5\nLABEL maintainer=\"Funding Circle Engineering <engineering@fundingcircle.com>\"\n\nRUN apk --no-cache add \\\n  nodejs \\\n  postgresql \\\n  postgresql-client \\\n  sqlite-dev \\\n  tzdata \\\n  zlib \\\n  libgit2 \\\n  libssh2\n\nRUN addgroup -g 1101 -S shipment_tracker && \\\n  adduser -S -u 1101 -h /app -G shipment_tracker shipment_tracker\n\nUSER root\n\nWORKDIR /app\n\nCOPY --from=builder --chown=shipment_tracker:shipment_tracker /tmp .\nCOPY --chown=shipment_tracker:shipment_tracker docker/entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nCOPY --chown=shipment_tracker:shipment_tracker dropzone.yaml /usr/local/deploy/dropzone.yaml\nCOPY --chown=shipment_tracker:shipment_tracker . .\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"docker-entrypoint.sh\"]\n\nARG REVISION=unknown\nENV REVISION=$REVISION\nARG NAME=shipment_tracker\nLABEL name=$NAME version=$REVISION\nRUN echo \"$REVISION\" > REVISION",
    "raw_stdout_log": "Sending build context to Docker daemon  1.358MB\r\r\nStep 1/31 : FROM quay.io/fundingcircle/alpine-ruby-builder:2.5 as builder",
    "raw_stderr_log": "unauthorized: access to the requested resource is not authorized",
    "html_url": "https://github.com/FundingCircle/shipment_tracker",
    "repo_commit": "3a3b192596259beb79d0ddbc89c70b889bbf92c7",
    "repo_id": 34510688
  },
  {
    "raw_dockerfile": "#######################\n### BASE (FIRST)\n#######################\n\nFROM quay.io/criticaljuncture/baseimage:16.04\n\n\n#######################\n### RUBY\n#######################\n\nRUN apt-get update && apt-get install -y ruby2.5 ruby2.5-dev &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n\n#######################\n### VARIOUS PACKAGES\n#######################\n\nRUN apt-get update &&\\\n  apt-get install -y gettext-base patch libcurl4-openssl-dev libpcre3-dev git libmysqlclient-dev libssl-dev mysql-client apache2-utils fontconfig hunspell-en-us libhunspell-1.3-0 libhunspell-dev pngcrush secure-delete xfonts-75dpi xfonts-base xpdf pdftk tzdata &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# node js - packages are out of date\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash - &&\\\n  apt-get install -y nodejs &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# npm packages for testing\nRUN npm install -g jshint\n\n\n#######################\n### SPHINX\n#######################\n\nWORKDIR /tmp\nRUN curl -O https://sphinxsearch.com/files/sphinx-3.2.1-f152e0b-linux-amd64.tar.gz &&\\\n  tar xzvf sphinx-3.2.1-f152e0b-linux-amd64.tar.gz &&\\\n  cp /tmp/sphinx-3.2.1/bin/* /usr/local/bin/\nRUN rm -Rf /tmp/sphinx-3.2.1 && rm /tmp/sphinx-3.2.1-f152e0b-linux-amd64.tar.gz\n\n##################\n### PRINCEXML\n##################\n\nRUN apt-get update &&\\\n  apt-get install -y libc6 libtiff5 libgif7 libcurl3 libfontconfig1 libjpeg8 libxml2 &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\nWORKDIR /tmp\n\n# install prince and license template\nRUN curl -O https://www.princexml.com/download/prince-8.1r5-ubuntu1604-amd64.tar.gz &&\\\n  tar -xzvf prince-8.1r5-ubuntu1604-amd64.tar.gz &&\\\n  cd /tmp/prince-8.1r5-ubuntu1604-amd64 &&\\\n  ./install.sh &&\\\n  rm /tmp/prince-8.1r5-ubuntu1604-amd64.tar.gz &&\\\n  rm -Rf /tmp/prince-8.1r5-ubuntu1604-amd64\n\nCOPY docker/api/files/princexml/license.dat.tmpl /usr/local/lib/prince/license/license.dat.tmpl\n\n# add fonts\nCOPY docker/api/files/fonts/open-sans /usr/share/fonts/truetype/\n# update font cache\nRUN  fc-cache -f -v\n\n\n##################\n### IMAGEMAGICK\n##################\n\nRUN apt-get update &&\\\n  apt-get update && apt-get install -y checkinstall libtiff5-dev libx11-dev libxext-dev zlib1g-dev libpng12-dev libjpeg-dev ghostscript libgs-dev imagemagick &&\\\n  apt-get clean &&\\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\nCOPY docker/api/files/imagemagick/policy.xml /etc/ImageMagick-6/policy.xml\n\n##################\n### TIMEZONE\n##################\n\nRUN ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime\n\n\n###############################\n### APP USER/GROUP\n###############################\n\nRUN addgroup --gid 1000 app &&\\\n  adduser app -uid 1000 --gid 1000 --system &&\\\n  usermod -a -G docker_env app &&\\\n  usermod -a -G crontab app\n\n\n###############################\n### GEMS & PASSENGER INSTALL\n###############################\n\nRUN gem install bundler -v 1.17.3\nWORKDIR /tmp\nCOPY Gemfile /tmp/Gemfile\nCOPY Gemfile.lock /tmp/Gemfile.lock\nRUN bundle install --system --full-index &&\\\n  passenger-config install-standalone-runtime &&\\\n  passenger start --runtime-check-only\n\n# docker cached layer build optimization:\n# caches the latest security upgrade versions\n# at the same time we're doing something else slow (changing the bundle)\n# but something we do often enough that the final unattended upgrade at the\n# end of this dockerfile isn't installing the entire world of security updates\n# since we set up the dockerfile for the project\nRUN apt-get update && unattended-upgrade -d\n\nENV PASSENGER_MIN_INSTANCES 1\nENV WEB_PORT 3000\n\n\n##################\n### SERVICES\n##################\n\nCOPY docker/api/my_init.d /etc/my_init.d\nCOPY docker/api/service /etc/service\n\n# rotate logs\nCOPY docker/api/files/logrotate/app /etc/logrotate.d/app\n\n\n##################\n### APP\n##################\n\nCOPY --chown=1000:1000 . /home/app/\nWORKDIR /home/app\n\nRUN RAILS_ENV=production rake assets:precompile\n\n##################\n### BASE (LAST)\n##################\n\n# ensure all packages are as up to date as possible\n# installs all updates since we last bundled\nRUN apt-get update && unattended-upgrade -d\n\n# set terminal\nENV TERM=linux",
    "raw_stdout_log": "Sending build context to Docker daemon  7.187MB\r\r\nStep 1/34 : FROM quay.io/criticaljuncture/baseimage:16.04",
    "raw_stderr_log": "unauthorized: access to the requested resource is not authorized",
    "html_url": "https://github.com/usnationalarchives/federalregister-api-core",
    "repo_commit": "e9fbb6641670eba96bcf888b577d1cbad9687afd",
    "repo_id": 607511
  }
]