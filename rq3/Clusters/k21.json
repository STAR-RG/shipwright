[
  {
    "raw_dockerfile": "FROM img.reg.3g:15000/ubuntu-base:v3\nMAINTAINER xueying.zheng@yeepay.com\nADD /src/sso/conf /conf\nADD Manifest /\nADD Dockerfile /\nADD src/sso/main /sso\n\nENTRYPOINT [\"/sso\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  18.51MB\r\r\nStep 1/7 : FROM img.reg.3g:15000/ubuntu-base:v3",
    "raw_stderr_log": "Get https://img.reg.3g:15000/v2/: dial tcp: lookup img.reg.3g on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/yingyan003/sso-go",
    "repo_commit": "3a20f6e226332c1676e6b2dddaa180e44ef44a7f",
    "repo_id": 118749328
  },
  {
    "raw_dockerfile": "FROM registry-scu.cloudtogo.cn/ubuntu:jdk\nARG app\nADD $app app.jar\nENTRYPOINT [\"java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/app.jar\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  201.7kB\r\r\nStep 1/4 : FROM registry-scu.cloudtogo.cn/ubuntu:jdk",
    "raw_stderr_log": "Get https://registry-scu.cloudtogo.cn/v2/: dial tcp 106.75.145.94:443: getsockopt: connection refused",
    "html_url": "https://github.com/solochen84/SpringBootDemo",
    "repo_commit": "443cab4f7ef2123f9c417a54c77338ac3c6fb146",
    "repo_id": 118882209
  },
  {
    "raw_dockerfile": "FROM docker.mycompany.com/platform/golang:1.10.3\n\nADD . /go/src/git.mycompany.com/platform/go-boilerplate.git\nWORKDIR /go/src/git.mycompany.com/platform/go-boilerplate.git\nRUN go install ./...\n\nCMD [\"/go/bin/boilerd\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  9.208MB\r\r\nStep 1/5 : FROM docker.mycompany.com/platform/golang:1.10.3",
    "raw_stderr_log": "Get https://docker.mycompany.com/v2/: dial tcp: lookup docker.mycompany.com on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/cogolabs/go-boilerplate",
    "repo_commit": "c41ce663449d1babddee336d304951ce17a2c1c7",
    "repo_id": 146936785
  },
  {
    "raw_dockerfile": "FROM oms-registry.trendyol.com:5005/base/golang:1.13.1-alpine3.10 AS builder\nARG DOCKER_HOST\nARG DOCKER_DRIVER\nENV DOCKER_HOST=$DOCKER_HOST\nENV DOCKER_DRIVER=$DOCKER_DRIVER\n#ENV TARGET_FOLDER=rabbitmq\n\nRUN apk update && apk add git curl gcc musl-dev\nRUN apk add --update --no-cache ca-certificates && rm -rf /var/cache/apk/*\nRUN go get github.com/onsi/ginkgo/ginkgo\nRUN go get github.com/onsi/gomega/...\n\nWORKDIR /go/src/github.com/kafka2rabbit\nADD . .\nRUN go mod download\nRUN go build\n\nENTRYPOINT ginkgo -v -r services/event_executor",
    "raw_stdout_log": "Sending build context to Docker daemon  210.4kB\r\r\nStep 1/14 : FROM oms-registry.trendyol.com:5005/base/golang:1.13.1-alpine3.10 AS builder",
    "raw_stderr_log": "Get https://oms-registry.trendyol.com:5005/v2/: dial tcp: lookup oms-registry.trendyol.com on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/Trendyol/kafka2rabbit",
    "repo_commit": "6f74fe4ab30edd20cd6bf8c0578bbc0cabab926b",
    "repo_id": 229928281
  },
  {
    "raw_dockerfile": "# Application image\n#\n# This image mainly adds the latest application source to the base image\n#\nFROM myregistry.example.com/myproject/myapp:base-1.0\n\n# Copy PHP configuration into the image\nCOPY ./config/php/productive.ini /etc/php7/conf.d/90-productive.ini\n\n# Copy the app code into the image\nCOPY . /var/www/html\n\n# Create required directories listed in .dockerignore\nRUN mkdir -p runtime web/assets var/sessions \\\n    && chown www-data:www-data runtime web/assets var/sessions\n\n# Let docker create a volume for the session dir.\n# This keeps the session files even if the container is rebuilt.\nVOLUME /var/www/html/var/sessions",
    "raw_stdout_log": "Sending build context to Docker daemon  101.9kB\r\r\nStep 1/5 : FROM myregistry.example.com/myproject/myapp:base-1.0",
    "raw_stderr_log": "Get https://myregistry.example.com/v2/: dial tcp: lookup myregistry.example.com on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/codemix/yii2-dockerized",
    "repo_commit": "1b02f8b96ea9c13b0a23628e6b80f2caf4b16dd3",
    "repo_id": 30870378
  },
  {
    "raw_dockerfile": "FROM docker.yb0t.cc/app-go:1.0.0\n\n# bring in the built file\nADD ./ferret /app/ferret",
    "raw_stdout_log": "Sending build context to Docker daemon   3.46MB\r\r\nStep 1/2 : FROM docker.yb0t.cc/app-go:1.0.0",
    "raw_stderr_log": "Get https://docker.yb0t.cc/v2/: dial tcp: lookup docker.yb0t.cc on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/yieldbot/ferret",
    "repo_commit": "a2f836d86c020ae07a9f03a5b168fc0a1ab8ee3d",
    "repo_id": 60670098
  },
  {
    "raw_dockerfile": "FROM docker-registry.decisionbrain.loc/cplex-studio-java:12.9-jdk8-1.0.0\n\nUSER root\n\nRUN apt-get update \\\n     && apt-get upgrade -y \\\n     && apt-get install -y sudo libltdl-dev \\\n     && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /usr/local/share/ca-certificates/decisionbrain.loc\nADD http://ldap.decisionbrain.loc/ca.crt /usr/local/share/ca-certificates/decisionbrain.loc\nRUN  update-ca-certificates\n\nRUN keytool -import -noprompt -trustcacerts -alias loc -file /usr/local/share/ca-certificates/decisionbrain.loc/ca.crt -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit\n\nRUN useradd jenkins --shell /bin/bash --uid 1001 --create-home\n\nRUN chmod -R 755 /home/jenkins\n\nUSER decisionbrain",
    "raw_stdout_log": "Sending build context to Docker daemon  1.616MB\r\r\nStep 1/10 : FROM docker-registry.decisionbrain.loc/cplex-studio-java:12.9-jdk8-1.0.0",
    "raw_stderr_log": "Get https://docker-registry.decisionbrain.loc/v2/: dial tcp: lookup docker-registry.decisionbrain.loc on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/decisionbrain/cplex-scala",
    "repo_commit": "bcb611e7452d49261f02b7fea8e7923ad4c90fb0",
    "repo_id": 84325967
  },
  {
    "raw_dockerfile": "FROM registry.saintic.com/python\nMAINTAINER Mr.tao <staugur@saintic.com>\nADD ./src /EauDouce\nADD requirements.txt /tmp\nADD supervisord.conf /etc\nWORKDIR /EauDouce\nRUN pip install --index https://pypi.douban.com/simple/ -r /tmp/requirements.txt\nENTRYPOINT [\"supervisord\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  35.99MB\r\r\nStep 1/8 : FROM registry.saintic.com/python",
    "raw_stderr_log": "Get https://registry.saintic.com/v2/: dial tcp: lookup registry.saintic.com on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/staugur/EauDouce",
    "repo_commit": "1778ade4867a45c2e29ce5f654cd2564377a8c4d",
    "repo_id": 86930238
  },
  {
    "raw_dockerfile": "# 用于构建golang项目并打包docker image\n\n# 在jenkins下测试：\n# cd /var/jenkins_home/tools/org.jenkinsci.plugins.docker.commons.tools.DockerTool/docker_1.13.1/bin\n# ./docker -H tcp://docker:2375 images\n# REPOSITORY             TAG                 IMAGE ID            CREATED              SIZE\n# registry:5000/godemo   0.1.0               6b9c973d9e80        About a minute ago   13.7 MB\n# registry:5000/godemo   latest              6b9c973d9e80        About a minute ago   13.7 MB\n# alpine                 latest              4a415e366388        2 months ago         3.98 MB\n# registry:5000/alpine   latest              4a415e366388        2 months ago         3.98 MB\n\nFROM k8s-registry:5000/alpine:latest\nMAINTAINER cookeem cookeem@qq.com\n\nCOPY gin_demo /gin_demo\n\n# 解决alpine无法运行golang的binary问题，缺少x86_64\nRUN mkdir /lib64\nRUN ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2\n\n# Commands when creating a new container\nCMD /gin_demo",
    "raw_stdout_log": "Sending build context to Docker daemon  37.11MB\r\r\nStep 1/6 : FROM k8s-registry:5000/alpine:latest",
    "raw_stderr_log": "Get https://k8s-registry:5000/v2/: dial tcp: lookup k8s-registry on 128.105.252.100:53: no such host",
    "html_url": "https://github.com/cookeem/godemo",
    "repo_commit": "8edc156a8d58d39c942b0533206602f8be6508fc",
    "repo_id": 88003982
  }
]