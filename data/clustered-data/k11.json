[
  {
    "raw_dockerfile": "# Pull base image\nFROM resin/rpi-raspbian:wheezy\nFROM hypriot/rpi-golang:1.4.2\nMAINTAINER Dieter Reuter <dieter@hypriot.com>\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n    ca-certificates \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    git \\\n    --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Compile Go from source\nENV GOROOT_BOOTSTRAP /goroot\nENV GOLANG_VERSION 1.5\nADD ./etc/services /etc/services\nRUN \\\n    mkdir -p /goroot1.5 && \\\n    git clone https://go.googlesource.com/go /goroot1.5 && \\\n    cd /goroot1.5 && \\\n    git checkout go$GOLANG_VERSION && \\\n    cd /goroot1.5/src && \\\n    GOARM=6 ./all.bash\n\n# Set environment variables\nENV GOROOT /goroot1.5\nENV GOPATH /gopath1.5\nENV GOARM 6\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\n\n# Define working directory\nWORKDIR /gopath1.5\n\n# Define default command\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  934.9kB\r\r\nStep 1/14 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\n8630ff512795: Waiting\ne0b02eb7cd53: Waiting\nbdcac962ab33: Waiting\nc38a07051190: Waiting\ncfcb153b448c: Waiting\n1c77652cb6b0: Verifying Checksum\n1c77652cb6b0: Download complete\n9d9ee66f84da: Download complete\nbdcac962ab33: Download complete\n8630ff512795: Verifying Checksum\n8630ff512795: Download complete\nc38a07051190: Download complete\n9b363c982e7e: Verifying Checksum\n9b363c982e7e: Download complete\ne0b02eb7cd53: Verifying Checksum\ne0b02eb7cd53: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in 51b769707a46\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/hypriot/rpi-golang",
    "repo_commit": "b07dde011449cfc57b19146643982f9002e0525a",
    "repo_id": 31027536
  },
  {
    "raw_dockerfile": "# Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Dieter Reuter <dieter@hypriot.com>\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n    python \\\n    python-dev \\\n    python-pip \\\n    python-virtualenv \\\n    --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Define working directory\nWORKDIR /data\n\n# Define default command\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  70.14kB\r\r\nStep 1/5 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\n8630ff512795: Waiting\nbdcac962ab33: Waiting\nc38a07051190: Waiting\ne0b02eb7cd53: Waiting\n1c77652cb6b0: Download complete\n9d9ee66f84da: Download complete\n8630ff512795: Verifying Checksum\n8630ff512795: Download complete\nbdcac962ab33: Download complete\nc38a07051190: Download complete\ne0b02eb7cd53: Download complete\n9b363c982e7e: Verifying Checksum\n9b363c982e7e: Download complete\ncfcb153b448c: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in 1fed04adc8e8\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/hypriot/rpi-python",
    "repo_commit": "af7176e9baa0affb01ea5107b0b1252dfb5bfea9",
    "repo_id": 31159734
  },
  {
    "raw_dockerfile": "FROM resin/rpi-raspbian:wheezy\n\nRUN set -ex; \\\n    apt-get update -qq; \\\n    apt-get install -y \\\n        python \\\n        python-pip \\\n        python-dev \\\n        git \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        lxc \\\n        iptables \\\n    ; \\\n    rm -rf /var/lib/apt/lists/*\n\nENV ALL_DOCKER_VERSIONS 1.6.0\n\nRUN set -ex; \\\n    curl -L http://assets.hypriot.com/docker-hypriot_1.6.0-1_armhf.deb -o docker-hypriot_1.6.0-1_armhf.deb; \\\n    dpkg -x docker-hypriot_1.6.0-1_armhf.deb /tmp/docker || true; \\\n    mv /tmp/docker/usr/bin/docker /usr/local/bin/docker; \\\n    rm -rf /tmp/docker\n\nRUN useradd -d /home/user -m -s /bin/bash user\nWORKDIR /code/\n\nADD requirements.txt /code/\nRUN pip install -r requirements.txt\n\nADD requirements-dev.txt /code/\nRUN pip install -r requirements-dev.txt\n\nRUN apt-get install -qy wget && \\\n    cd /tmp && \\\n    wget -q https://pypi.python.org/packages/source/P/PyInstaller/PyInstaller-2.1.tar.gz && \\\n    tar xzf PyInstaller-2.1.tar.gz && \\\n    cd PyInstaller-2.1/bootloader && \\\n    python ./waf configure --no-lsb build install && \\\n    ln -s /tmp/PyInstaller-2.1/PyInstaller/bootloader/Linux-32bit-arm /usr/local/lib/python2.7/dist-packages/PyInstaller/bootloader/Linux-32bit-arm\n\nADD . /code/\nRUN python setup.py install\n\nRUN chown -R user /code/\n\nENTRYPOINT [\"/usr/local/bin/docker-compose\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  404.5kB\r\r\nStep 1/15 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\n8630ff512795: Waiting\nbdcac962ab33: Waiting\nc38a07051190: Waiting\ne0b02eb7cd53: Waiting\ncfcb153b448c: Waiting\n1c77652cb6b0: Download complete\n9d9ee66f84da: Verifying Checksum\n9d9ee66f84da: Download complete\n8630ff512795: Verifying Checksum\n8630ff512795: Download complete\nbdcac962ab33: Verifying Checksum\nbdcac962ab33: Download complete\ne0b02eb7cd53: Verifying Checksum\ne0b02eb7cd53: Download complete\n9b363c982e7e: Verifying Checksum\n9b363c982e7e: Download complete\ncfcb153b448c: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in 7c242700ce9b\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/hypriot/compose",
    "repo_commit": "7b5276774168bbe98209be7ce3ea05fd2a2131ea",
    "repo_id": 31550244
  },
  {
    "raw_dockerfile": "# Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Govinda Fichtner <govinda@hypriot.com>\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\nRUN apt-get update \\\n\t&& apt-get install -y curl \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)\" \\\n\t&& curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& gpg --verify /usr/local/bin/gosu.asc \\\n\t&& rm /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu\n\nENV REDIS_VERSION 3.0.4\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-3.0.0.tar.gz\nENV REDIS_DOWNLOAD_SHA1 c75fd32900187a7c9f9d07c412ea3b3315691c65\n\n# for redis-sentinel see: http://redis.io/topics/sentinel\nRUN buildDeps='gcc libc6-dev make'; \\\n\tset -x \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& mkdir -p /usr/src/redis \\\n\t&& curl -sSL \"$REDIS_DOWNLOAD_URL\" -o redis.tar.gz \\\n\t&& echo \"$REDIS_DOWNLOAD_SHA1 *redis.tar.gz\" | sha1sum -c - \\\n\t&& tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \\\n\t&& rm redis.tar.gz \\\n\t&& make -C /usr/src/redis \\\n\t&& make -C /usr/src/redis install \\\n\t&& rm -r /usr/src/redis \\\n\t&& apt-get purge -y --auto-remove $buildDeps\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [ \"redis-server\" ]",
    "raw_stdout_log": "Sending build context to Docker daemon  70.66kB\r\r\nStep 1/17 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\ncfcb153b448c: Waiting\nbdcac962ab33: Waiting\ne0b02eb7cd53: Waiting\n8630ff512795: Waiting\nc38a07051190: Waiting\n1c77652cb6b0: Verifying Checksum\n1c77652cb6b0: Download complete\n9d9ee66f84da: Verifying Checksum\n9d9ee66f84da: Download complete\n8630ff512795: Download complete\nbdcac962ab33: Download complete\nc38a07051190: Download complete\ne0b02eb7cd53: Verifying Checksum\ne0b02eb7cd53: Download complete\n9b363c982e7e: Verifying Checksum\ncfcb153b448c: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in 919d9037928b\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/hypriot/rpi-redis",
    "repo_commit": "fdb46aef6dd3745ffc5998957a3c1792a363a838",
    "repo_id": 34169993
  },
  {
    "raw_dockerfile": "FROM resin/rpi-raspbian:wheezy\nMAINTAINER Julio César <julioc255io@gmail.com>\n\nRUN apt-get update\nRUN apt-get upgrade -y\n\nRUN apt-get install -y build-essential\nRUN apt-get install -y python\nRUN apt-get install -y wget\n\n# Install Nodejs 0.10.xx for compatibility with serialport\nRUN wget http://node-arm.herokuapp.com/node_0.10.36-1_armhf.deb\nRUN dpkg -i node_0.10.36-1_armhf.deb\n\n# Install Arduino\nRUN apt-get install -y --force-yes arduino\n\n# Install node modules\nWORKDIR /usr/src/voyager-bot/\nCOPY . /usr/src/voyager-bot/\nRUN npm install\n\nEXPOSE 3000\n\nCMD [\"node\", \"/usr/src/voyager-bot/app.js\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  10.63MB\r\r\nStep 1/15 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\nc38a07051190: Waiting\ne0b02eb7cd53: Waiting\ncfcb153b448c: Waiting\n8630ff512795: Waiting\nbdcac962ab33: Waiting\n1c77652cb6b0: Download complete\n9d9ee66f84da: Download complete\nc38a07051190: Download complete\nbdcac962ab33: Download complete\n9b363c982e7e: Verifying Checksum\n9b363c982e7e: Download complete\ne0b02eb7cd53: Verifying Checksum\ne0b02eb7cd53: Download complete\ncfcb153b448c: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in ec4aa4ce010e\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/juliocesar-io/voyager-bot",
    "repo_commit": "14b0fb40b9b642134e03110769a8b56170b70fee",
    "repo_id": 38725634
  },
  {
    "raw_dockerfile": "# Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Scott Edenbaum <scott.edenbaum@gmail.com>\n\n# Install dependencies\nRUN echo 'deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi' > /etc/apt/sources.list\n\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    wget \\\n    screen \\\n    cmake \\\n    unzip \\\n    libtiff5-dev \\\n    libhdf5-dev \\\n    python3 \\\n    python3-dev \\\n    cython3 \\\n    python3-cffi \\\n    python3-setuptools \\\n    python3-pip \\\n    pkg-config \\\n    python3-tables \\\n    python3-wheel \\\n    python3-numpy \\\n    python3-scipy \\\n    libpng-dev \\\n    libjasper-dev \\\n    libavcodec-dev \\\n    libswscale-dev \\\n    libv4l-dev \\\n    libxvidcore-dev \\\n    libx264-dev \\\n    libatlas-base-dev \\\n    libfreetype6-dev\\\n    libxft-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    libatlas-base-dev \\\n    gfortran \\\n    libxml2-dev \\\n    libxslt-dev \\\n    build-essential \\\n    ipython3 \\\n    libncurses5-dev \\\n    libssl-dev \\\n    openssl \\\n    libreadline-dev \\\n    libbz2-dev \\\n    libncurses5-dev \\\n    libcurl4-openssl-dev \\\n    libjpeg-dev \\\n    r-base \\\n    r-base-core \\\n    r-base-dev \\\n    --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\n#RUN apt-get update && apt-get install -y libgeos-c1\n\n\n###### install opencv\n# RUN cd /tmp && \\\n#     wget -O opencv.zip https://github.com/opencv/opencv/archive/3.2.0.zip && \\\n#     unzip opencv.zip && \\\n#     wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.2.0.zip && \\\n#     unzip opencv_contrib.zip\n\n# build opencv\n# RUN cd /tmp/opencv-3.2.0 && \\\n#     mkdir build && \\\n#     cd build && \\\n#     cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n#     -D CMAKE_INSTALL_PREFIX=/usr/local \\\n#     -D INSTALL_C_EXAMPLES=ON \\\n#     -D BUILD_PYTHON_SUPPORT=ON \\\n#     -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n#     -D INSTALL_PYTHON_EXAMPLES=ON \\\n#         -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.2.0/modules \\\n#     -D BUILD_EXAMPLES=ON .. && \\\n#     make -j4 && \\\n#     make && \\\n#     make install && \\\n#     make clean\n# \n# # cleanup source\n# RUN cd /tmp && rm -rf opencv-3.2.0\n\n\nRUN mkdir -p pyapp\nCOPY requirements*.txt pyapp/\nRUN pip3 install --upgrade pip\nRUN pip3 install -r pyapp/requirements.txt\nRUN pip3 install -r pyapp/requirements2.txt\n#setup R\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages(c('yhatr','rpart.plot','lattice','mlogit','moments','MNP','muhaz','tidytext','text2vec'))\"\nRUN Rscript -e \"install.packages(c('LDAvis','mcmc','syuzhet','SnowballC','gmodels','descr','ggplot2','googleVis'))\"\nRUN Rscript -e \"install.packages(c('outliers','features','Hmisc','party','ISLR','mice','NLP','foreign','tm','CCP'))\"\nRUN Rscript -e \"install.packages(c('RColorBrewer','colorspace','highr','evaluate','zoo','quantmod','TTR','fAssets'))\"\nRUN Rscript -e \"install.packages(c('Bioconductor','Quandl','zipcode','treemap','worldmap','ellipse'))\"\nRUN Rscript -e \"install.packages(c('Leaflet','ggmap','swirl','gtable','RcppEigen','yaml','BH','mtvnorm'))\"\nRUN Rscript -e \"install.packages(c('LSMeans','Comparison','RegTest','ACD','BinomTools','DAIM','ClustEval','SigClust','PROC'))\"\nRUN Rscript -e \"install.packages(c('TimeROC','car','RMiner','CoreLearn','caret','BigRF','CBA','RankCluster'))\"\nRUN Rscript -e \"install.packages(c('LTSA','survival','Basta','RMarkdown','qcc','jsonlite','RCurl','RWeka'))\"\nRUN Rscript -e \"install.packages(c('parallel','Rcpp','twitteR','igraph','nnet','glmnet','tree','arules','earth','mboost'))\"\nRUN Rscript -e \"install.packages(c('CORElearn','ipred','klaR','party','ROCR','kernlab','wordcloud','MissForest','MissMDA'))\"\nRUN Rscript -e \"install.packages(c('data.table','sqldf','forecast','RMYSQL','anomalyDetection','ElemStatLearn','h2o'))\"\nRUN Rscript -e \"install.packages(c('MASS','penalized','dplyr','reshape2','forecast','stringr','sampleSelection','sandwich'))\"\nRUN Rscript -e \"install.packages(c('sem','statnet','topicmodels','vcd','broom','corrplot','rbokeh','rCharts','lubridate'))\"\nRUN Rscript -e \"install.packages(c('randomForest','rpart','e1071','kknn','plyr','repr','IRdisplay','crayon','pdbZMQ'))\"\nRUN Rscript -e \"install.packages(c('magrittr', 'doBy','extrafont','chunked','snda','network','visNetwork','devtools'))\"\nRUN Rscript -e \"install.packages(c('angstroms','bikedata','datasuRus','dwapi','HURDAT','neurohcp','omsdata','parlitools'))\"\nRUN Rscript -e \"install.packages(c('rerddap','soilcarbon','learnr','olsrr','rODE'))\"\n\n\nRUN R -e \"install.packages(('devtools'), repos='https://cloud.r-project.org'); devtools::install_github('IRkernel/IRkernel');devtools::install_github('skoval/deuce');IRkernel::installspec()\" #Rscript -e \"install.packages('devtools')\"\n\nRUN echo \"root:Docker!\" | chpasswd\n#RUN useradd -m -G sudo,users student\n#RUN echo \"student:Docker!\" | chpasswd\n#RUN chown student /home/student\n# Define working directory\nWORKDIR /home/student\n\n# Define default command\n\nRUN pip3 install statsmodels\n\nUSER root\nCMD jupyter-lab --ip 0.0.0.0  --port 9999 --LabApp.token='' --allow-root",
    "raw_stdout_log": "Sending build context to Docker daemon  75.26kB\r\r\nStep 1/34 : FROM resin/rpi-raspbian:wheezy\nwheezy: Pulling from resin/rpi-raspbian\n9b363c982e7e: Pulling fs layer\n1c77652cb6b0: Pulling fs layer\n9d9ee66f84da: Pulling fs layer\n8630ff512795: Pulling fs layer\nbdcac962ab33: Pulling fs layer\nc38a07051190: Pulling fs layer\ne0b02eb7cd53: Pulling fs layer\ncfcb153b448c: Pulling fs layer\ne0b02eb7cd53: Waiting\nbdcac962ab33: Waiting\nc38a07051190: Waiting\ncfcb153b448c: Waiting\n9d9ee66f84da: Download complete\n1c77652cb6b0: Verifying Checksum\n1c77652cb6b0: Download complete\nbdcac962ab33: Verifying Checksum\nbdcac962ab33: Download complete\n8630ff512795: Verifying Checksum\n8630ff512795: Download complete\n9b363c982e7e: Verifying Checksum\n9b363c982e7e: Download complete\ne0b02eb7cd53: Verifying Checksum\ne0b02eb7cd53: Download complete\nc38a07051190: Download complete\ncfcb153b448c: Verifying Checksum\ncfcb153b448c: Download complete\n9b363c982e7e: Pull complete\n1c77652cb6b0: Pull complete\n9d9ee66f84da: Pull complete\n8630ff512795: Pull complete\nbdcac962ab33: Pull complete\nc38a07051190: Pull complete\ne0b02eb7cd53: Pull complete\ncfcb153b448c: Pull complete\nDigest: sha256:3f556e32e57872af8df4f8e1b3c29bd98bae773613c3d5d05c77a018824d409d\nStatus: Downloaded newer image for resin/rpi-raspbian:wheezy\n# Executing 2 build triggers\n ---> Running in 05ed065a1723\n\u001b[91mstandard_init_linux.go:190: exec user process caused \"exec format error\"\n\u001b[0m",
    "raw_stderr_log": "The command '/bin/sh -c echo $'WARNING: Systemd is not available on this base image! \\nSystemd was included in Debian wheezy as a technology preview. Therefore, we do not install systemd on wheezy images and INITSYSTEM will not work.'' returned a non-zero code: 1",
    "html_url": "https://github.com/edenbaus/DataSciencePi",
    "repo_commit": "48b43ce5ecffcbfad11df2cf7ae30a9301deb793",
    "repo_id": 94800177
  }
]