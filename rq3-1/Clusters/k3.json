[
  {
    "raw_dockerfile": "FROM ${REGISTRY}/alpine-node:8.11.4\n\nRUN mkdir -p /home/src\n\nEXPOSE 3000\n\nENV NODE_ENV docker\nENV MONGO_HOST mongo\nENV POSTGRES_HOST postgres\n\nWORKDIR /home/src\n\nCOPY . /home/src\n\nCMD node bin/index.js",
    "raw_stdout_log": "Sending build context to Docker daemon  3.212MB\r\r\nStep 1/9 : FROM ${REGISTRY}/alpine-node:8.11.4",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/EdgeVerve/oe-workflow",
    "repo_commit": "229c8c6686b4c867a2d558b9ced83c759b7d8da2",
    "repo_id": 110961666
  },
  {
    "raw_dockerfile": "ARG CUDA\nFrom nvidia/cuda:${CUDA}-devel\nARG CUDA\n\nRUN apt-get update && apt-get install -y python-pip python-dev build-essential libyaml-dev git wget xml-twig-tools libsort-naturally-perl default-jre sox cmake mercurial\nRUN pip install --upgrade pip\nRUN cd /opt && \\\n    git clone https://github.com/isl-mt/SLT.KIT.git\n#PyTorch\nRUN /opt/SLT.KIT/DownloadPyTorch.sh ${CUDA}\nRUN pip install torchvision\nRUN pip install -U numpy\nRUN pip install nltk\nRUN pip install subword-nmt\n\nRUN cd /opt && \\\n    git clone https://github.com/quanpn90/OpenNMT-py\n\nRUN cd /opt && \\\n    git clone https://github.com/moses-smt/mosesdecoder.git\n\nRUN cd /opt && \\\n    git clone https://github.com/rsennrich/subword-nmt.git\n\nRUN cd /opt && \\\n    wget http://www.cs.umd.edu/%7Esnover/tercom/tercom-0.7.25.tgz && \\\n    tar xfvz tercom-0.7.25.tgz\n\nRUN cd /opt && wget https://raw.githubusercontent.com/stanojevic/beer/master/packaged/beer_2.0.tar.gz && tar xfvz beer_2.0.tar.gz\nRUN cd /opt && git clone https://github.com/rwth-i6/CharacTER.git\nRUN cd /opt && wget https://www-i6.informatik.rwth-aachen.de/web/Software/mwerSegmenter.tar.gz && tar xzvf mwerSegmenter.tar.gz\n\n# Speaker Diarization\nRUN cd /opt && \\\n    wget --no-check-certificate https://git-lium.univ-lemans.fr/Meignier/lium-spkdiarization/raw/660f866a9b80442d721c3454c9e59b3b62d8eab9/jar/lium_spkdiarization-8.4.1.jar.gz && \\\n    gunzip lium_spkdiarization-8.4.1.jar.gz\n\n# Anaconda\nRUN wget https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh\nRUN chmod 755 Anaconda3*.sh\nRUN ./Anaconda3*.sh -b\nRUN /root/anaconda3/bin/pip install --upgrade pip\n\n# DyNet\nRUN cd /opt && hg clone https://bitbucket.org/eigen/eigen/ -r b2e267d\nRUN cd /opt && git clone https://github.com/clab/dynet.git && mkdir -p /opt/dynet/build\nRUN cd /opt/dynet/build && cmake /opt/dynet -DEIGEN3_INCLUDE_DIR=/opt/eigen -DBACKEND=cuda -DPYTHON=/root/anaconda3/bin/python && make\nRUN cd /opt/dynet/build/python && /root/anaconda3/bin/python /opt/dynet/setup.py build --build-dir=/opt/dynet/build --skip-build install\n\n# XNMT\nRUN cd /opt && git clone -b iwslt2018 https://github.com/neulab/xnmt.git && cd /opt/xnmt && /root/anaconda3/bin/pip install -r requirements.txt && /root/anaconda3/bin/pip install -r requirements-extra.txt && /root/anaconda3/bin/python setup.py install\n\n# PYTORCH-CTC\n## CTC.ISL\nRUN /opt/SLT.KIT/DownloadPyTorch-Anaconda.sh ${CUDA}\nRUN /root/anaconda3/bin/pip install torchvision\nRUN cd /opt && \\\n    git clone https://github.com/markus-m-u-e-l-l-e-r/CTC.ISL && cd CTC.ISL && /root/anaconda3/bin/pip install -r requirements.txt\n## warp-ctc and pytorch binding\nRUN cd /opt && \\\n    git clone https://github.com/SeanNaren/warp-ctc/ && cd /opt/warp-ctc && git reset --hard 8cdd6e57913e8f54d620cc8d07069c76167e7daa\nRUN mkdir /opt/warp-ctc/build && cd /opt/warp-ctc/build && cmake .. && make\nRUN export CUDA_HOME=\"/usr/local/cuda\" && cd /opt/warp-ctc/pytorch_binding && /root/anaconda3/bin/python setup.py install\n\n# ASR Scoring NIST Scoring Toolkit\nRUN cd /opt && wget http://www.openslr.org/resources/4/sctk-2.4.10-20151007-1312Z.tar.bz2 && tar jxf sctk-2.4.10-20151007-1312Z.tar.bz2 && rm sctk-2.4.10-20151007-1312Z.tar.bz2\nRUN cd /opt/sctk-2.4.10 && make config && make all && make install && make doc",
    "raw_stdout_log": "Sending build context to Docker daemon  811.5kB\r\r\nStep 1/36 : ARG CUDA\nStep 2/36 : From nvidia/cuda:${CUDA}-devel",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/jniehues-kit/SLT.KIT",
    "repo_commit": "d0b54c7e978bdd5fdcbd764932b55647db83baad",
    "repo_id": 116822558
  },
  {
    "raw_dockerfile": "ARG RASA_SDK_VERSION\nFROM rasa/rasa-sdk:$RASA_SDK_VERSION\n\n# copy in your source code\nCOPY main.py .\n\nCMD [\"run\", \"python\", \"/app/main.py\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  132.1MB\r\r\nStep 1/4 : ARG RASA_SDK_VERSION\nStep 2/4 : FROM rasa/rasa-sdk:$RASA_SDK_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/RasaHQ/rasa-x-demo",
    "repo_commit": "55acca2cbfa623ad10f86f44f6d87373f21798ff",
    "repo_id": 117985836
  },
  {
    "raw_dockerfile": "FROM golang:1.13 as builder\n\nARG CC=\"\"\nARG CC_PKG=\"\"\nARG CC_GOARCH=\"\"\n\nADD . /go/src/github.com/rycus86/release-watcher\n\nRUN if [ -n \"$CC_PKG\" ]; then \\\n      apt-get update && apt-get install -y $CC_PKG; \\\n    fi \\\n    && export CC=$CC \\\n    && export GOOS=linux \\\n    && export GOARCH=$CC_GOARCH \\\n    && export CGO_ENABLED=1 \\\n    && go build -o /var/tmp/app -v github.com/rycus86/release-watcher\n\nFROM <target>\n\nLABEL maintainer \"Viktor Adam <rycus86@gmail.com>\"\n\nRUN    apt-get update \\\n    && apt-get install -y ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /var/tmp/app /release-watcher\n\nCMD [ \"/release-watcher\" ]",
    "raw_stdout_log": "Sending build context to Docker daemon  15.33MB\r\r\nStep 1/11 : FROM golang:1.13 as builder\n ---> e025aa1816e5\nStep 2/11 : ARG CC=\"\"\n ---> Running in a502a7f73be2\nRemoving intermediate container a502a7f73be2\n ---> 6e772cac3f2e\nStep 3/11 : ARG CC_PKG=\"\"\n ---> Running in 7ed6d186ceb5\nRemoving intermediate container 7ed6d186ceb5\n ---> 6452abc1c30f\nStep 4/11 : ARG CC_GOARCH=\"\"\n ---> Running in 0e02c8e70404\nRemoving intermediate container 0e02c8e70404\n ---> 1807bbca094f\nStep 5/11 : ADD . /go/src/github.com/rycus86/release-watcher\n ---> c4f45979bd88\nStep 6/11 : RUN if [ -n \"$CC_PKG\" ]; then       apt-get update && apt-get install -y $CC_PKG;     fi     && export CC=$CC     && export GOOS=linux     && export GOARCH=$CC_GOARCH     && export CGO_ENABLED=1     && go build -o /var/tmp/app -v github.com/rycus86/release-watcher\n ---> Running in 9e73c70b4d9f\n\u001b[91mgithub.com/rycus86/release-watcher/model\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/env\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/github.com/google/go-querystring/query\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/gopkg.in/yaml.v2\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/github.com/mitchellh/mapstructure\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/transport\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/golang.org/x/net/context/ctxhttp\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/watcher\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/notifications\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/webhooks\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/golang.org/x/oauth2/internal\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/github.com/mattn/go-sqlite3\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/github.com/google/go-github/github\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/vendor/golang.org/x/oauth2\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/providers\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/config\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher/store\n\u001b[0m\u001b[91mgithub.com/rycus86/release-watcher\n\u001b[0mRemoving intermediate container 9e73c70b4d9f\n ---> d5471e0a48d6\nStep 7/11 : FROM <target>",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/rycus86/release-watcher",
    "repo_commit": "106b4db6dfcfd04c13bda67ede429ece6e79f8b1",
    "repo_id": 126096125
  },
  {
    "raw_dockerfile": "ARG tag\nFROM scannerresearch/scanner:${tag}-latest\nARG tag2\n\nWORKDIR /opt\n\n# Fixes travis pip failure\nRUN rm /usr/share/python-wheels/urllib3-1.13.1-py2.py3-none-any.whl && \\\n    rm /usr/share/python-wheels/requests-2.9.1-py2.py3-none-any.whl && \\\n    pip3 install requests[security] --upgrade -v\nRUN pip3 install face-alignment scipy pysrt\nRUN if [ \"$tag2\" = \"cpu\" ]; then pip3 install tensorflow==1.12.0; else pip3 install tensorflow-gpu==1.12.0; fi\nRUN git clone https://github.com/scanner-research/facenet && \\\n    git clone https://github.com/scanner-research/rude-carnie\nENV PYTHONPATH /opt/facenet/src:/opt/rude-carnie:$PYTHONPATH\n\n# pytorch (specific version for maskRCNN)\nRUN pip3 install torchvision==0.3.0 torch==1.1.0\n\n# Install PyTorch Detection\nRUN if [ \"$tag2\" = \"cpu\" ]; then FORCE_CUDA=\"0\"; else FORCE_CUDA=\"1\"; fi\nENV FORCE_CUDA=${FORCE_CUDA}\nRUN git clone https://github.com/facebookresearch/maskrcnn-benchmark.git \\\n && cd maskrcnn-benchmark \\\n && python3 setup.py build develop\nENV PYTHONPATH /opt/maskrcnn-benchmark:$PYTHONPATH\n\nRUN apt-get update && apt-get install -y jq\n\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | \\\n    tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update && apt-get install -y google-cloud-sdk kubectl\n\n# https://github.com/keras-team/keras/issues/9567#issuecomment-370887563\nRUN if [ \"$tag2\" != \"cpu\" ]; then \\\n    apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \\\n            libcudnn7=7.0.5.15-1+cuda9.0 \\\n            libcudnn7-dev=7.0.5.15-1+cuda9.0 && \\\n            rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nCOPY . scannertools\nRUN cd scannertools && pip3 install --upgrade setuptools && ./scripts/install-all.sh\n\nWORKDIR /app",
    "raw_stdout_log": "Sending build context to Docker daemon  1.174MB\r\r\nStep 1/20 : ARG tag\nStep 2/20 : FROM scannerresearch/scanner:${tag}-latest",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/scanner-research/scannertools",
    "repo_commit": "43409a90b4cb3d8de5b12be645f049af8287558b",
    "repo_id": 127669788
  },
  {
    "raw_dockerfile": "ARG target\nFROM golang:1.13-alpine\n\nARG goarch\nENV GOARCH $goarch\nENV GOOS linux\n\nENV GOPATH /go\nENV CGO_ENABLED 0\nENV GO111MODULE on\n\nRUN  \\\n  apk add --no-cache git && \\\n  git clone https://github.com/minio/minio && \\\n  cd minio && \\\n  go install -v -ldflags \"$(go run buildscripts/gen-ldflags.go)\" && \\\n  find /go/bin -name minio -exec cp -f {} /go/bin/minio \\;\n\nFROM $target/alpine:3.11\n\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL \\\n  maintainer=\"Jesse Stuart <hi@jessestuart.com>\" \\\n  org.label-schema.build-date=$BUILD_DATE \\\n  org.label-schema.url=\"https://hub.docker.com/r/jessestuart/minio/\" \\\n  org.label-schema.vcs-url=\"https://github.com/jessestuart/minio-multiarch\" \\\n  org.label-schema.vcs-ref=$VCS_REF \\\n  org.label-schema.version=$VERSION \\\n  org.label-schema.schema-version=\"1.0\"\n\nCOPY qemu-* /usr/bin/\n\nENV MINIO_UPDATE off\nENV MINIO_ACCESS_KEY_FILE=access_key \\\n    MINIO_SECRET_KEY_FILE=secret_key \\\n    MINIO_SSE_MASTER_KEY_FILE=sse_master_key\n\nEXPOSE 9000\n\nCOPY --from=0 /go/bin/minio /usr/bin/\nCOPY dockerscripts/docker-entrypoint.sh /usr/bin/\n\nRUN  \\\n  apk add --no-cache ca-certificates 'curl>7.61.0' 'su-exec>=0.2' && \\\n  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\nENTRYPOINT [\"/usr/bin/docker-entrypoint.sh\"]\n\nVOLUME [\"/data\"]\n\nCMD [\"minio\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  176.1kB\r\r\nStep 1/24 : ARG target\nStep 2/24 : FROM golang:1.13-alpine\n1.13-alpine: Pulling from library/golang\ndf20fa9351a1: Already exists\ned8968b2872e: Already exists\na92cc7c5fd73: Already exists\ne9b686f23470: Already exists\ne5ffe4cf9f04: Already exists\nDigest: sha256:4c475018cc22a3c1b1e42806467be68c61beef9f94cb4533960f5fdd53f631b4\nStatus: Downloaded newer image for golang:1.13-alpine\n ---> cea245765db1\nStep 3/24 : ARG goarch\n ---> Running in 111377cbf95b\nRemoving intermediate container 111377cbf95b\n ---> d1a0a4024089\nStep 4/24 : ENV GOARCH $goarch\n ---> Running in 8280295f0067\nRemoving intermediate container 8280295f0067\n ---> 774f2630855b\nStep 5/24 : ENV GOOS linux\n ---> Running in ea9a2034506d\nRemoving intermediate container ea9a2034506d\n ---> 37a4dfd7a587\nStep 6/24 : ENV GOPATH /go\n ---> Running in ea8cb1132646\nRemoving intermediate container ea8cb1132646\n ---> 4d089d15b11d\nStep 7/24 : ENV CGO_ENABLED 0\n ---> Running in 280aa96e7611\nRemoving intermediate container 280aa96e7611\n ---> fb752895e5ae\nStep 8/24 : ENV GO111MODULE on\n ---> Running in f8a6a2dc41e4\nRemoving intermediate container f8a6a2dc41e4\n ---> 34c8bd2902b8\nStep 9/24 : RUN    apk add --no-cache git &&   git clone https://github.com/minio/minio &&   cd minio &&   go install -v -ldflags \"$(go run buildscripts/gen-ldflags.go)\" &&   find /go/bin -name minio -exec cp -f {} /go/bin/minio \\;\n ---> Running in a897b4aec752\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz\n(1/5) Installing nghttp2-libs (1.41.0-r0)\n(2/5) Installing libcurl (7.69.1-r0)\n(3/5) Installing expat (2.2.9-r1)\n(4/5) Installing pcre2 (10.35-r0)\n(5/5) Installing git (2.26.2-r0)\nExecuting busybox-1.31.1-r16.trigger\nOK: 22 MiB in 20 packages\n\u001b[91mCloning into 'minio'...\n\u001b[0m\u001b[91mUpdating files:  70% (856/1206)\rUpdating files:  71% (857/1206)\r\u001b[0m\u001b[91mUpdating files:  72% (869/1206)\r\u001b[0m\u001b[91mUpdating files:  73% (881/1206)\r\u001b[0m\u001b[91mUpdating files:  74% (893/1206)\r\u001b[0m\u001b[91mUpdating files:  75% (905/1206)\r\u001b[0m\u001b[91mUpdating files:  76% (917/1206)\r\u001b[0m\u001b[91mUpdating files:  77% (929/1206)\r\u001b[0m\u001b[91mUpdating files:  78% (941/1206)\r\u001b[0m\u001b[91mUpdating files:  79% (953/1206)\r\u001b[0m\u001b[91mUpdating files:  80% (965/1206)\r\u001b[0m\u001b[91mUpdating files:  81% (977/1206)\r\u001b[0m\u001b[91mUpdating files:  82% (989/1206)\r\u001b[0m\u001b[91mUpdating files:  83% (1001/1206)\r\u001b[0m\u001b[91mUpdating files:  84% (1014/1206)\r\u001b[0m\u001b[91mUpdating files:  85% (1026/1206)\r\u001b[0m\u001b[91mUpdating files:  86% (1038/1206)\r\u001b[0m\u001b[91mUpdating files:  87% (1050/1206)\r\u001b[0m\u001b[91mUpdating files:  88% (1062/1206)\r\u001b[0m\u001b[91mUpdating files:  89% (1074/1206)\r\u001b[0m\u001b[91mUpdating files:  90% (1086/1206)\r\u001b[0m\u001b[91mUpdating files:  91% (1098/1206)\r\u001b[0m\u001b[91mUpdating files:  92% (1110/1206)\r\u001b[0m\u001b[91mUpdating files:  93% (1122/1206)\r\u001b[0m\u001b[91mUpdating files:  94% (1134/1206)\r\u001b[0m\u001b[91mUpdating files:  95% (1146/1206)\r\u001b[0m\u001b[91mUpdating files:  96% (1158/1206)\r\u001b[0m\u001b[91mUpdating files:  97% (1170/1206)\r\u001b[0m\u001b[91mUpdating files:  98% (1182/1206)\r\u001b[0m\u001b[91mUpdating files:  99% (1194/1206)\r\u001b[0m\u001b[91mUpdating files: 100% (1206/1206)\r\u001b[0m\u001b[91mUpdating files: 100% (1206/1206), done.\n\u001b[0m\u001b[91mgo: downloading github.com/minio/cli v1.22.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/jcmturner/gokrb5.v7 v7.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/minio/minio-go/v6 v6.0.58-0.20200612001654-a57fec8037ec\n\u001b[0m\u001b[91mgo: downloading github.com/colinmarc/hdfs/v2 v2.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/azure-storage-blob-go v0.8.0\n\u001b[0m\u001b[91mgo: downloading github.com/json-iterator/go v1.1.10\n\u001b[0m\u001b[91mgo: downloading github.com/minio/sha256-simd v0.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/shirou/gopsutil v2.20.3-0.20200314133625-53cec6b37e6a+incompatible\n\u001b[0m\u001b[91mgo: extracting github.com/json-iterator/go v1.1.10\n\u001b[0m\u001b[91mgo: extracting github.com/minio/sha256-simd v0.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/Azure/azure-storage-blob-go v0.8.0\n\u001b[0m\u001b[91mgo: downloading github.com/gorilla/mux v1.7.4\n\u001b[0m\u001b[91mgo: extracting github.com/shirou/gopsutil v2.20.3-0.20200314133625-53cec6b37e6a+incompatible\n\u001b[0m\u001b[91mgo: extracting github.com/minio/cli v1.22.0\n\u001b[0m\u001b[91mgo: extracting github.com/minio/minio-go/v6 v6.0.58-0.20200612001654-a57fec8037ec\n\u001b[0m\u001b[91mgo: extracting github.com/gorilla/mux v1.7.4\n\u001b[0m\u001b[91mgo: downloading cloud.google.com/go v0.39.0\n\u001b[0m\u001b[91mgo: extracting github.com/colinmarc/hdfs/v2 v2.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/gorilla/rpc v1.2.0\n\u001b[0m\u001b[91mgo: extracting github.com/gorilla/rpc v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/modern-go/reflect2 v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/modern-go/reflect2 v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/rjeczalik/notify v0.9.2\n\u001b[0m\u001b[91mgo: downloading google.golang.org/api v0.5.0\n\u001b[0m\u001b[91mgo: downloading github.com/rs/cors v1.7.0\n\u001b[0m\u001b[91mgo: extracting github.com/rjeczalik/notify v0.9.2\n\u001b[0m\u001b[91mgo: extracting github.com/rs/cors v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible\n\u001b[0m\u001b[91mgo: extracting cloud.google.com/go v0.39.0\n\u001b[0m\u001b[91mgo: extracting github.com/dgrijalva/jwt-go v3.2.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_golang v0.9.3\n\u001b[0m\u001b[91mgo: extracting github.com/prometheus/client_golang v0.9.3\n\u001b[0m\u001b[91mgo: downloading golang.org/x/sys v0.0.0-20200610111108-226ff32320da\n\u001b[0m\u001b[91mgo: downloading github.com/klauspost/readahead v1.3.1\n\u001b[0m\u001b[91mgo: downloading github.com/klauspost/reedsolomon v1.9.9\n\u001b[0m\u001b[91mgo: extracting github.com/klauspost/readahead v1.3.1\n\u001b[0m\u001b[91mgo: downloading gopkg.in/ldap.v3 v3.0.3\ngo: downloading github.com/dustin/go-humanize v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/dustin/go-humanize v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90\n\u001b[0m\u001b[91mgo: extracting golang.org/x/sys v0.0.0-20200610111108-226ff32320da\n\u001b[0m\u001b[91mgo: extracting gopkg.in/ldap.v3 v3.0.3\n\u001b[0m\u001b[91mgo: extracting github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90\n\u001b[0m\u001b[91mgo: extracting github.com/klauspost/reedsolomon v1.9.9\n\u001b[0m\u001b[91mgo: downloading github.com/miekg/dns v1.1.8\n\u001b[0m\u001b[91mgo: downloading github.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf\n\u001b[0m\u001b[91mgo: extracting github.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf\n\u001b[0m\u001b[91mgo: downloading github.com/elazarl/go-bindata-assetfs v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/miekg/dns v1.1.8\n\u001b[0m\u001b[91mgo: downloading github.com/djherbis/atime v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/elazarl/go-bindata-assetfs v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/djherbis/atime v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/klauspost/pgzip v1.2.1\n\u001b[0m\u001b[91mgo: extracting github.com/klauspost/pgzip v1.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/azure-pipeline-go v0.2.1\n\u001b[0m\u001b[91mgo: extracting github.com/Azure/azure-pipeline-go v0.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/ncw/directio v1.0.5\n\u001b[0m\u001b[91mgo: extracting github.com/ncw/directio v1.0.5\n\u001b[0m\u001b[91mgo: downloading github.com/google/uuid v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/vault/api v1.0.4\n\u001b[0m\u001b[91mgo: extracting github.com/google/uuid v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/etcd v3.3.12+incompatible\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/vault/api v1.0.4\n\u001b[0m\u001b[91mgo: downloading gopkg.in/square/go-jose.v2 v2.3.1\n\u001b[0m\u001b[91mgo: extracting gopkg.in/square/go-jose.v2 v2.3.1\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/vault/sdk v0.1.13\n\u001b[0m\u001b[91mgo: extracting github.com/coreos/etcd v3.3.12+incompatible\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/vault/sdk v0.1.13\n\u001b[0m\u001b[91mgo: downloading github.com/klauspost/compress v1.10.3\n\u001b[0m\u001b[91mgo: downloading github.com/fatih/color v1.7.0\n\u001b[0m\u001b[91mgo: extracting github.com/fatih/color v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-colorable v0.1.4\n\u001b[0m\u001b[91mgo: extracting github.com/mattn/go-colorable v0.1.4\n\u001b[0m\u001b[91mgo: extracting google.golang.org/api v0.5.0\n\u001b[0m\u001b[91mgo: extracting gopkg.in/jcmturner/gokrb5.v7 v7.3.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/crypto v0.0.0-20200604202706-70a84ac30bf9\n\u001b[0m\u001b[91mgo: downloading github.com/valyala/tcplisten v0.0.0-20161114210144-ceec8f93295a\n\u001b[0m\u001b[91mgo: extracting github.com/valyala/tcplisten v0.0.0-20161114210144-ceec8f93295a\n\u001b[0m\u001b[91mgo: downloading github.com/minio/sio v0.2.0\n\u001b[0m\u001b[91mgo: extracting github.com/minio/sio v0.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/montanaflynn/stats v0.5.0\n\u001b[0m\u001b[91mgo: extracting golang.org/x/crypto v0.0.0-20200604202706-70a84ac30bf9\n\u001b[0m\u001b[91mgo: extracting github.com/montanaflynn/stats v0.5.0\n\u001b[0m\u001b[91mgo: extracting github.com/klauspost/compress v1.10.3\n\u001b[0m\u001b[91mgo: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n\u001b[0m\u001b[91mgo: downloading github.com/googleapis/gax-go/v2 v2.0.4\ngo: downloading github.com/mattn/go-isatty v0.0.8\n\u001b[0m\u001b[91mgo: downloading google.golang.org/grpc v1.22.0\n\u001b[0m\u001b[91mgo: extracting github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n\u001b[0m\u001b[91mgo: downloading github.com/secure-io/sio-go v0.3.0\n\u001b[0m\u001b[91mgo: extracting github.com/mattn/go-isatty v0.0.8\ngo: extracting github.com/googleapis/gax-go/v2 v2.0.4\n\u001b[0m\u001b[91mgo: downloading github.com/cespare/xxhash v1.1.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/net v0.0.0-20200602114024-627f9648deb9\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/common v0.4.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/jcmturner/goidentity.v3 v3.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/cespare/xxhash v1.1.0\n\u001b[0m\u001b[91mgo: extracting gopkg.in/jcmturner/goidentity.v3 v3.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/secure-io/sio-go v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/cespare/xxhash/v2 v2.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/prometheus/common v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/minio/highwayhash v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/cespare/xxhash/v2 v2.1.1\n\u001b[0m\u001b[91mgo: extracting google.golang.org/grpc v1.22.0\n\u001b[0m\u001b[91mgo: extracting github.com/minio/highwayhash v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/tinylib/msgp v1.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/tinylib/msgp v1.1.1\n\u001b[0m\u001b[91mgo: extracting golang.org/x/net v0.0.0-20200602114024-627f9648deb9\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-rootcerts v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-rootcerts v1.0.1\n\u001b[0m\u001b[91mgo: downloading gopkg.in/jcmturner/dnsutils.v1 v1.0.1\n\u001b[0m\u001b[91mgo: downloading google.golang.org/genproto v0.0.0-20190513181449-d00d292a067c\n\u001b[0m\u001b[91mgo: extracting gopkg.in/jcmturner/dnsutils.v1 v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-sockaddr v1.0.2\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-sockaddr v1.0.2\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-uuid v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-uuid v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/coredns/coredns v1.4.0\n\u001b[0m\u001b[91mgo: extracting github.com/coredns/coredns v1.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-cleanhttp v0.5.1\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-cleanhttp v0.5.1\n\u001b[0m\u001b[91mgo: downloading golang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a\n\u001b[0m\u001b[91mgo: downloading github.com/nats-io/stan.go v0.4.5\n\u001b[0m\u001b[91mgo: downloading go.opencensus.io v0.21.0\n\u001b[0m\u001b[91mgo: extracting google.golang.org/genproto v0.0.0-20190513181449-d00d292a067c\n\u001b[0m\u001b[91mgo: extracting golang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a\n\u001b[0m\u001b[91mgo: extracting go.opencensus.io v0.21.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/asn1-ber.v1 v1.0.0-20181015200546-f715ec2f112d\n\u001b[0m\u001b[91mgo: downloading github.com/beevik/ntp v0.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-retryablehttp v0.5.4\n\u001b[0m\u001b[91mgo: downloading github.com/philhofer/fwd v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/nats-io/stan.go v0.4.5\n\u001b[0m\u001b[91mgo: extracting github.com/beevik/ntp v0.2.0\n\u001b[0m\u001b[91mgo: extracting gopkg.in/asn1-ber.v1 v1.0.0-20181015200546-f715ec2f112d\n\u001b[0m\u001b[91mgo: downloading github.com/gogo/protobuf v1.2.1\n\u001b[0m\u001b[91mgo: extracting github.com/matttproud/golang_protobuf_extensions v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-retryablehttp v0.5.4\n\u001b[0m\u001b[91mgo: downloading github.com/lib/pq v1.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/philhofer/fwd v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/fatih/structs v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/gomodule/redigo v2.0.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/bcicen/jstream v0.0.0-20190220045926-16c1f8af81c2\n\u001b[0m\u001b[91mgo: extracting github.com/lib/pq v1.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/fatih/structs v1.1.0\n\u001b[0m\u001b[91mgo: extracting github.com/gomodule/redigo v2.0.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/beorn7/perks v1.0.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/olivere/elastic.v5 v5.0.80\n\u001b[0m\u001b[91mgo: extracting github.com/bcicen/jstream v0.0.0-20190220045926-16c1f8af81c2\n\u001b[0m\u001b[91mgo: extracting github.com/beorn7/perks v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/klauspost/cpuid v1.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/golang/protobuf v1.3.2\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/errwrap v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/errwrap v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/klauspost/cpuid v1.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/minio/parquet-go v0.0.0-20200414234858-838cfa8aae61\n\u001b[0m\u001b[91mgo: extracting github.com/golang/protobuf v1.3.2\n\u001b[0m\u001b[91mgo: extracting gopkg.in/olivere/elastic.v5 v5.0.80\n\u001b[0m\u001b[91mgo: downloading github.com/alecthomas/participle v0.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/golang/snappy v0.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/xdg/scram v0.0.0-20180814205039-7eeb5667e42c\n\u001b[0m\u001b[91mgo: extracting github.com/golang/snappy v0.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/alecthomas/participle v0.2.1\n\u001b[0m\u001b[91mgo: extracting github.com/xdg/scram v0.0.0-20180814205039-7eeb5667e42c\ngo: extracting github.com/minio/parquet-go v0.0.0-20200414234858-838cfa8aae61\n\u001b[0m\u001b[91mgo: downloading github.com/minio/md5-simd v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084\n\u001b[0m\u001b[91mgo: extracting github.com/gogo/protobuf v1.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-ieproxy v0.0.0-20190805055040-f9202b1cfdeb\n\u001b[0m\u001b[91mgo: extracting github.com/minio/md5-simd v1.1.0\n\u001b[0m\u001b[91mgo: extracting github.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084\n\u001b[0m\u001b[91mgo: extracting github.com/mattn/go-ieproxy v0.0.0-20190805055040-f9202b1cfdeb\n\u001b[0m\u001b[91mgo: downloading github.com/go-sql-driver/mysql v1.5.0\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/hcl v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/ryanuber/go-glob v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/go-sql-driver/mysql v1.5.0\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/hcl v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/ryanuber/go-glob v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/gorilla/handlers v1.4.2\n\u001b[0m\u001b[91mgo: extracting github.com/gorilla/handlers v1.4.2\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/golang-lru v0.5.1\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/golang-lru v0.5.1\n\u001b[0m\u001b[91mgo: downloading github.com/nats-io/nats.go v1.9.1\ngo: downloading github.com/Shopify/sarama v1.24.1\n\u001b[0m\u001b[91mgo: downloading github.com/minio/simdjson-go v0.1.5-0.20200303142138-b17fe061ea37\n\u001b[0m\u001b[91mgo: extracting github.com/nats-io/nats.go v1.9.1\n\u001b[0m\u001b[91mgo: downloading github.com/nsqio/go-nsq v1.0.7\n\u001b[0m\u001b[91mgo: downloading gopkg.in/yaml.v2 v2.2.8\n\u001b[0m\u001b[91mgo: extracting github.com/Shopify/sarama v1.24.1\n\u001b[0m\u001b[91mgo: downloading github.com/pierrec/lz4 v2.4.0+incompatible\n\u001b[0m\u001b[91mgo: extracting gopkg.in/yaml.v2 v2.2.8\n\u001b[0m\u001b[91mgo: extracting github.com/nsqio/go-nsq v1.0.7\n\u001b[0m\u001b[91mgo: extracting github.com/minio/simdjson-go v0.1.5-0.20200303142138-b17fe061ea37\n\u001b[0m\u001b[91mgo: downloading golang.org/x/time v0.0.0-20190308202827-9d24e82272b4\n\u001b[0m\u001b[91mgo: downloading github.com/nats-io/nuid v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/cheggaaa/pb v1.0.28\n\u001b[0m\u001b[91mgo: extracting github.com/nats-io/nuid v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/eapache/queue v1.1.0\n\u001b[0m\u001b[91mgo: extracting golang.org/x/time v0.0.0-20190308202827-9d24e82272b4\n\u001b[0m\u001b[91mgo: extracting github.com/eapache/queue v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/nats-io/nkeys v0.1.3\n\u001b[0m\u001b[91mgo: downloading github.com/mitchellh/mapstructure v1.1.2\n\u001b[0m\u001b[91mgo: extracting github.com/cheggaaa/pb v1.0.28\n\u001b[0m\u001b[91mgo: downloading github.com/jcmturner/gofork v0.0.0-20190328161633-dc7c13fece03\n\u001b[0m\u001b[91mgo: extracting github.com/nats-io/nkeys v0.1.3\n\u001b[0m\u001b[91mgo: extracting github.com/mitchellh/mapstructure v1.1.2\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/go-multierror v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/jcmturner/gofork v0.0.0-20190328161633-dc7c13fece03\n\u001b[0m\u001b[91mgo: extracting github.com/hashicorp/go-multierror v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/davecgh/go-spew v1.1.1\n\u001b[0m\u001b[91mgo: extracting github.com/davecgh/go-spew v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/nats-io/jwt v0.3.2\n\u001b[0m\u001b[91mgo: downloading github.com/rcrowley/go-metrics v0.0.0-20190704165056-9c2d0518ed81\n\u001b[0m\u001b[91mgo: downloading gopkg.in/jcmturner/rpc.v1 v1.1.0\n\u001b[0m\u001b[91mgo: extracting github.com/nats-io/jwt v0.3.2\n\u001b[0m\u001b[91mgo: extracting github.com/rcrowley/go-metrics v0.0.0-20190704165056-9c2d0518ed81\n\u001b[0m\u001b[91mgo: extracting gopkg.in/jcmturner/rpc.v1 v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/sjson v1.0.4\n\u001b[0m\u001b[91mgo: downloading github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94\n\u001b[0m\u001b[91mgo: extracting github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94\n\u001b[0m\u001b[91mgo: extracting github.com/tidwall/sjson v1.0.4\n\u001b[0m\u001b[91mgo: downloading github.com/xdg/stringprep v1.0.0\n\u001b[0m\u001b[91mgo: extracting github.com/xdg/stringprep v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21\n\u001b[0m\u001b[91mgo: extracting github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21\n\u001b[0m\u001b[91mgo: downloading gopkg.in/jcmturner/aescts.v1 v1.0.1\n\u001b[0m\u001b[91mgo: extracting gopkg.in/jcmturner/aescts.v1 v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/gjson v1.3.5\n\u001b[0m\u001b[91mgo: extracting github.com/tidwall/gjson v1.3.5\n\u001b[0m\u001b[91mgo: downloading github.com/willf/bloom v2.0.3+incompatible\n\u001b[0m\u001b[91mgo: downloading gopkg.in/ini.v1 v1.57.0\n\u001b[0m\u001b[91mgo: extracting github.com/willf/bloom v2.0.3+incompatible\n\u001b[0m\u001b[91mgo: extracting gopkg.in/ini.v1 v1.57.0\n\u001b[0m\u001b[91mgo: downloading github.com/mitchellh/go-homedir v1.1.0\n\u001b[0m\u001b[91mgo: downloading git.apache.org/thrift.git v0.13.0\n\u001b[0m\u001b[91mgo: extracting github.com/mitchellh/go-homedir v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/spaolacci/murmur3 v1.1.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/text v0.3.2\n\u001b[0m\u001b[91mgo: extracting github.com/pierrec/lz4 v2.4.0+incompatible\n\u001b[0m\u001b[91mgo: extracting github.com/spaolacci/murmur3 v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-runewidth v0.0.4\n\u001b[0m\u001b[91mgo: extracting github.com/mattn/go-runewidth v0.0.4\n\u001b[0m\u001b[91mgo: downloading github.com/pkg/errors v0.8.1\n\u001b[0m\u001b[91mgo: extracting github.com/pkg/errors v0.8.1\n\u001b[0m\u001b[91mgo: downloading github.com/mailru/easyjson v0.0.0-20180730094502-03f2033d19d5\n\u001b[0m\u001b[91mgo: extracting github.com/mailru/easyjson v0.0.0-20180730094502-03f2033d19d5\n\u001b[0m\u001b[91mgo: downloading github.com/eapache/go-resiliency v1.2.0\n\u001b[0m\u001b[91mgo: extracting git.apache.org/thrift.git v0.13.0\n\u001b[0m\u001b[91mgo: extracting github.com/eapache/go-resiliency v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/eclipse/paho.mqtt.golang v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/pretty v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/match v1.0.1\n\u001b[0m\u001b[91mgo: extracting golang.org/x/text v0.3.2\n\u001b[0m\u001b[91mgo: extracting github.com/tidwall/match v1.0.1\n\u001b[0m\u001b[91mgo: extracting github.com/tidwall/pretty v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/willf/bitset v1.1.10\n\u001b[0m\u001b[91mgo: extracting github.com/eclipse/paho.mqtt.golang v1.2.0\n\u001b[0m\u001b[91mgo: extracting github.com/willf/bitset v1.1.10\n\u001b[0m\u001b[91mgo: finding gopkg.in/jcmturner/gokrb5.v7 v7.3.0\n\u001b[0m\u001b[91mgo: finding github.com/minio/cli v1.22.0\n\u001b[0m\u001b[91mgo: finding github.com/minio/sha256-simd v0.1.1\n\u001b[0m\u001b[91mgo: finding github.com/Azure/azure-pipeline-go v0.2.1\n\u001b[0m\u001b[91mgo: finding github.com/minio/minio-go/v6 v6.0.58-0.20200612001654-a57fec8037ec\n\u001b[0m\u001b[91mgo: finding github.com/colinmarc/hdfs/v2 v2.1.1\n\u001b[0m\u001b[91mgo: finding github.com/dustin/go-humanize v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/json-iterator/go v1.1.10\ngo: finding cloud.google.com/go v0.39.0\n\u001b[0m\u001b[91mgo: finding github.com/Azure/azure-storage-blob-go v0.8.0\n\u001b[0m\u001b[91mgo: finding github.com/minio/highwayhash v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/montanaflynn/stats v0.5.0\n\u001b[0m\u001b[91mgo: finding github.com/gorilla/mux v1.7.4\n\u001b[0m\u001b[91mgo: finding github.com/dgrijalva/jwt-go v3.2.0+incompatible\n\u001b[0m\u001b[91mgo: finding github.com/fatih/color v1.7.0\n\u001b[0m\u001b[91mgo: finding google.golang.org/api v0.5.0\n\u001b[0m\u001b[91mgo: finding github.com/valyala/tcplisten v0.0.0-20161114210144-ceec8f93295a\n\u001b[0m\u001b[91mgo: finding github.com/mattn/go-colorable v0.1.4\n\u001b[0m\u001b[91mgo: finding github.com/mattn/go-isatty v0.0.8\n\u001b[0m\u001b[91mgo: finding github.com/rjeczalik/notify v0.9.2\n\u001b[0m\u001b[91mgo: finding golang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/go-uuid v1.0.1\n\u001b[0m\u001b[91mgo: finding github.com/jcmturner/gofork v0.0.0-20190328161633-dc7c13fece03\n\u001b[0m\u001b[91mgo: finding golang.org/x/sys v0.0.0-20200610111108-226ff32320da\ngo: finding github.com/mattn/go-ieproxy v0.0.0-20190805055040-f9202b1cfdeb\n\u001b[0m\u001b[91mgo: finding gopkg.in/jcmturner/dnsutils.v1 v1.0.1\n\u001b[0m\u001b[91mgo: finding golang.org/x/crypto v0.0.0-20200604202706-70a84ac30bf9\n\u001b[0m\u001b[91mgo: finding github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n\u001b[0m\u001b[91mgo: finding github.com/googleapis/gax-go/v2 v2.0.4\n\u001b[0m\u001b[91mgo: finding github.com/modern-go/reflect2 v1.0.1\n\u001b[0m\u001b[91mgo: finding google.golang.org/genproto v0.0.0-20190513181449-d00d292a067c\n\u001b[0m\u001b[91mgo: finding google.golang.org/grpc v1.22.0\n\u001b[0m\u001b[91mgo: finding github.com/mitchellh/go-homedir v1.1.0\n\u001b[0m\u001b[91mgo: finding go.opencensus.io v0.21.0\ngo: finding github.com/golang/protobuf v1.3.2\n\u001b[0m\u001b[91mgo: finding gopkg.in/ini.v1 v1.57.0\n\u001b[0m\u001b[91mgo: finding github.com/minio/md5-simd v1.1.0\n\u001b[0m\u001b[91mgo: finding golang.org/x/net v0.0.0-20200602114024-627f9648deb9\ngo: finding github.com/secure-io/sio-go v0.3.0\n\u001b[0m\u001b[91mgo: finding github.com/cespare/xxhash/v2 v2.1.1\n\u001b[0m\u001b[91mgo: finding github.com/shirou/gopsutil v2.20.3-0.20200314133625-53cec6b37e6a+incompatible\n\u001b[0m\u001b[91mgo: finding github.com/cheggaaa/pb v1.0.28\n\u001b[0m\u001b[91mgo: finding github.com/coreos/etcd v3.3.12+incompatible\ngo: finding github.com/ncw/directio v1.0.5\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/golang-lru v0.5.1\n\u001b[0m\u001b[91mgo: finding gopkg.in/jcmturner/goidentity.v3 v3.0.0\ngo: finding gopkg.in/jcmturner/aescts.v1 v1.0.1\ngo: finding github.com/elazarl/go-bindata-assetfs v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/djherbis/atime v1.0.0\ngo: finding github.com/klauspost/cpuid v1.3.0\n\u001b[0m\u001b[91mgo: finding github.com/google/uuid v1.1.1\ngo: finding github.com/gorilla/handlers v1.4.2\n\u001b[0m\u001b[91mgo: finding github.com/gorilla/rpc v1.2.0\n\u001b[0m\u001b[91mgo: finding github.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf\n\u001b[0m\u001b[91mgo: finding github.com/klauspost/compress v1.10.3\n\u001b[0m\u001b[91mgo: finding github.com/klauspost/readahead v1.3.1\n\u001b[0m\u001b[91mgo: finding github.com/klauspost/reedsolomon v1.9.9\n\u001b[0m\u001b[91mgo: finding github.com/miekg/dns v1.1.8\n\u001b[0m\u001b[91mgo: finding golang.org/x/text v0.3.2\n\u001b[0m\u001b[91mgo: finding gopkg.in/jcmturner/rpc.v1 v1.1.0\n\u001b[0m\u001b[91mgo: finding github.com/mattn/go-runewidth v0.0.4\n\u001b[0m\u001b[91mgo: finding github.com/gogo/protobuf v1.2.1\n\u001b[0m\u001b[91mgo: finding github.com/coredns/coredns v1.4.0\n\u001b[0m\u001b[91mgo: finding gopkg.in/ldap.v3 v3.0.3\n\u001b[0m\u001b[91mgo: finding github.com/beevik/ntp v0.2.0\n\u001b[0m\u001b[91mgo: finding github.com/minio/sio v0.2.0\n\u001b[0m\u001b[91mgo: finding github.com/Shopify/sarama v1.24.1\n\u001b[0m\u001b[91mgo: finding github.com/fatih/structs v1.1.0\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/vault/api v1.0.4\n\u001b[0m\u001b[91mgo: finding github.com/willf/bloom v2.0.3+incompatible\n\u001b[0m\u001b[91mgo: finding github.com/nats-io/nats.go v1.9.1\n\u001b[0m\u001b[91mgo: finding github.com/pkg/errors v0.8.1\n\u001b[0m\u001b[91mgo: finding github.com/nsqio/go-nsq v1.0.7\n\u001b[0m\u001b[91mgo: finding github.com/xdg/scram v0.0.0-20180814205039-7eeb5667e42c\n\u001b[0m\u001b[91mgo: finding github.com/rs/cors v1.7.0\n\u001b[0m\u001b[91mgo: finding github.com/prometheus/client_golang v0.9.3\n\u001b[0m\u001b[91mgo: finding github.com/eclipse/paho.mqtt.golang v1.2.0\n\u001b[0m\u001b[91mgo: finding github.com/gomodule/redigo v2.0.0+incompatible\ngo: finding github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94\n\u001b[0m\u001b[91mgo: finding github.com/tinylib/msgp v1.1.1\n\u001b[0m\u001b[91mgo: finding github.com/nats-io/stan.go v0.4.5\n\u001b[0m\u001b[91mgo: finding github.com/lib/pq v1.1.1\n\u001b[0m\u001b[91mgo: finding github.com/go-sql-driver/mysql v1.5.0\n\u001b[0m\u001b[91mgo: finding gopkg.in/yaml.v2 v2.2.8\n\u001b[0m\u001b[91mgo: finding github.com/bcicen/jstream v0.0.0-20190220045926-16c1f8af81c2\n\u001b[0m\u001b[91mgo: finding github.com/minio/parquet-go v0.0.0-20200414234858-838cfa8aae61\n\u001b[0m\u001b[91mgo: finding github.com/klauspost/pgzip v1.2.1\n\u001b[0m\u001b[91mgo: finding github.com/minio/simdjson-go v0.1.5-0.20200303142138-b17fe061ea37\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/errwrap v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/go-cleanhttp v0.5.1\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/vault/sdk v0.1.13\ngo: finding github.com/hashicorp/go-rootcerts v1.0.1\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/hcl v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/nats-io/nuid v1.0.1\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/go-multierror v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/alecthomas/participle v0.2.1\n\u001b[0m\u001b[91mgo: finding github.com/nats-io/nkeys v0.1.3\n\u001b[0m\u001b[91mgo: finding github.com/mitchellh/mapstructure v1.1.2\ngo: finding gopkg.in/asn1-ber.v1 v1.0.0-20181015200546-f715ec2f112d\n\u001b[0m\u001b[91mgo: finding github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90\n\u001b[0m\u001b[91mgo: finding github.com/xdg/stringprep v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/go-retryablehttp v0.5.4\n\u001b[0m\u001b[91mgo: finding github.com/beorn7/perks v1.0.0\n\u001b[0m\u001b[91mgo: finding golang.org/x/time v0.0.0-20190308202827-9d24e82272b4\ngo: finding github.com/nats-io/jwt v0.3.2\n\u001b[0m\u001b[91mgo: finding gopkg.in/square/go-jose.v2 v2.3.1\n\u001b[0m\u001b[91mgo: finding github.com/eapache/go-resiliency v1.2.0\n\u001b[0m\u001b[91mgo: finding github.com/eapache/queue v1.1.0\n\u001b[0m\u001b[91mgo: finding github.com/prometheus/common v0.4.0\n\u001b[0m\u001b[91mgo: finding github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21\n\u001b[0m\u001b[91mgo: finding github.com/spaolacci/murmur3 v1.1.0\n\u001b[0m\u001b[91mgo: finding github.com/pierrec/lz4 v2.4.0+incompatible\n\u001b[0m\u001b[91mgo: finding github.com/willf/bitset v1.1.10\n\u001b[0m\u001b[91mgo: finding github.com/davecgh/go-spew v1.1.1\n\u001b[0m\u001b[91mgo: finding github.com/rcrowley/go-metrics v0.0.0-20190704165056-9c2d0518ed81\n\u001b[0m\u001b[91mgo: finding github.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084\n\u001b[0m\u001b[91mgo: finding github.com/golang/snappy v0.0.1\ngo: finding github.com/philhofer/fwd v1.0.0\n\u001b[0m\u001b[91mgo: finding gopkg.in/olivere/elastic.v5 v5.0.80\n\u001b[0m\u001b[91mgo: finding github.com/ryanuber/go-glob v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/hashicorp/go-sockaddr v1.0.2\n\u001b[0m\u001b[91mgo: finding github.com/tidwall/sjson v1.0.4\n\u001b[0m\u001b[91mgo: finding github.com/tidwall/gjson v1.3.5\n\u001b[0m\u001b[91mgo: finding github.com/matttproud/golang_protobuf_extensions v1.0.1\n\u001b[0m\u001b[91mgo: finding git.apache.org/thrift.git v0.13.0\n\u001b[0m\u001b[91mgo: finding github.com/tidwall/pretty v1.0.0\n\u001b[0m\u001b[91mgo: finding github.com/tidwall/match v1.0.1\n\u001b[0m\u001b[91mgo: finding github.com/mailru/easyjson v0.0.0-20180730094502-03f2033d19d5\n\u001b[0m\u001b[91mgo.opencensus.io/trace/internal\n\u001b[0m\u001b[91mgithub.com/eapache/queue\n\u001b[0m\u001b[91mgithub.com/tidwall/match\n\u001b[0m\u001b[91mgolang.org/x/net/internal/iana\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/flags\ngopkg.in/jcmturner/gokrb5.v7/iana/asnAppTag\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/wildcard\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana\n\u001b[0m\u001b[91mgolang.org/x/crypto/internal/subtle\n\u001b[0m\u001b[91mgo.opencensus.io\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/patype\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/chksumtype\ngopkg.in/jcmturner/gokrb5.v7/iana/nametype\ngopkg.in/jcmturner/gokrb5.v7/iana/keyusage\n\u001b[0m\u001b[91mgolang.org/x/sys/internal/unsafeheader\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/etypeID\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/msgtype\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/adtype\ngopkg.in/jcmturner/gokrb5.v7/iana/addrtype\n\u001b[0m\u001b[91mgithub.com/lib/pq/oid\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bpool\n\u001b[0m\u001b[91mgo.opencensus.io/internal/tagencoding\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/trie\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/words\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/strconv\ngithub.com/hashicorp/golang-lru/simplelru\ngoogle.golang.org/grpc/internal/grpcsync\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/pubsub\ngithub.com/minio/minio/pkg/sync/errgroup\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/crypto/etype\ngithub.com/mailru/easyjson/buffer\n\u001b[0m\u001b[91mgolang.org/x/crypto/md4\ngithub.com/tidwall/pretty\ngithub.com/beorn7/perks/quantile\n\u001b[0m\u001b[91mgolang.org/x/crypto/pbkdf2\n\u001b[0m\u001b[91mgithub.com/gomodule/redigo/internal\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/encoding\ngolang.org/x/text/transform\n\u001b[0m\u001b[91mgithub.com/klauspost/cpuid\n\u001b[0m\u001b[91mgithub.com/cespare/xxhash/v2\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/snappy\n\u001b[0m\u001b[91mgolang.org/x/crypto/poly1305\n\u001b[0m\u001b[91mgithub.com/pierrec/lz4/internal/xxh32\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/keepalive\n\u001b[0m\u001b[91mgithub.com/golang/snappy\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/grpcrand\n\u001b[0m\u001b[91mgolang.org/x/crypto/sha3\n\u001b[0m\u001b[91mgithub.com/montanaflynn/stats\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/tap\ngolang.org/x/net/context\n\u001b[0m\u001b[91mgithub.com/eapache/go-resiliency/breaker\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/retry\n\u001b[0m\u001b[91mgithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/mimedb\n\u001b[0m\u001b[91mgithub.com/minio/sha256-simd\n\u001b[0m\u001b[91mgithub.com/philhofer/fwd\n\u001b[0m\u001b[91mcloud.google.com/go/internal/version\n\u001b[0m\u001b[91mgithub.com/mattn/go-runewidth\n\u001b[0m\u001b[91mnet\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/envconfig\n\u001b[0m\u001b[91mgithub.com/djherbis/atime\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/grpclog\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/proto\n\u001b[0m\u001b[91mgolang.org/x/net/internal/timeseries\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/proto\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/metadata\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/backoff\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/bidi\n\u001b[0m\u001b[91mgolang.org/x/net/http2/hpack\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/logger/message/log\ngithub.com/hashicorp/errwrap\n\u001b[0m\u001b[91mgithub.com/jcmturner/gofork/x/crypto/pbkdf2\n\u001b[0m\u001b[91mgithub.com/dustin/go-humanize\n\u001b[0m\u001b[91mgithub.com/inconshreveable/go-update/internal/osext\ngithub.com/modern-go/concurrent\n\u001b[0m\u001b[91mgithub.com/inconshreveable/go-update/internal/binarydist\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/fse\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/flate\n\u001b[0m\u001b[91mgithub.com/spaolacci/murmur3\n\u001b[0m\u001b[91mgithub.com/klauspost/readahead\n\u001b[0m\u001b[91mgolang.org/x/crypto/ed25519\n\u001b[0m\u001b[91mgithub.com/minio/cli\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/codes\n\u001b[0m\u001b[91mgithub.com/mitchellh/go-homedir\ngolang.org/x/sys/cpu\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/s2\n\u001b[0m\u001b[91mgopkg.in/ini.v1\n\u001b[0m\u001b[91mgolang.org/x/net/bpf\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/balancerload\n\u001b[0m\u001b[91mgithub.com/ryanuber/go-glob\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/env\n\u001b[0m\u001b[91mgithub.com/ncw/directio\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/zstd/internal/xxhash\n\u001b[0m\u001b[91mgithub.com/minio/minio/browser\n\u001b[0m\u001b[91mgithub.com/shirou/gopsutil/internal/common\n\u001b[0m\u001b[91mos/user\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/ellipses\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6/pkg/tags\n\u001b[0m\u001b[91mgopkg.in/asn1-ber.v1\n\u001b[0m\u001b[91mgithub.com/davecgh/go-spew/spew\ngithub.com/jcmturner/gofork/encoding/asn1\n\u001b[0m\u001b[91mgithub.com/hashicorp/go-uuid\ngopkg.in/jcmturner/aescts.v1\n\u001b[0m\u001b[91mgithub.com/pierrec/lz4\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/iana/errorcode\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/krberror\n\u001b[0m\u001b[91mgopkg.in/jcmturner/rpc.v1/ndr\n\u001b[0m\u001b[91mgithub.com/eclipse/paho.mqtt.golang/packets\n\u001b[0m\u001b[91mgithub.com/lib/pq/scram\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/cgroup\n\u001b[0m\u001b[91mgithub.com/nats-io/nats.go/encoders/builtin\n\u001b[0m\u001b[91mgithub.com/nats-io/nuid\n\u001b[0m\u001b[91mgolang.org/x/crypto/chacha20\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jlexer\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jwriter\ngopkg.in/olivere/elastic.v5/config\n\u001b[0m\u001b[91mgopkg.in/olivere/elastic.v5/uritemplates\ngithub.com/hashicorp/hcl/hcl/token\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/consts\ngoogle.golang.org/grpc/connectivity\n\u001b[0m\u001b[91mgolang.org/x/sys/unix\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/crypto/common\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/crypto/rfc4757\n\u001b[0m\u001b[91mgithub.com/hashicorp/go-multierror\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/strutil\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/huff0\n\u001b[0m\u001b[91mgopkg.in/square/go-jose.v2/cipher\n\u001b[0m\u001b[91mgopkg.in/square/go-jose.v2/json\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bucket/encryption\n\u001b[0m\u001b[91mgithub.com/pkg/errors\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bucket/lifecycle\n\u001b[0m\u001b[91mgolang.org/x/text/secure/bidirule\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/asn1tools\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/crypto/rfc3961\n\u001b[0m\u001b[91mgithub.com/minio/md5-simd\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/norm\n\u001b[0m\u001b[91mgopkg.in/jcmturner/rpc.v1/mstypes\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/hash\ngithub.com/minio/minio/pkg/dsync\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/lsync\n\u001b[0m\u001b[91mgithub.com/fatih/structs\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/mountinfo\n\u001b[0m\u001b[91mgithub.com/klauspost/reedsolomon\n\u001b[0m\u001b[91mgolang.org/x/crypto/blake2b\n\u001b[0m\u001b[91mgithub.com/minio/highwayhash\n\u001b[0m\u001b[91mgithub.com/secure-io/sio-go/sioutil\n\u001b[0m\u001b[91mgithub.com/eapache/go-xerial-snappy\ngithub.com/shirou/gopsutil/cpu\ngopkg.in/jcmturner/gokrb5.v7/crypto/rfc3962\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/sys\n\u001b[0m\u001b[91mgolang.org/x/crypto/chacha20poly1305\n\u001b[0m\u001b[91mgithub.com/nats-io/nkeys\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/ast\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/token\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/safe\n\u001b[0m\u001b[91mgithub.com/bcicen/jstream\n\u001b[0m\u001b[91mgopkg.in/yaml.v2\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/crypto/rfc8009\n\u001b[0m\u001b[91mgolang.org/x/time/rate\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/csvparser\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/compressutil\n\u001b[0m\u001b[91mgithub.com/alecthomas/participle/lexer\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs/internal/fs\ngithub.com/tidwall/gjson\n\u001b[0m\u001b[91mgithub.com/prometheus/common/model\ngithub.com/klauspost/compress/zstd\ngithub.com/willf/bitset\ncloud.google.com/go/internal/optional\n\u001b[0m\u001b[91mgithub.com/tinylib/msgp/msgp\n\u001b[0m\u001b[91mgoogle.golang.org/api/googleapi/internal/uritemplates\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/lock\n\u001b[0m\u001b[91mnet/textproto\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal\ngoogle.golang.org/grpc/credentials/internal\ncrypto/x509\nlog/syslog\ngoogle.golang.org/grpc/stats\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/naming\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/types\n\u001b[0m\u001b[91mgithub.com/google/uuid\ngithub.com/minio/minio-go/v6/pkg/s3utils\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/net\n\u001b[0m\u001b[91mgithub.com/valyala/tcplisten\n\u001b[0m\u001b[91mgithub.com/shirou/gopsutil/net\n\u001b[0m\u001b[91mgolang.org/x/net/internal/socks\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/zip\n\u001b[0m\u001b[91mgopkg.in/jcmturner/dnsutils.v1\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/jsonutil\n\u001b[0m\u001b[91mgithub.com/modern-go/reflect2\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/types\n\u001b[0m\u001b[91mvendor/golang.org/x/net/http/httpproxy\n\u001b[0m\u001b[91mgithub.com/klauspost/pgzip\n\u001b[0m\u001b[91mgithub.com/mitchellh/mapstructure\n\u001b[0m\u001b[91mgithub.com/klauspost/compress/gzip\ngoogle.golang.org/api/iterator\n\u001b[0m\u001b[91mgithub.com/hashicorp/go-sockaddr\ngolang.org/x/oauth2/jws\n\u001b[0m\u001b[91mgo.opencensus.io/trace/tracestate\n\u001b[0m\u001b[91mgo.opencensus.io/internal\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/any\ngithub.com/golang/protobuf/ptypes/duration\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/serviceconfig\ngoogle.golang.org/grpc/encoding/proto\n\u001b[0m\u001b[91mgolang.org/x/crypto/argon2\ngithub.com/secure-io/sio-go\ngithub.com/hashicorp/hcl/hcl/parser\ngithub.com/hashicorp/hcl/json/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/hclutil\n\u001b[0m\u001b[91mgithub.com/prometheus/client_model/go\n\u001b[0m\u001b[91mgithub.com/willf/bloom\n\u001b[0m\u001b[91mgithub.com/matttproud/golang_protobuf_extensions/pbutil\ngoogle.golang.org/genproto/googleapis/type/expr\ngithub.com/minio/sio\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/rpc/code\ngo.opencensus.io/resource\n\u001b[0m\u001b[91mgithub.com/alecthomas/participle\n\u001b[0m\u001b[91mgo.opencensus.io/tag\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/protoc-gen-go/descriptor\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/timestamp\n\u001b[0m\u001b[91mgithub.com/xdg/stringprep\n\u001b[0m\u001b[91mgolang.org/x/net/idna\n\u001b[0m\u001b[91mgithub.com/colinmarc/hdfs/v2/hadoopconf\ngopkg.in/jcmturner/goidentity.v3\n\u001b[0m\u001b[91mgithub.com/colinmarc/hdfs/v2/internal/protocol/hadoop_common\n\u001b[0m\u001b[91mvendor/golang.org/x/net/http/httpguts\ngoogle.golang.org/genproto/googleapis/rpc/status\ngithub.com/cheggaaa/pb\ngoogle.golang.org/grpc/resolver\ngoogle.golang.org/grpc/internal/syscall\n\u001b[0m\u001b[91mgithub.com/mattn/go-isatty\ngithub.com/shirou/gopsutil/disk\ngithub.com/minio/minio/pkg/disk\ngolang.org/x/net/internal/socket\ngithub.com/shirou/gopsutil/host\ngithub.com/shirou/gopsutil/mem\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/keytab\ngolang.org/x/net/proxy\ngithub.com/rjeczalik/notify\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/parser\ngithub.com/tidwall/sjson\ngopkg.in/jcmturner/gokrb5.v7/crypto\ngopkg.in/jcmturner/gokrb5.v7/config\ngo.opencensus.io/trace\n\u001b[0m\u001b[91mgithub.com/rcrowley/go-metrics\n\u001b[0m\u001b[91mgo.opencensus.io/metric/metricdata\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/binarylog/grpc_binarylog_v1\n\u001b[0m\u001b[91mcrypto/tls\ngoogle.golang.org/grpc/resolver/passthrough\ngoogle.golang.org/grpc/resolver/dns\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes\n\u001b[0m\u001b[91mgithub.com/inconshreveable/go-update\n\u001b[0m\u001b[91mgithub.com/dgrijalva/jwt-go\n\u001b[0m\u001b[91mgithub.com/mattn/go-colorable\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/internal\n\u001b[0m\u001b[91mgopkg.in/square/go-jose.v2\n\u001b[0m\u001b[91mgo.opencensus.io/stats/internal\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/credentials\ngolang.org/x/net/http/httpguts\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/ioutil\ngo.opencensus.io/metric/metricproducer\ngithub.com/hashicorp/hcl\n\u001b[0m\u001b[91mgithub.com/minio/simdjson-go\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/sdk/helper/parseutil\ngithub.com/shirou/gopsutil/process\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/api/annotations\n\u001b[0m\u001b[91mgolang.org/x/net/ipv4\ngolang.org/x/net/ipv6\n\u001b[0m\u001b[91mgithub.com/fatih/color\n\u001b[0m\u001b[91mgo.opencensus.io/stats\n\u001b[0m\u001b[91mgithub.com/colinmarc/hdfs/v2/internal/protocol/hadoop_hdfs\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/status\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/auth\ngopkg.in/jcmturner/gokrb5.v7/pac\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/gssapi\n\u001b[0m\u001b[91mgithub.com/json-iterator/go\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/protoc-gen-gogo/descriptor\n\u001b[0m\u001b[91mgo.opencensus.io/stats/view\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/color\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/console\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/api/v3rpc/rpctypes\ngoogle.golang.org/grpc/internal/binarylog\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/messages\n\u001b[0m\u001b[91mgithub.com/beevik/ntp\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/kadmin\n\u001b[0m\u001b[91mgopkg.in/square/go-jose.v2/jwt\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select/sql\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/client\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/gogoproto\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/service\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/auth/authpb\ngithub.com/coreos/etcd/mvcc/mvccpb\n\u001b[0m\u001b[91mgithub.com/nats-io/stan.go/pb\n\u001b[0m\u001b[91mnet/http/httptrace\ngoogle.golang.org/grpc/credentials\n\u001b[0m\u001b[91mgithub.com/Shopify/sarama/tools/tls\n\u001b[0m\u001b[91mgithub.com/nats-io/nats.go/util\ngithub.com/minio/minio/pkg/certs\n\u001b[0m\u001b[91mgithub.com/gomodule/redigo/redis\n\u001b[0m\u001b[91mgithub.com/go-sql-driver/mysql\n\u001b[0m\u001b[91mgithub.com/lib/pq\n\u001b[0m\u001b[91mgithub.com/hashicorp/go-rootcerts\n\u001b[0m\u001b[91mgopkg.in/ldap.v3\n\u001b[0m\u001b[91mgithub.com/streadway/amqp\n\u001b[0m\u001b[91mgithub.com/miekg/dns\n\u001b[0m\u001b[91mgithub.com/Shopify/sarama\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select/csv\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select/json\n\u001b[0m\u001b[91mnet/http\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/channelz\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/peer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/base\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select/simdj\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6/pkg/set\ngithub.com/minio/minio/cmd/jwt\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/roundrobin\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6/pkg/policy\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/event\n\u001b[0m\u001b[91mgithub.com/xdg/scram\n\u001b[0m\u001b[91mgithub.com/coredns/coredns/plugin/pkg/response\n\u001b[0m\u001b[91mgithub.com/coredns/coredns/plugin/pkg/dnsutil\n\u001b[0m\u001b[91mgithub.com/coredns/coredns/plugin/etcd/msg\n\u001b[0m\u001b[91mgithub.com/mattn/go-ieproxy\ngithub.com/elazarl/go-bindata-assetfs\n\u001b[0m\u001b[91mnet/http/cookiejar\ngolang.org/x/net/trace\ngithub.com/minio/minio-go/v6/pkg/encrypt\ngithub.com/dgrijalva/jwt-go/request\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6/pkg/signer\n\u001b[0m\u001b[91mgithub.com/gorilla/rpc/v2\n\u001b[0m\u001b[91mnet/http/httputil\n\u001b[0m\u001b[91mgithub.com/gorilla/mux\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/trace\ngithub.com/gorilla/handlers\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bucket/policy/condition\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/http\n\u001b[0m\u001b[91mgolang.org/x/net/http2\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson\n\u001b[0m\u001b[91mgithub.com/hashicorp/go-cleanhttp\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/http/stats\n\u001b[0m\u001b[91mgolang.org/x/net/websocket\n\u001b[0m\u001b[91mgolang.org/x/net/context/ctxhttp\n\u001b[0m\u001b[91mgithub.com/rs/cors\n\u001b[0m\u001b[91mgoogle.golang.org/api/googleapi/transport\ngo.opencensus.io/trace/propagation\ncloud.google.com/go/compute/metadata\n\u001b[0m\u001b[91mgoogle.golang.org/api/googleapi\n\u001b[0m\u001b[91mgithub.com/prometheus/common/expfmt\n\u001b[0m\u001b[91mgithub.com/nsqio/go-nsq\n\u001b[0m\u001b[91mgithub.com/nats-io/jwt\n\u001b[0m\u001b[91mgit.apache.org/thrift.git/lib/go/thrift\n\u001b[0m\u001b[91mgithub.com/Azure/azure-pipeline-go/pipeline\n\u001b[0m\u001b[91mgopkg.in/jcmturner/gokrb5.v7/spnego\ngolang.org/x/net/publicsuffix\n\u001b[0m\u001b[91mgolang.org/x/oauth2/internal\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/logger/target/http\ngithub.com/minio/minio/cmd/rest\ngithub.com/minio/minio/pkg/handlers\n\u001b[0m\u001b[91mgithub.com/gorilla/rpc/v2/json2\n\u001b[0m\u001b[91mgopkg.in/olivere/elastic.v5\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bucket/policy\n\u001b[0m\u001b[91mgo.opencensus.io/plugin/ochttp/propagation/b3\ngithub.com/hashicorp/go-retryablehttp\ngoogle.golang.org/api/transport/http/internal/propagation\n\u001b[0m\u001b[91mgithub.com/eclipse/paho.mqtt.golang\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6/pkg/credentials\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/logger/message/audit\n\u001b[0m\u001b[91mcloud.google.com/go/internal/trace\n\u001b[0m\u001b[91mgoogle.golang.org/api/gensupport\n\u001b[0m\u001b[91mgithub.com/nats-io/nats.go\n\u001b[0m\u001b[91mgithub.com/Azure/azure-storage-blob-go/azblob\n\u001b[0m\u001b[91mgolang.org/x/oauth2\n\u001b[0m\u001b[91mgithub.com/colinmarc/hdfs/v2/internal/rpc\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus\n\u001b[0m\u001b[91mgo.opencensus.io/plugin/ochttp\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/iam/policy\n\u001b[0m\u001b[91mgolang.org/x/oauth2/jwt\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/transport\n\u001b[0m\u001b[91mgithub.com/hashicorp/vault/api\n\u001b[0m\u001b[91mgolang.org/x/oauth2/google\n\u001b[0m\u001b[91mgithub.com/minio/minio-go/v6\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/madmin\n\u001b[0m\u001b[91mgithub.com/colinmarc/hdfs/v2\n\u001b[0m\u001b[91mgithub.com/minio/parquet-go/gen-go/parquet\n\u001b[0m\u001b[91mgithub.com/nats-io/stan.go\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/promhttp\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config\n\u001b[0m\u001b[91mgoogle.golang.org/grpc\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/api\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/compress\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/identity/ldap\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/policy/opa\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/cache\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/storageclass\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/identity/openid\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/logger\n\u001b[0m\u001b[91mgithub.com/minio/parquet-go/common\ngithub.com/minio/parquet-go/schema\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/logger/target/console\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/bucket/object/lock\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/crypto\n\u001b[0m\u001b[91mgithub.com/minio/parquet-go/encoding\n\u001b[0m\u001b[91mgithub.com/minio/parquet-go/data\n\u001b[0m\u001b[91mgithub.com/minio/parquet-go\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/health/grpc_health_v1\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/iam/v1\ngoogle.golang.org/api/internal\ngithub.com/googleapis/gax-go/v2\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/etcdserverpb\n\u001b[0m\u001b[91mcloud.google.com/go/internal\n\u001b[0m\u001b[91mgoogle.golang.org/api/option\n\u001b[0m\u001b[91mcloud.google.com/go/iam\n\u001b[0m\u001b[91mgoogle.golang.org/api/transport/http\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select/parquet\n\u001b[0m\u001b[91mgoogle.golang.org/api/storage/v1\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/s3select\n\u001b[0m\u001b[91mcloud.google.com/go/storage\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/event/target\n\u001b[0m\u001b[91mgithub.com/minio/minio/pkg/quick\ngithub.com/minio/minio/cmd/config/etcd/dns\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/namespace\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/etcd\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/config/notify\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/gateway/nas\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/gateway/hdfs\ngithub.com/minio/minio/cmd/gateway/azure\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/gateway/gcs\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/gateway/s3\n\u001b[0m\u001b[91mgithub.com/minio/minio/cmd/gateway\n\u001b[0m\u001b[91mgithub.com/minio/minio\n\u001b[0m\u001b[91mcp: '/go/bin/minio' and '/go/bin/minio' are the same file\n\u001b[0mRemoving intermediate container a897b4aec752\n ---> fbaa41d1a930\nStep 10/24 : FROM $target/alpine:3.11",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/jessestuart/minio-multiarch",
    "repo_commit": "3d0e6d666fbb3b82b081a16615fd120583d4e3ee",
    "repo_id": 128018214
  },
  {
    "raw_dockerfile": "ARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}\n\nARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install common dependencies (so that this step can be cached separately)\nARG EC2\nADD ./common/install_base.sh install_base.sh\nRUN bash ./install_base.sh && rm install_base.sh\n\n# Install user\nADD ./common/install_user.sh install_user.sh\nRUN bash ./install_user.sh && rm install_user.sh\n\n# Install katex\nARG KATEX\nADD ./common/install_katex.sh install_katex.sh\nRUN bash ./install_katex.sh && rm install_katex.sh\n\n# Install conda\nENV PATH /opt/conda/bin:$PATH\nARG ANACONDA_PYTHON_VERSION\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\n# Install gcc\nARG GCC_VERSION\nADD ./common/install_gcc.sh install_gcc.sh\nRUN bash ./install_gcc.sh && rm install_gcc.sh\n\n# Install non-standard Python versions (via Travis binaries)\nARG TRAVIS_PYTHON_VERSION\nENV PATH /opt/python/$TRAVIS_PYTHON_VERSION/bin:$PATH\nADD ./common/install_travis_python.sh install_travis_python.sh\nRUN bash ./install_travis_python.sh && rm install_travis_python.sh\n\n# (optional) Install protobuf for ONNX\nARG PROTOBUF\nADD ./common/install_protobuf.sh install_protobuf.sh\nRUN if [ -n \"${PROTOBUF}\" ]; then bash ./install_protobuf.sh; fi\nRUN rm install_protobuf.sh\nENV INSTALLED_PROTOBUF ${PROTOBUF}\n\n# (optional) Install database packages like LMDB and LevelDB\nARG DB\nADD ./common/install_db.sh install_db.sh\nRUN if [ -n \"${DB}\" ]; then bash ./install_db.sh; fi\nRUN rm install_db.sh\nENV INSTALLED_DB ${DB}\n\n# (optional) Install vision packages like OpenCV and ffmpeg\nARG VISION\nADD ./common/install_vision.sh install_vision.sh\nRUN if [ -n \"${VISION}\" ]; then bash ./install_vision.sh; fi\nRUN rm install_vision.sh\nENV INSTALLED_VISION ${VISION}\n\n# Install ccache/sccache (do this last, so we get priority in PATH)\nADD ./common/install_cache.sh install_cache.sh\nENV PATH /opt/cache/bin:$PATH\nRUN bash ./install_cache.sh && rm install_cache.sh\nENV CUDA_NVCC_EXECUTABLE=/opt/cache/lib/nvcc\n\n# Add jni.h for java host build\nADD ./common/install_jni.sh install_jni.sh\nADD ./java/jni.h jni.h\nRUN bash ./install_jni.sh && rm install_jni.sh\n\n# Include BUILD_ENVIRONMENT environment variable in image\nARG BUILD_ENVIRONMENT\nENV BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}\n\n# AWS specific CUDA build guidance\nENV TORCH_CUDA_ARCH_LIST Maxwell\nENV TORCH_NVCC_FLAGS \"-Xfatbin -compress-all\"\n\n# Install LLVM dev version\nADD ./common/install_llvm.sh install_llvm.sh\nRUN bash ./install_llvm.sh\n\nUSER jenkins\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  274.9MB\r\r\nStep 1/57 : ARG UBUNTU_VERSION\nStep 2/57 : ARG CUDA_VERSION\nStep 3/57 : ARG CUDNN_VERSION\nStep 4/57 : FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/ROCmSoftwarePlatform/pytorch",
    "repo_commit": "29623ceeee36621341bee2034234c4e57285eeeb",
    "repo_id": 128132891
  },
  {
    "raw_dockerfile": "ARG target\n\nFROM golang:1.13-alpine as builder\n\nARG goarch\nENV GOARCH $goarch\n\nENV GO111MODULE off\n\nRUN \\\n  apk add --update --virtual build-deps go git musl-dev && \\\n  go get -d github.com/mdlayher/unifi_exporter && \\\n  GOOS=linux GOARCH=$GOARCH go build -o /go/bin/unifi_exporter github.com/mdlayher/unifi_exporter/cmd/unifi_exporter\n\n# =============================================================================\n\nFROM $target/alpine\nCOPY qemu-* /usr/bin/\n\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n\nLABEL \\\n  maintainer=\"Jesse Stuart <hi@jessestuart.com>\" \\\n  org.label-schema.build-date=$BUILD_DATE \\\n  org.label-schema.url=\"https://hub.docker.com/r/jessestuart/unifi_exporter\" \\\n  org.label-schema.vcs-url=\"https://github.com/jessestuart/unifi_exporter\" \\\n  org.label-schema.vcs-ref=$VCS_REF \\\n  org.label-schema.version=$VERSION \\\n  org.label-schema.schema-version=\"1.0\"\n\nRUN apk add --no-cache ca-certificates\n\nCOPY --from=builder /go/bin/unifi_exporter /bin/unifi_exporter\n\nEXPOSE 9130\n\nUSER nobody\nENTRYPOINT [\"/bin/unifi_exporter\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  391.7kB\r\r\nStep 1/17 : ARG target\nStep 2/17 : FROM golang:1.13-alpine as builder\n1.13-alpine: Pulling from library/golang\ndf20fa9351a1: Already exists\ned8968b2872e: Already exists\na92cc7c5fd73: Already exists\ne9b686f23470: Already exists\ne5ffe4cf9f04: Already exists\nDigest: sha256:4c475018cc22a3c1b1e42806467be68c61beef9f94cb4533960f5fdd53f631b4\nStatus: Downloaded newer image for golang:1.13-alpine\n ---> cea245765db1\nStep 3/17 : ARG goarch\n ---> Running in 25f5e6fd93dc\nRemoving intermediate container 25f5e6fd93dc\n ---> 4e9e149099de\nStep 4/17 : ENV GOARCH $goarch\n ---> Running in 9f7aaeff624d\nRemoving intermediate container 9f7aaeff624d\n ---> a52bb400bacb\nStep 5/17 : ENV GO111MODULE off\n ---> Running in decbd34b7b9a\nRemoving intermediate container decbd34b7b9a\n ---> 8f0b982254d4\nStep 6/17 : RUN   apk add --update --virtual build-deps go git musl-dev &&   go get -d github.com/mdlayher/unifi_exporter &&   GOOS=linux GOARCH=$GOARCH go build -o /go/bin/unifi_exporter github.com/mdlayher/unifi_exporter/cmd/unifi_exporter\n ---> Running in 88f53ffd3121\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz\n(1/20) Upgrading musl (1.1.24-r8 -> 1.1.24-r9)\n(2/20) Installing libgcc (9.3.0-r2)\n(3/20) Installing libstdc++ (9.3.0-r2)\n(4/20) Installing binutils (2.34-r1)\n(5/20) Installing gmp (6.2.0-r0)\n(6/20) Installing isl (0.18-r0)\n(7/20) Installing libgomp (9.3.0-r2)\n(8/20) Installing libatomic (9.3.0-r2)\n(9/20) Installing libgphobos (9.3.0-r2)\n(10/20) Installing mpfr4 (4.0.2-r4)\n(11/20) Installing mpc1 (1.1.0-r1)\n(12/20) Installing gcc (9.3.0-r2)\n(13/20) Installing musl-dev (1.1.24-r9)\n(14/20) Installing go (1.13.11-r0)\n(15/20) Installing nghttp2-libs (1.41.0-r0)\n(16/20) Installing libcurl (7.69.1-r0)\n(17/20) Installing expat (2.2.9-r1)\n(18/20) Installing pcre2 (10.35-r0)\n(19/20) Installing git (2.26.2-r0)\n(20/20) Installing build-deps (20200708.012217)\nExecuting busybox-1.31.1-r16.trigger\nOK: 458 MiB in 34 packages\nRemoving intermediate container 88f53ffd3121\n ---> 7de96948e150\nStep 7/17 : FROM $target/alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/jessestuart/unifi_exporter",
    "repo_commit": "9090e857fa2472f05353d1a5f7fc54778f252b1e",
    "repo_id": 128742126
  },
  {
    "raw_dockerfile": "ARG OS\nFROM cangjians/pycangjie:${OS}\nMAINTAINER Cangjians (https://cangjians.github.io)\n\n# basic environment for building\nWORKDIR /usr/local/src/ibus-cangjie\n\n# copy source files to build\nCOPY \".\" \"./\"\n\n# build the library\nRUN ./autogen.sh --prefix=/usr && \\\n  make && make install",
    "raw_stdout_log": "Sending build context to Docker daemon  657.4kB\r\r\nStep 1/6 : ARG OS\nStep 2/6 : FROM cangjians/pycangjie:${OS}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/Cangjians/ibus-cangjie",
    "repo_commit": "3cb2f401de8afa21fbe86250b62966686cbd8dbb",
    "repo_id": 13012331
  },
  {
    "raw_dockerfile": "ARG TOMCAT_DOCKER_VERSION\nFROM tomcat:${TOMCAT_DOCKER_VERSION}\n\nENV RUN_USER tomcat\n\nRUN apt-get -qq update && apt-get install -y patch\n\nRUN adduser --system --group ${RUN_USER} --home ${CATALINA_HOME}\nRUN chown -R ${RUN_USER}:${RUN_GROUP} $CATALINA_HOME\nUSER ${RUN_USER}\n\nARG DB_DRIVER=org.gjt.mm.mysql.Driver\nARG DB_SCHEMA=core\nARG PROPS_MYSQL=/usr/local/tomcat/conf/database.properties\nARG PROPS_MONGO=/usr/local/tomcat/conf/mongo.properties\n\nARG MYSQL_USER\nARG MYSQL_PASS\nARG MYSQL_URI\n\nARG MONGO_HOST\nARG MONGO_PORT\nARG MONGO_CONN_TIMEOUT\nARG MONGO_SOCK_TIMEOUT\nARG MONGO_SVR_TIMEOUT\n\nARG TLS_KEYSTORE_FILE\nARG TLS_KEYSTORE_PASS\nARG ALIAS\nARG HTTPS_PORT\n\nRUN printf \"databaseConnectionURL=$MYSQL_URI/\\nDriverType=$DB_DRIVER\\ndatabaseSchema=$DB_SCHEMA\\ndatabaseUsername=$MYSQL_USER\\ndatabasePassword=$MYSQL_PASS\\n\" >> $PROPS_MYSQL\nRUN printf \"connectionHost=$MONGO_HOST\\nconnectionPort=$MONGO_PORT\\ndatabaseName=shepherdGames\\nconnectTimeout=$MONGO_CONN_TIMEOUT\\nsocketTimeout=$MONGO_SOCK_TIMEOUT\\nserverSelectionTimeout=$MONGO_SVR_TIMEOUT\"  >> $PROPS_MONGO\n\nRUN rm -rf /usr/local/tomcat/webapps/ROOT\nCOPY target/owaspSecurityShepherd.war /usr/local/tomcat/webapps/ROOT.war\nCOPY target/docker/tomcat/$TLS_KEYSTORE_FILE /usr/local/tomcat/conf/$TLS_KEYSTORE_FILE\n\nCOPY docker/tomcat/serverxml.patch /usr/local/tomcat/conf/serverxml.patch\nRUN sed -i 's/keystoreFile=\"conf\\/TLS_KEYSTORE_FILE\" keystorePass=\"TLS_KEYSTORE_PASS\" keyAlias=\"ALIAS\">/keystoreFile=\"conf\\/'\"$TLS_KEYSTORE_FILE\"'\" keystorePass=\"'\"$TLS_KEYSTORE_PASS\"'\" keyAlias=\"'\"$ALIAS\"'\">/g' /usr/local/tomcat/conf/serverxml.patch &&\\\n    sed -i 's/redirectPort=\"HTTPS_PORT\" \\/>/redirectPort=\"'\"$HTTPS_PORT\"'\" \\/>/g' /usr/local/tomcat/conf/serverxml.patch &&\\\n    patch /usr/local/tomcat/conf/server.xml /usr/local/tomcat/conf/serverxml.patch\n\nCOPY docker/tomcat/webxml.patch /usr/local/tomcat/conf/webxml.patch\nRUN patch /usr/local/tomcat/conf/web.xml /usr/local/tomcat/conf/webxml.patch\n\nEXPOSE 8080 8443\nCMD [\"catalina.sh\", \"run\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  324.6MB\r\r\nStep 1/34 : ARG TOMCAT_DOCKER_VERSION\nStep 2/34 : FROM tomcat:${TOMCAT_DOCKER_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/OWASP/SecurityShepherd",
    "repo_commit": "35e5d82fdbaabcef1e032f7de1e07bd53d991d9f",
    "repo_id": 14259857
  },
  {
    "raw_dockerfile": "ARG CUDA_BASE_VERSION\nARG UBUNTU_VERSION\nARG CUDNN_VERSION\n\n# use CUDA + OpenGL\nFROM nvidia/cudagl:${CUDA_BASE_VERSION}-devel-ubuntu${UBUNTU_VERSION}\nMAINTAINER Domhnall Boyle (domhnallboyle@gmail.com)\n\n# arguments from command line\nARG CUDA_BASE_VERSION\nARG UBUNTU_VERSION\nARG CUDNN_VERSION\nARG TENSORFLOW_VERSION\n\n# set environment variables\nENV CUDA_BASE_VERSION=${CUDA_BASE_VERSION}\nENV CUDNN_VERSION=${CUDNN_VERSION}\nENV TENSORFLOW_VERSION=${TENSORFLOW_VERSION}\n\n# install apt dependencies\nRUN apt-get update && apt-get install -y \\\n\tpython \\\n\tpython-pip \\\n\tgit \\\n\tvim \\\n\twget\n\n# install newest cmake version\nRUN apt-get purge cmake && cd ~ && wget https://github.com/Kitware/CMake/releases/download/v3.14.5/cmake-3.14.5.tar.gz && tar -xvf cmake-3.14.5.tar.gz\nRUN cd ~/cmake-3.14.5 && ./bootstrap && make && make install\n\n# setting up cudnn\nRUN apt-get install -y --no-install-recommends \\             \n\tlibcudnn7=$(echo $CUDNN_VERSION)-1+cuda$(echo $CUDA_BASE_VERSION) \\             \n\tlibcudnn7-dev=$(echo $CUDNN_VERSION)-1+cuda$(echo $CUDA_BASE_VERSION) \nRUN apt-mark hold libcudnn7 && rm -rf /var/lib/apt/lists/*\n\n# install python dependencies\nRUN pip install tensorflow-gpu==$(echo $TENSORFLOW_VERSION)\n\n# install dirt\nENV CUDAFLAGS='-DNDEBUG=1'\nRUN cd ~ && git clone https://github.com/pmh47/dirt.git && \\ \n \tpip install dirt/\n\n# run dirt test command\nRUN python ~/dirt/tests/square_test.py",
    "raw_stdout_log": "Sending build context to Docker daemon  1.083MB\r\r\nStep 1/21 : ARG CUDA_BASE_VERSION\nStep 2/21 : ARG UBUNTU_VERSION\nStep 3/21 : ARG CUDNN_VERSION\nStep 4/21 : FROM nvidia/cudagl:${CUDA_BASE_VERSION}-devel-ubuntu${UBUNTU_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/pmh47/dirt",
    "repo_commit": "1f1a51ed248a4de6a09b269cb6dfd44883d343fc",
    "repo_id": 145043028
  },
  {
    "raw_dockerfile": "ARG MYSQL_VERSION\n\nFROM mysql:$MYSQL_VERSION\n\n# 参数问题:https://stackoverflow.com/questions/48831447/docker-compose-build-args-not-passing-to-dockerfile\nARG MYSQL_DATABASE\nARG MYSQL_USER\nARG MYSQL_PASSWORD\n\n# 工作目录不可与挂载目录相同, 否则复制进取的文件, 会被宿主机挂载目录覆盖\nWORKDIR /$MYSQL_DATABASE/bak/\nCOPY [\"setup.sh\",\"bak.sh\",\"./\"]\n\n# 导入sql文件\n# 待完善\n#RUN mysql -u$MYSQL_USER -p$MYSQL_PASSWORD deercoder-chat < deercoder-chat.sql\n\n# 更换源,apt update 卡住!!?\n#RUN sed -i \"s/http:\\/\\/repo.mysql.com\\/apt\\/debian/https:\\/\\/mirrors.aliyun.com\\/apt\\/debian\\//g\" /etc/apt/sources.list.d/mysql.list\n#RUN sed -i \"s/http:\\/\\/deb.debian.org\\/debian/https:\\/\\/mirrors.aliyun.com\\/debian\\//g\" /etc/apt/sources.list\n#RUN sed -i \"s/http:\\/\\/security.debian.org\\/debian-security/https:\\/\\/mirrors.aliyun.com\\/debian-security\\//g\" /etc/apt/sources.list\n\n# 定时任务软件包\n# nohup 可后台执行\nRUN apt update && apt install cron -y --no-install-recommends\n# 定时任务设置\nRUN chmod 755 setup.sh bak.sh\nRUN ./setup.sh \"$MYSQL_DATABASE\" \"$MYSQL_USER\" \"$MYSQL_PASSWORD\"\nEXPOSE 3306",
    "raw_stdout_log": "Sending build context to Docker daemon  2.555MB\r\r\nStep 1/11 : ARG MYSQL_VERSION\nStep 2/11 : FROM mysql:$MYSQL_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/dreamlu/deercoder-gin",
    "repo_commit": "1ff2fd74c4c91350c73bc7e353a1f1fb06a8a837",
    "repo_id": 146098352
  },
  {
    "raw_dockerfile": "ARG RUBY_TAG\n\nFROM wodby/ruby:${RUBY_TAG}\n\n# Throw errors if Gemfile has been modified since Gemfile.lock\nRUN bundle config --global frozen 1\n\nCOPY Gemfile Gemfile.lock ./\n\n# Install additional dev packages for native extensions (only for -dev ruby tag)\n#RUN sudo apk add --update missing-package\n\nRUN bundle install\n\n# By default we start Puma HTTP server, modify to change it.\n#CMD [\"puma\", \"-C\", \"/usr/local/etc/puma.rb\"]\n\n# Use unicorn instead\n#CMD [\"/etc/init.d/unicorn\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  354.3kB\r\r\nStep 1/5 : ARG RUBY_TAG\nStep 2/5 : FROM wodby/ruby:${RUBY_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/docker4ruby",
    "repo_commit": "369fee4163e70fd7b4f99e5f42567ff285824882",
    "repo_id": 146434673
  },
  {
    "raw_dockerfile": "ARG TAG\nFROM quay.io/eclipse/che-java11-maven:${TAG}\n\nUSER root\n\nRUN cd / && \\\n    git clone https://github.com/spring-projects/spring-petclinic && \\\n    cd /spring-petclinic && \\\n    mvn clean package && \\\n    mkdir -p /home/user/.m2/repository && \\\n    cp -r /root/.m2/repository/* /home/user/.m2/repository && \\\n    rm -rf spring-petclinic/ /root/.m2/repository/* && \\\n    chmod -R g=u /home/user\n\nUSER 10001",
    "raw_stdout_log": "Sending build context to Docker daemon  8.854MB\r\r\nStep 1/5 : ARG TAG\nStep 2/5 : FROM quay.io/eclipse/che-java11-maven:${TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/redhat-developer/codeready-workspaces",
    "repo_commit": "e42a84407ad069999e6c9896ac8b5ff0b5ad1770",
    "repo_id": 149611011
  },
  {
    "raw_dockerfile": "ARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}\n\nARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install common dependencies (so that this step can be cached separately)\nARG EC2\nADD ./common/install_base.sh install_base.sh\nRUN bash ./install_base.sh && rm install_base.sh\n\n# Install user\nADD ./common/install_user.sh install_user.sh\nRUN bash ./install_user.sh && rm install_user.sh\n\n# Install katex\nARG KATEX\nADD ./common/install_katex.sh install_katex.sh\nRUN bash ./install_katex.sh && rm install_katex.sh\n\n# Install conda\nENV PATH /opt/conda/bin:$PATH\nARG ANACONDA_PYTHON_VERSION\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\n# Install gcc\nARG GCC_VERSION\nADD ./common/install_gcc.sh install_gcc.sh\nRUN bash ./install_gcc.sh && rm install_gcc.sh\n\n# Install non-standard Python versions (via Travis binaries)\nARG TRAVIS_PYTHON_VERSION\nENV PATH /opt/python/$TRAVIS_PYTHON_VERSION/bin:$PATH\nADD ./common/install_travis_python.sh install_travis_python.sh\nRUN bash ./install_travis_python.sh && rm install_travis_python.sh\n\n# (optional) Install protobuf for ONNX\nARG PROTOBUF\nADD ./common/install_protobuf.sh install_protobuf.sh\nRUN if [ -n \"${PROTOBUF}\" ]; then bash ./install_protobuf.sh; fi\nRUN rm install_protobuf.sh\nENV INSTALLED_PROTOBUF ${PROTOBUF}\n\n# (optional) Install database packages like LMDB and LevelDB\nARG DB\nADD ./common/install_db.sh install_db.sh\nRUN if [ -n \"${DB}\" ]; then bash ./install_db.sh; fi\nRUN rm install_db.sh\nENV INSTALLED_DB ${DB}\n\n# (optional) Install vision packages like OpenCV and ffmpeg\nARG VISION\nADD ./common/install_vision.sh install_vision.sh\nRUN if [ -n \"${VISION}\" ]; then bash ./install_vision.sh; fi\nRUN rm install_vision.sh\nENV INSTALLED_VISION ${VISION}\n\n# Install ccache/sccache (do this last, so we get priority in PATH)\nADD ./common/install_cache.sh install_cache.sh\nENV PATH /opt/cache/bin:$PATH\nRUN bash ./install_cache.sh && rm install_cache.sh\nENV CUDA_NVCC_EXECUTABLE=/opt/cache/lib/nvcc\n\n# Add jni.h for java host build\nADD ./common/install_jni.sh install_jni.sh\nADD ./java/jni.h jni.h\nRUN bash ./install_jni.sh && rm install_jni.sh\n\n# Include BUILD_ENVIRONMENT environment variable in image\nARG BUILD_ENVIRONMENT\nENV BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}\n\n# AWS specific CUDA build guidance\nENV TORCH_CUDA_ARCH_LIST Maxwell\nENV TORCH_NVCC_FLAGS \"-Xfatbin -compress-all\"\n\nUSER jenkins\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  261.8MB\r\r\nStep 1/55 : ARG UBUNTU_VERSION\nStep 2/55 : ARG CUDA_VERSION\nStep 3/55 : ARG CUDNN_VERSION\nStep 4/55 : FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/mctorch/mctorch",
    "repo_commit": "d9f35a4f257073bc5db6d19ff6f71514f4da58aa",
    "repo_id": 149773189
  },
  {
    "raw_dockerfile": "# Copyright 2017-2018 Intel Corporation.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nARG USER_NAME\nFROM ${USER_NAME}/nff-go-base\n\nLABEL RUN docker run -it --privileged -v /sys/bus/pci/drivers:/sys/bus/pci/drivers -v /sys/kernel/mm/hugepages:/sys/kernel/mm/hugepages -v /sys/devices/system/node:/sys/devices/system/node -v /dev:/dev --name NAME -e NAME=NAME -e IMAGE=IMAGE IMAGE\n\nRUN apt-get install -y procps iproute2 iputils-ping net-tools apache2 wget; apt-get clean\nRUN dd if=/dev/zero of=/var/www/html/10k.bin bs=1 count=10240\nRUN dd if=/dev/zero of=/var/www/html/100k.bin bs=1 count=102400\nRUN dd if=/dev/zero of=/var/www/html/1m.bin bs=1 count=1048576\n\n# The following command cannot be executed at build stage but is\n# required for IPv6 KNI interfaces, so it should be executed when\n# container is ran\n# RUN sysctl -w net.ipv6.conf.all.disable_ipv6=0\n\nWORKDIR /workdir\n\n# NAT executables\nCOPY nff-go-nat .\nCOPY client/client .\n\n# Test applications\nCOPY test/httpperfserv/httpperfserv .\nCOPY test/wrk/wrk .\n\n# Configs without VLANs\nCOPY config.json .\nCOPY config-vlan.json .\nCOPY config-dhcp.json .\n\n# Configs with VLANs\nCOPY config-kni.json .\nCOPY config-kni-vlan.json .\nCOPY config-kni-dhcp.json .\n\n# Two ports config\nCOPY config2ports.json .",
    "raw_stdout_log": "Sending build context to Docker daemon   6.57MB\r\r\nStep 1/19 : ARG USER_NAME\nStep 2/19 : FROM ${USER_NAME}/nff-go-base",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/intel-go/nff-go-nat",
    "repo_commit": "12b56b6baa4bd7e1c9310dcd0d25fe4dde659c32",
    "repo_id": 151310320
  },
  {
    "raw_dockerfile": "ARG VERSION\nFROM python:${VERSION}-buster\n\nRUN pip install poetry\nCOPY . /app\nWORKDIR /app\n\nENV POETRY_VIRTUALENVS_CREATE=false\nRUN poetry install --no-interaction --extras \"sparse\"",
    "raw_stdout_log": "Sending build context to Docker daemon  11.35MB\r\r\nStep 1/7 : ARG VERSION\nStep 2/7 : FROM python:${VERSION}-buster",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/dask/dask-lightgbm",
    "repo_commit": "5c8dd4a8c9bb4022a1ad4603cdc830aa395ca708",
    "repo_id": 152596293
  },
  {
    "raw_dockerfile": "ARG tag\nFROM golang:${tag}\n\nLABEL org.label-schema.description=\"Docker image for autorecompiling and autorestarting Golang server\" \\\n    org.label-schema.name=\"acim/go-reflex\" \\\n    org.label-schema.schema-version=\"1.0\" \\\n    org.label-schema.url=\"https://github.com/acim/go-reflex/blob/master/README.md\" \\\n    org.label-schema.vendor=\"ablab.io\"\n    \nRUN go get -u github.com/cespare/reflex\n\nCOPY reflex.conf /usr/local/etc/\nCOPY build.sh /usr/local/bin/\n\nWORKDIR /app\n\nVOLUME /go\n\nCMD [\"reflex\", \"-d\", \"none\", \"-c\", \"/usr/local/etc/reflex.conf\"]\n\nEXPOSE 3000",
    "raw_stdout_log": "Sending build context to Docker daemon  99.84kB\r\r\nStep 1/10 : ARG tag\nStep 2/10 : FROM golang:${tag}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/acim/go-reflex",
    "repo_commit": "34863a456dfc0b512de8d6d0ea81c52a6222c2a7",
    "repo_id": 153163861
  },
  {
    "raw_dockerfile": "ARG PHP_VERSION\nFROM php:$PHP_VERSION\n\nENV TERM xterm\n\nRUN apk add --update --upgrade \\\n    bash \\\n    curl \\\n    libxml2 \\\n    git \\\n    vim \\\n    zip \\\n    patch \\\n    jpeg-dev libpng libpng-dev libjpeg-turbo-dev libwebp-dev zlib-dev libzip-dev libxpm-dev freetype-dev\n\nRUN deluser www-data && adduser -D -g 'php user' -h /var/www -s /bin/false www-data \\\n    && docker-php-ext-configure gd \\\n        --with-jpeg-dir=/usr/include/ \\\n        --with-freetype-dir=/usr/include/freetype2 \\\n    && docker-php-ext-install -j \"$(nproc)\" \\\n        gd \\\n        opcache \\\n        zip \\\n    && docker-php-source delete \\\n    && rm -rf /usr/share/vim/vim74/doc/* /usr/share/vim/vim74/tutor/* /usr/src/php.tar* /var/cache/apk/*\n\nRUN curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer \\\n    && composer global require hirak/prestissimo\n\nRUN { \\\n        echo 'expose_php = 0'; \\\n        echo 'post_max_size = 40M'; \\\n        echo 'upload_max_filesize = 20M'; \\\n        echo 'max_file_uploads = 10'; \\\n        echo 'opcache.memory_consumption = 1024'; \\\n        echo 'opcache.interned_strings_buffer=8'; \\\n        echo 'opcache.max_accelerated_files = 10007'; \\\n        echo 'opcache.revalidate_freq=60'; \\\n        echo 'opcache.fast_shutdown=1'; \\\n        echo 'opcache.enable_cli=1'; \\\n        echo 'memory_limit=2048M'; \\\n        echo 'realpath_cache_size = 64k'; \\\n        echo 'realpath_cache_ttl = 3600'; \\\n        echo 'error_reporting = E_ALL | E_STRICT'; \\\n    } > /usr/local/etc/php/conf.d/php.ini\n\nWORKDIR /app",
    "raw_stdout_log": "Sending build context to Docker daemon  1.253MB\r\r\nStep 1/8 : ARG PHP_VERSION\nStep 2/8 : FROM php:$PHP_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/ekino/drupal-debug",
    "repo_commit": "112fdc39409cdc2bfbc8f79388f04599f1c4ce8e",
    "repo_id": 154120537
  },
  {
    "raw_dockerfile": "ARG PYTHON_VERSION\nFROM python:$PYTHON_VERSION-alpine\n\nRUN apk add bash git socat\nRUN pip install tox\n\nWORKDIR /src",
    "raw_stdout_log": "Sending build context to Docker daemon  557.6kB\r\r\nStep 1/5 : ARG PYTHON_VERSION\nStep 2/5 : FROM python:$PYTHON_VERSION-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/syseleven/rebootmgr",
    "repo_commit": "614e524f5c02d1c0b2c6e1c6f08aa9dee54f887c",
    "repo_id": 155863615
  },
  {
    "raw_dockerfile": "ARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}\n\nARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install common dependencies (so that this step can be cached separately)\nARG EC2\nADD ./common/install_base.sh install_base.sh\nRUN bash ./install_base.sh && rm install_base.sh\n\n# Install user\nADD ./common/install_user.sh install_user.sh\nRUN bash ./install_user.sh && rm install_user.sh\n\n# Install katex\nARG KATEX\nADD ./common/install_katex.sh install_katex.sh\nRUN bash ./install_katex.sh && rm install_katex.sh\n\n# Install conda\nENV PATH /opt/conda/bin:$PATH\nARG ANACONDA_PYTHON_VERSION\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\n# Install gcc\nARG GCC_VERSION\nADD ./common/install_gcc.sh install_gcc.sh\nRUN bash ./install_gcc.sh && rm install_gcc.sh\n\n# Install non-standard Python versions (via Travis binaries)\nARG TRAVIS_PYTHON_VERSION\nENV PATH /opt/python/$TRAVIS_PYTHON_VERSION/bin:$PATH\nADD ./common/install_travis_python.sh install_travis_python.sh\nRUN bash ./install_travis_python.sh && rm install_travis_python.sh\n\n# (optional) Install protobuf for ONNX\nARG PROTOBUF\nADD ./common/install_protobuf.sh install_protobuf.sh\nRUN if [ -n \"${PROTOBUF}\" ]; then bash ./install_protobuf.sh; fi\nRUN rm install_protobuf.sh\nENV INSTALLED_PROTOBUF ${PROTOBUF}\n\n# (optional) Install database packages like LMDB and LevelDB\nARG DB\nADD ./common/install_db.sh install_db.sh\nRUN if [ -n \"${DB}\" ]; then bash ./install_db.sh; fi\nRUN rm install_db.sh\nENV INSTALLED_DB ${DB}\n\n# (optional) Install vision packages like OpenCV and ffmpeg\nARG VISION\nADD ./common/install_vision.sh install_vision.sh\nRUN if [ -n \"${VISION}\" ]; then bash ./install_vision.sh; fi\nRUN rm install_vision.sh\nENV INSTALLED_VISION ${VISION}\n\n# Install ccache/sccache (do this last, so we get priority in PATH)\nADD ./common/install_cache.sh install_cache.sh\nENV PATH /opt/cache/bin:$PATH\nRUN bash ./install_cache.sh && rm install_cache.sh\nENV CUDA_NVCC_EXECUTABLE=/opt/cache/lib/nvcc\n\n# Add jni.h for java host build\nADD ./common/install_jni.sh install_jni.sh\nADD ./java/jni.h jni.h\nRUN bash ./install_jni.sh && rm install_jni.sh\n\n# Include BUILD_ENVIRONMENT environment variable in image\nARG BUILD_ENVIRONMENT\nENV BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}\n\n# AWS specific CUDA build guidance\nENV TORCH_CUDA_ARCH_LIST Maxwell\nENV TORCH_NVCC_FLAGS \"-Xfatbin -compress-all\"\n\nUSER jenkins\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon    251MB\r\r\nStep 1/55 : ARG UBUNTU_VERSION\nStep 2/55 : ARG CUDA_VERSION\nStep 3/55 : ARG CUDNN_VERSION\nStep 4/55 : FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/mtbrandy/pytorch",
    "repo_commit": "7f5342e873d39cdcb6978facb258cf730c309bcf",
    "repo_id": 156428488
  },
  {
    "raw_dockerfile": "ARG OS_FAMILY\nARG OS_VERSION\nFROM fastide/toolbox-${OS_FAMILY}:${OS_VERSION}\n\nCOPY install.sh /tmp/\nCOPY configs /tmp/configs\nRUN cd /tmp && ./install.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  5.866MB\r\r\nStep 1/6 : ARG OS_FAMILY\nStep 2/6 : ARG OS_VERSION\nStep 3/6 : FROM fastide/toolbox-${OS_FAMILY}:${OS_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/fast-ide/fast-ide",
    "repo_commit": "30fa3e6ede228565d163625c121f2c886e6c74fa",
    "repo_id": 157584515
  },
  {
    "raw_dockerfile": "ARG PYTHON_TAG\n\nFROM wodby/python:${PYTHON_TAG}\n\nRUN pip install --upgrade pip\n#RUN pip install pipenv\n\nCOPY requirements.txt ./\n\n#COPY Pipfile Pipfile.lock ./\n\n# Install additional dev packages for native extensions (only for -dev python tag)\n#RUN sudo apk add --update missing-package\n\nRUN pip install -r requirements.txt\n#RUN pipenv install --skip-lock --system --dev\n\n# We assume your project name is \"myapp\".\nENV GUNICORN_APP myapp.wsgi:application\n# By default we start Gunicorn server, modify to change it.\n# If your project is in a subdirectory.\n#ENV GUNICORN_PYTHONPATH subdir\nCMD [\"/etc/init.d/gunicorn\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  308.2kB\r\r\nStep 1/7 : ARG PYTHON_TAG\nStep 2/7 : FROM wodby/python:${PYTHON_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/docker4python",
    "repo_commit": "6c1e730bdb9301786cb0ad9631a0164311b8db01",
    "repo_id": 161151570
  },
  {
    "raw_dockerfile": "# target: cue-builder\nARG GOLANG_VERSION\nFROM docker.io/golang:${GOLANG_VERSION}-alpine AS cue-builder\nARG CUE_VERSION\nENV \\\n\tOUTDIR='/out' \\\n\tGO111MODULE='on'\nRUN set -eux && \\\n\tapk add --no-cache \\\n\t\tgit\nWORKDIR /go/src/cuelang.org/go\nCOPY go.mod /go/src/cuelang.org/go/\nCOPY go.sum /go/src/cuelang.org/go/\nRUN set -eux && \\\n\tgo mod download\nCOPY . /go/src/cuelang.org/go/\nRUN set -eux && \\\n\tCGO_ENABLED=0 GOBIN=${OUTDIR}/usr/bin/ go install \\\n\t\t-a -v \\\n\t\t-tags='osusergo,netgo' \\\n\t\t-installsuffix='netgo' \\\n\t\t-ldflags=\"-s -w -X cuelang.org/go/cmd/cue/cmd.version=${CUE_VERSION} \\\"-extldflags=-static\\\"\" \\\n\t./cmd/cue\n\n# target: cue\nFROM gcr.io/distroless/static:latest AS cue\nCOPY --from=cue-builder /out/ /\nENTRYPOINT [\"/usr/bin/cue\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  3.284MB\r\r\nStep 1/14 : ARG GOLANG_VERSION\nStep 2/14 : FROM docker.io/golang:${GOLANG_VERSION}-alpine AS cue-builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/cuelang/cue",
    "repo_commit": "0d4abd79dc454210f6a476a230d36c8b0e41e93b",
    "repo_id": 167997313
  },
  {
    "raw_dockerfile": "ARG RUSTC_VERSION\nFROM rust:${RUSTC_VERSION}\n\nRUN cargo install cargo-watch\nRUN apt-get update && apt-get install -y ruby\n\nWORKDIR /root/scriptkeeper\nADD Cargo.* ./\nRUN mkdir src && touch src/lib.rs && cargo install --root /usr/local --path . ; true\nADD src ./src\nRUN touch src/lib.rs\nRUN cargo install --root /usr/local --path .\nWORKDIR /root\nRUN rm /root/scriptkeeper -rf\n\nENTRYPOINT [\"scriptkeeper\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  832.5kB\r\r\nStep 1/13 : ARG RUSTC_VERSION\nStep 2/13 : FROM rust:${RUSTC_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/Originate/scriptkeeper",
    "repo_commit": "f9b8094869522f89ee8e6a649efad08ef9744ed3",
    "repo_id": 169262764
  },
  {
    "raw_dockerfile": "ARG php_version\n\nFROM php:${php_version}-cli\n\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    libzip-dev \\\n    zip \\\n&& docker-php-ext-install \\\n    zip \\\n    pdo_mysql \\\n&& pecl install \\\n    xdebug-2.9.2 \\\n&& docker-php-ext-enable \\\n    xdebug\n\nCOPY . /var/php\nWORKDIR /var/php\n\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n    composer update --prefer-dist --no-interaction",
    "raw_stdout_log": "Sending build context to Docker daemon  468.5kB\r\r\nStep 1/6 : ARG php_version\nStep 2/6 : FROM php:${php_version}-cli",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/antishov/StofDoctrineExtensionsBundle",
    "repo_commit": "96095fd45cd2bf12b66fa8dbab80c8878dd0247b",
    "repo_id": 201091779
  },
  {
    "raw_dockerfile": "# This file should be run after compiling the solution with the following command:\n# msbuild /r /p:Configuration=Release /p:OutputPath=app /t:Publish\n\n# You should run this file with the following parameters:\n# docker build . --build-arg DOTNETTAG=<dotnettag> --build-arg OSTAG=<ostag> -t <image-tag>\n# where:\n#  <dotnettag> is the tag of the dotnet aspnet runtime image\n#  <ostag> is the tag of the runtime for hass.io (amd64, armv7, aarch64...)\n\nARG DOTNETTAG\nARG OSTAG\n\nFROM mcr.microsoft.com/dotnet/core/aspnet:$DOTNETTAG\nEXPOSE 80\n\n# Metadata for information about this software\nLABEL description=\"Zigbee2MqttAssistant - A GUI for Zigbee2Mqtt\" author=\"carl.debilly@gmail.com\" \"project.url\"=\"https://github.com/yllibed/Zigbee2MqttAssistant\"\n\n# Additionnal metadata for HASS.IO\nLABEL io.hass.version=\"172\" io.hass.type=\"addon\" io.hass.arch=$OSTAG\n\nWORKDIR /app\nCOPY Zigbee2MqttAssistant/apppublish .\nENTRYPOINT [\"dotnet\", \"Zigbee2MqttAssistant.dll\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  20.36MB\r\r\nStep 1/9 : ARG DOTNETTAG\nStep 2/9 : ARG OSTAG\nStep 3/9 : FROM mcr.microsoft.com/dotnet/core/aspnet:$DOTNETTAG",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/yllibed/Zigbee2MqttAssistant",
    "repo_commit": "e20042d5dde758b6f55f222bb8e6a345398e6815",
    "repo_id": 201173385
  },
  {
    "raw_dockerfile": "ARG PHP_VERSION\nFROM php:$PHP_VERSION\nRUN apt-get update \\\n    && apt-get install -y libffi-dev git unzip \\\n    && docker-php-source extract \\\n    && docker-php-ext-install ffi \\\n    && docker-php-source delete\nWORKDIR /usr/src/z-engine\nRUN curl -sS https://getcomposer.org/installer | php && mv ./composer.phar /usr/local/bin/composer\nCOPY . /usr/src/z-engine\nRUN composer install",
    "raw_stdout_log": "Sending build context to Docker daemon  870.4kB\r\r\nStep 1/7 : ARG PHP_VERSION\nStep 2/7 : FROM php:$PHP_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/lisachenko/z-engine",
    "repo_commit": "ac88751b275b99e650d6853ef0d3f130f431f6ba",
    "repo_id": 206517572
  },
  {
    "raw_dockerfile": "#\n# BUILD ENVIRONMENT\n# -----------------\nARG GO_VERSION\nFROM golang:${GO_VERSION} as builder\n\nRUN apt-get -y update && apt-get -y install upx\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY internal/ internal/\nCOPY webhooks/ webhooks/\nCOPY version/ version/\nCOPY cmd/ cmd/\n\nENV CGO_ENABLED=0\nENV GOOS=linux\nENV GOARCH=amd64\nENV GO111MODULE=on\n\n# Do an initial compilation before setting the version so that there is less to\n# re-compile when the version changes\nRUN go build -mod=readonly \"-ldflags=-s -w\" ./...\n\nARG VERSION\nARG BACKUP_AGENT_IMAGE\nARG RESTORE_AGENT_IMAGE\n\n# Compile all the binaries\nRUN go build \\\n    -mod=readonly \\\n    -ldflags=\"-X=github.com/improbable-eng/etcd-cluster-operator/version.Version=${VERSION}\\\n              -X=main.defaultBackupAgentImage=${BACKUP_AGENT_IMAGE}\\\n              -X=main.defaultRestoreAgentImage=${RESTORE_AGENT_IMAGE}\" \\\n    -o manager main.go\nRUN go build -mod=readonly \"-ldflags=-s -w -X=github.com/improbable-eng/etcd-cluster-operator/version.Version=${VERSION}\" -o proxy cmd/proxy/main.go\nRUN go build -mod=readonly \"-ldflags=-s -w -X=github.com/improbable-eng/etcd-cluster-operator/version.Version=${VERSION}\" -o backup-agent cmd/backup-agent/main.go\nRUN go build -mod=readonly \"-ldflags=-s -w -X=github.com/improbable-eng/etcd-cluster-operator/version.Version=${VERSION}\" -o restore-agent cmd/restore-agent/main.go\n\nRUN upx manager proxy backup-agent restore-agent\n\n#\n# IMAGE TARGETS\n# -------------\nFROM gcr.io/distroless/static:nonroot as controller\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nUSER nonroot:nonroot\nENTRYPOINT [\"/manager\"]\n\nFROM gcr.io/distroless/static:nonroot as proxy\nWORKDIR /\nCOPY --from=builder /workspace/proxy .\nUSER nonroot:nonroot\nENTRYPOINT [\"/proxy\"]\n\nFROM gcr.io/distroless/static:nonroot as backup-agent\nWORKDIR /\nCOPY --from=builder /workspace/backup-agent .\nUSER nonroot:nonroot\nENTRYPOINT [\"/backup-agent\"]\n\n# restore-agent must run as root\n# See https://github.com/improbable-eng/etcd-cluster-operator/issues/139\nFROM gcr.io/distroless/static as restore-agent\nWORKDIR /\nCOPY --from=builder /workspace/restore-agent .\nUSER root:root\nENTRYPOINT [\"/restore-agent\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  779.8kB\r\r\nStep 1/47 : ARG GO_VERSION\nStep 2/47 : FROM golang:${GO_VERSION} as builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/improbable-eng/etcd-cluster-operator",
    "repo_commit": "21b9efd4c26c0a2d40c9cfb17c228089ff1a3b2d",
    "repo_id": 210613496
  },
  {
    "raw_dockerfile": "ARG CPU_OR_GPU\nARG AWS_REGION\nFROM 520713654638.dkr.ecr.${AWS_REGION}.amazonaws.com/sagemaker-rl-tensorflow:ray0.5.3-${CPU_OR_GPU}-py3\n\nWORKDIR /opt/ml\n\nRUN apt-get update && apt-get install -y \\\n      git cmake ffmpeg pkg-config \\\n      qtbase5-dev libqt5opengl5-dev libassimp-dev \\\n      libpython3.5-dev libtinyxml-dev \\\n    && cd /opt \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\n\nRUN pip install --upgrade \\\n    pip \\\n    setuptools\n\n\nRUN pip install -U gym && pip install gym[atari] && pip install -U ray==0.6.5 && ldconfig\n  \nRUN pip install setproctitle\n\nRUN pip install sagemaker-containers --upgrade\n\nENV PYTHONUNBUFFERED 1\n\n############################################\n# Test Installation\n############################################\n# Test to verify if all required dependencies installed successfully or not.\n#RUN python -c \"import gym;import sagemaker_containers.cli.train; import roboschool; import ray; from sagemaker_containers.cli.train import main\"\nRUN python -c \"import gym;import sagemaker_containers.cli.train; import ray; from sagemaker_containers.cli.train import main\"\n\n# Make things a bit easier to debug\nWORKDIR /opt/ml/code",
    "raw_stdout_log": "Sending build context to Docker daemon  2.507MB\r\r\nStep 1/12 : ARG CPU_OR_GPU\nStep 2/12 : ARG AWS_REGION\nStep 3/12 : FROM 520713654638.dkr.ecr.${AWS_REGION}.amazonaws.com/sagemaker-rl-tensorflow:ray0.5.3-${CPU_OR_GPU}-py3",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/aws-john/SageMakerRL-SML-Summit-2019",
    "repo_commit": "19b314118e6c0e7b165afa98fd06360578c8e154",
    "repo_id": 217447949
  },
  {
    "raw_dockerfile": "ARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION\n\nARG PG_MAJOR\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\nARG RAILS_ENV\n\nENV RAILS_ENV=${RAILS_ENV} \\\n  SECRET_KEY_BASE=foo \\\n  RAILS_SERVE_STATIC_FILES=true \\\n  RAILS_LOG_TO_STDOUT=true\n\nWORKDIR /app\n\n# Add PostgreSQL to sources list\nRUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\n\n# Add NodeJS to sources list\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\n\n# Add Yarn to the sources list\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list\n\nCOPY .docker/Aptfile /tmp/Aptfile\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    postgresql-client-$PG_MAJOR \\\n    netcat \\\n    nodejs \\\n    yarn=$YARN_VERSION-1 \\\n    $(cat /tmp/Aptfile | xargs) && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    truncate -s 0 /var/log/*log\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES 1\n\n# Configure bundler and PATH\nENV LANG=C.UTF-8 \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\n\n# Install gems\nADD Gemfile* /app/\nRUN gem update --system && \\\n    gem install bundler:$BUNDLER_VERSION\n\nRUN bundle config --global frozen 1 \\\n && bundle install --binstubs -j4 --retry 3\n\n# Install yarn packages\nCOPY package.json yarn.lock /app/\nRUN yarn install\n\n# Add the Rails app\nADD . /app\n\nWORKDIR /app\n\nEXPOSE 3000\n\nRUN date -u > BUILD_TIME\n\n# Start up\n# CMD [\".docker/startup.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  1.655MB\r\r\nStep 1/25 : ARG RUBY_VERSION\nStep 2/25 : FROM ruby:$RUBY_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/jellypbc/poster",
    "repo_commit": "6a01dc84bd9364996342d1a1fc6d375634fb63e5",
    "repo_id": 223041439
  },
  {
    "raw_dockerfile": "ARG VERSION\nFROM silex/emacs:$VERSION\n\nARG UID\n\nCOPY scripts/docker-install.bash /tmp/\nRUN /tmp/docker-install.bash \"$UID\"\n\nUSER $UID\nWORKDIR /home/docker/src\n\nCMD bash",
    "raw_stdout_log": "Sending build context to Docker daemon  995.3kB\r\r\nStep 1/8 : ARG VERSION\nStep 2/8 : FROM silex/emacs:$VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/raxod502/selectrum",
    "repo_commit": "216d371efe1a639ec822a5a1d04f29f969afbfc8",
    "repo_id": 226758122
  },
  {
    "raw_dockerfile": "ARG VERSION\nFROM silex/emacs:$VERSION\n\nARG UID\n\nCOPY scripts/docker-install.bash /tmp/\nRUN /tmp/docker-install.bash \"$UID\"\n\nUSER $UID\nWORKDIR /home/docker/src\n\nCMD bash",
    "raw_stdout_log": "Sending build context to Docker daemon  237.6kB\r\r\nStep 1/8 : ARG VERSION\nStep 2/8 : FROM silex/emacs:$VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/raxod502/ctrlf",
    "repo_commit": "0bf26a5688b7f34695310100dc8c28381bfafe34",
    "repo_id": 229998424
  },
  {
    "raw_dockerfile": "ARG CUDA_VERSION\n\nFROM nvidia/cuda:$CUDA_VERSION-devel-ubuntu18.04\nARG NVIDIA_VERSION\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y install python3-pip libxrender1 libsm6 xserver-xorg-core xorg python3-venv vim pciutils wget git module-init-tools\n\nENV APP_HOME /app\nWORKDIR $APP_HOME\nCOPY requirements.txt scripts/install_nvidia.sh /app/\nRUN pip3 install -r requirements.txt && python3 -c \"import ai2thor.controller; ai2thor.controller.Controller(download_only=True)\"\nRUN NVIDIA_VERSION=$NVIDIA_VERSION /app/install_nvidia.sh\n\nCOPY robothor_challenge /app/robothor_challenge\nCOPY submission.sh  ./\nCOPY example_agent.py ./\n\nCMD [\"/bin/bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon   43.9MB\r\r\nStep 1/14 : ARG CUDA_VERSION\nStep 2/14 : FROM nvidia/cuda:$CUDA_VERSION-devel-ubuntu18.04",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/allenai/robothor-challenge",
    "repo_commit": "d8226384ab00d6d2b178692fb7522033f998e658",
    "repo_id": 238569928
  },
  {
    "raw_dockerfile": "FROM perl:{{version}}\nMAINTAINER Rob Kinyon rob.kinyon@gmail.com\n\nRUN curl -L http://cpanmin.us | perl - App::cpanminus\nRUN cpanm Carton CPAN::Uploader\n\nENV app /app\nRUN mkdir -p $app\nWORKDIR $app\n\nCOPY \"devops/within_carton\" \"/usr/local/bin/within_carton\"\nCOPY \"devops/MyConfig.pm\" \"/root/.cpan/CPAN/MyConfig.pm\"\nCOPY \"cpanfile\" \"/app/cpanfile\"\n\nRUN carton install\n\nENTRYPOINT [ \"/usr/local/bin/within_carton\" ]\nCMD [ \"prove\", \"-lrs\" ]",
    "raw_stdout_log": "Sending build context to Docker daemon  2.237MB\r\r\nStep 1/13 : FROM perl:{{version}}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/robkinyon/dbm-deep",
    "repo_commit": "ef5b593dcb068745a601f9fa4415efc045dc82fd",
    "repo_id": 238808
  },
  {
    "raw_dockerfile": "ARG DOCKER_ARCH\nFROM $DOCKER_ARCH/amazonlinux:2 as builder\nRUN yum group install -y \"Development Tools\"\nRUN yum install -y glibc-static\n\nARG bash_version=5.0\nARG bash_patch_level=11\n\nWORKDIR /opt/build\nCOPY ./hashes/bash ./hashes\n\nRUN \\\n  curl -OL https://ftp.gnu.org/gnu/bash/bash-${bash_version}.tar.gz && \\\n  grep bash-${bash_version}.tar.gz hashes | sha512sum --check - && \\\n  tar -xf bash-${bash_version}.tar.gz && \\\n  rm bash-${bash_version}.tar.gz\n\nWORKDIR /opt/build/bash-${bash_version}\nRUN for patch_level in $(seq ${bash_patch_level}); do \\\n        curl -L https://ftp.gnu.org/gnu/bash/bash-${bash_version}-patches/bash${bash_version//.}-$(printf '%03d' $patch_level) | patch -p0; \\\n    done\nRUN CFLAGS=\"-Os -DHAVE_DLOPEN=0\" ./configure \\\n        --enable-static-link \\\n        --without-bash-malloc \\\n    || { cat config.log; exit 1; }\nRUN make -j`nproc`\nRUN cp bash /opt/bash\n\nFROM $DOCKER_ARCH/amazonlinux:2\n\nARG IMAGE_VERSION\n# Make the container image version a mandatory build argument\nRUN test -n \"$IMAGE_VERSION\"\nLABEL \"org.opencontainers.image.version\"=\"$IMAGE_VERSION\"\n\nRUN yum update -y \\\n    && yum install -y openssh-server sudo util-linux \\\n    && yum clean all\n\nCOPY --from=builder /opt/bash /opt/bin/\n\nRUN rm -f /etc/motd /etc/issue\nADD --chown=root:root motd /etc/\n\nADD --chown=root:root ec2-user.sudoers /etc/sudoers.d/ec2-user\nADD start_admin_sshd.sh /usr/sbin/\nADD ./sshd_config /etc/ssh/\nADD ./sheltie /usr/bin/\n\nRUN chmod 440 /etc/sudoers.d/ec2-user\nRUN chmod +x /usr/sbin/start_admin_sshd.sh\nRUN chmod +x /usr/bin/sheltie\nRUN groupadd -g 274 api\nRUN useradd -m -G users,api ec2-user\n\nCMD [\"/usr/sbin/start_admin_sshd.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  130.6kB\r\r\nStep 1/33 : ARG DOCKER_ARCH\nStep 2/33 : FROM $DOCKER_ARCH/amazonlinux:2 as builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/bottlerocket-os/bottlerocket-admin-container",
    "repo_commit": "320986ca6a204d57dcc17cb900e7ca8cab4641cc",
    "repo_id": 240619493
  },
  {
    "raw_dockerfile": "# This is a Dockerfile. \n#\n# It is a quick way of getting a server running with this code.\n# See http://docker.io for more details.\n#\n# Use phusion/passenger-full as base image.\n# See https://github.com/phusion/passenger-docker for more information\nFROM phusion/passenger-ruby21:\nMAINTAINER tom@counsell.org\n\n# Set correct environment variables.\nENV HOME /root\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Make sure we are using Ruby 2.1\nRUN ruby-switch --set ruby2.1\n\n# Remove the default Nginx configuration\nRUN rm -f /etc/nginx/sites-enabled/default\n\n# Enable Nginx server\nRUN rm -f /etc/service/nginx/down\n\n# Add the nginx configuration for the server which will be on port 8080\nADD util/nginx.conf /etc/nginx/sites-enabled/2050.conf\n\n# Add the source code in this directory to the docker image\nADD . /home/app/2050\n\n# Install the dependencies for the app\nWORKDIR /home/app/2050\nRUN bundle\n\n# Compile the C code\nWORKDIR /home/app/2050/model\nRUN ruby compile_c_version_if_needed.rb\n\n# Precompile templates (can't do later becase filesystem may be readonly)\nWORKDIR /home/app/2050/src\nRUN ruby compile_template.rb\n\n# Now need to build this image\n# e.g., docker build .\n#\n# Then need to run this image\n# docker run -p 8080:8080 -d <image-id>\n#\n# Then server in the contianer will be available on 8080\n#\n# If testing on osx then will also need to do:\n# boot2docker ip\n# to find out what ip address the server will be on",
    "raw_stdout_log": "Sending build context to Docker daemon  62.03MB\r\r\nStep 1/16 : FROM phusion/passenger-ruby21:",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/decc/twenty-fifty",
    "repo_commit": "1a9a777b307ceffb36730fdcc1b8ccb40ce6f19d",
    "repo_id": 2635732
  },
  {
    "raw_dockerfile": "# provide xAH on top of the AnalysisBase/AnalysisTop image\nARG DOCKER_BASE_REPO\nARG DOCKER_IMG\nARG DOCKER_TAG\nARG GIT_SHA\nFROM $DOCKER_BASE_REPO/$DOCKER_IMG:$DOCKER_TAG\n\n# change TMPDIR because analysisbase image problems writing to /tmp\nARG DOCKER_IMG\nARG GIT_SHA\nENV TMPDIR=/workarea/tmp/\nENV DOCKER_IMG=${DOCKER_IMG:-analysisbase}\nENV GIT_SHA=${GIT_SHA:-private}\n\nWORKDIR $TMPDIR\nWORKDIR /home/atlas\n\n### COPY COMMANDS HERE ###\n\n# Copy the project's sources into the image\nCOPY . /workarea/src/xAODAnaHelpers\nCOPY ci/top_CMakeLists.txt /workarea/src/CMakeLists.txt.tmp\n# this is needed to get rpmbuild temp dir in different place\nCOPY ci/.rpmmacros /root/.rpmmacros\n# Use our MOTD (Message-of-the-Day)\nCOPY ci/motd /etc/motd\n# Copy the environemnt setup script for xAH\nCOPY ci/xAODAnaHelpers_setup.sh /xAODAnaHelpers_setup.sh\n\n### RUN COMMANDS HERE (AS ROOT) ###\n# Switch to ROOT user for now\nUSER root\n# 1. Build the project inside a build/ directory\n# 2. Create an RPM\n# 3. Install the RPM\n# 4. Clean up\n# 5. Call the MOTD\n# 6. Call the environment setup script in .bashrc\nRUN export RELEASE_TYPE=$([ \"$DOCKER_IMG\" == \"analysisbase\" ] && echo \"AnalysisBase\" || echo \"AnalysisTop\") \\\n    && envsubst '\\$RELEASE_TYPE' < /workarea/src/CMakeLists.txt.tmp > /workarea/src/CMakeLists.txt \\\n    && source /release_setup.sh \\\n    && mkdir -p /workarea/build \\\n    && cd /workarea/build \\\n    && time cmake ../src \\\n    && time make -j2 \\\n    && cpack \\\n    && rpm -i /workarea/build/*_*.rpm \\\n    && rm -rf /workarea \\\n    && echo '[ ! -z \"$TERM\" -a -r /etc/motd ] && cat /etc/motd' >> /home/atlas/.bashrc \\\n    && echo 'source /xAODAnaHelpers_setup.sh' >> /home/atlas/.bashrc\n\n# set TMPDIR back\nENV TMPDIR=/tmp\n# Switch back to the ATLAS account\nUSER atlas\n# Start the image with BASH by default\nCMD /bin/bash\n\n### TO DO ENTRYPOINT\n#RUN echo -e '#!/bin/bash\\nsource ~/.bashrc\\nxAH_run.py \"$@\"' > $HOME/entrypoint.sh\n#RUN chmod +x $HOME/entrypoint.sh\n#ENTRYPOINT [\"/home/atlas/entrypoint.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  54.93MB\r\r\nStep 1/22 : ARG DOCKER_BASE_REPO\nStep 2/22 : ARG DOCKER_IMG\nStep 3/22 : ARG DOCKER_TAG\nStep 4/22 : ARG GIT_SHA\nStep 5/22 : FROM $DOCKER_BASE_REPO/$DOCKER_IMG:$DOCKER_TAG",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/UCATLAS/xAODAnaHelpers",
    "repo_commit": "8d406f8ec653eafc07537ebd6ba0eaff494e8af4",
    "repo_id": 35496971
  },
  {
    "raw_dockerfile": "ARG ARCHREPO\nFROM ${ARCHREPO}/node:12\n\nENV NODE_ENV=production\nENV COMPILED=true\n\nARG QEMU_ARCH\nCOPY qemu-${QEMU_ARCH}-static /usr/bin/\n\nRUN apt-get update && apt-get install -y ffmpeg libogg-dev\n\nCOPY ./bin /opt/cast/\nCOPY ./package.json /opt/cast/package.json\nCOPY ./package-lock.json /opt/cast/package-lock.json\nCOPY ./intern/streams/icy /opt/cast/intern/streams/icy\nCOPY ./public /opt/cast/public\nWORKDIR /opt/cast/\n\nRUN npm install\n\nCMD node server.js",
    "raw_stdout_log": "Sending build context to Docker daemon  11.54MB\r\r\nStep 1/15 : ARG ARCHREPO\nStep 2/15 : FROM ${ARCHREPO}/node:12",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/innovate-technologies/Cast",
    "repo_commit": "b7ae1816c1ec8c09edce8a6f63547f7c950a42bb",
    "repo_id": 38200120
  },
  {
    "raw_dockerfile": "# This is a Dockerfile. \n#\n# It is a quick way of getting a server running with this code.\n# See http://docker.io for more details.\n#\n# Use phusion/passenger-full as base image.\n# See https://github.com/phusion/passenger-docker for more information\nFROM phusion/passenger-ruby21:\nMAINTAINER tom@counsell.org\n\n# Set correct environment variables.\nENV HOME /root\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Make sure we are using Ruby 2.1\nRUN ruby-switch --set ruby2.1\n\n# Remove the default Nginx configuration\nRUN rm -f /etc/nginx/sites-enabled/default\n\n# Enable Nginx server\nRUN rm -f /etc/service/nginx/down\n\n# Add the nginx configuration for the server which will be on port 8080\nADD util/nginx.conf /etc/nginx/sites-enabled/2050.conf\n\n# Add the source code in this directory to the docker image\nADD . /home/app/2050\n\n# Install the dependencies for the app\nWORKDIR /home/app/2050\nRUN bundle\n\n# Compile the C code\nWORKDIR /home/app/2050/model\nRUN ruby compile_c_version_if_needed.rb\n\n# Precompile templates (can't do later becase filesystem may be readonly)\nWORKDIR /home/app/2050/src\nRUN bundle exec middleman build\n\n# Now need to build this image\n# e.g., docker build .\n#\n# Then need to run this image\n# docker run -p 8080:80 -d <image-id>\n#\n# Then server in the contianer will be available on 8080\n#\n# If testing on osx then will also need to do:\n# boot2docker ip\n# to find out what ip address the server will be on",
    "raw_stdout_log": "Sending build context to Docker daemon  56.76MB\r\r\nStep 1/16 : FROM phusion/passenger-ruby21:",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/decc/twenty-fifty-new-look",
    "repo_commit": "d2780c3aa656114a9f713c30b5ada16680094c23",
    "repo_id": 38351931
  },
  {
    "raw_dockerfile": "ARG NODE_VERSION\nFROM node:${NODE_VERSION}-alpine\nLABEL maintainer=\"Tine Kondo <kondotine@gmail.com>\"\n\nWORKDIR /usr/app\n\nRUN \\\n    # Update apk repositories\n    echo \"http://dl-2.alpinelinux.org/alpine/edge/main\" > /etc/apk/repositories && \\\n    echo \"http://dl-2.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    echo \"http://dl-2.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\    \n    # Install chromium\n    apk -U --no-cache --allow-untrusted add  \\\n        chromium \\\n        xvfb && \\\n    # Minimize size\n    rm -rf /tmp/* /var/cache/apk/* *.tar.gz ~/.npm\n\nENV CHROME_BIN=/usr/bin/chromium-browser\nENV CHROME_PATH=/usr/lib/chromium/\n\nRUN yarn global add --silent gulp-cli yo @angular/cli && yarn cache clean\nRUN sed -i -e '/rootCheck/d' \"/usr/local/share/.config/yarn/global/node_modules/yo/lib/cli.js\"\n\nCOPY integrations/ integrations/\nCOPY package.json generator-ngx-library/\nCOPY app/ generator-ngx-library/app/\n\nRUN chmod +x integrations/build.sh\n\nWORKDIR generator-ngx-library/\nRUN npm link\n\nWORKDIR ..\n\nENTRYPOINT  [\"./integrations/build.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  4.637MB\r\r\nStep 1/17 : ARG NODE_VERSION\nStep 2/17 : FROM node:${NODE_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/tinesoft/generator-ngx-library",
    "repo_commit": "e822a2967491db44c9d55f5bb73f08be34a1f508",
    "repo_id": 38559565
  },
  {
    "raw_dockerfile": "FROM postgres:${PG_VERSION}-alpine\n\n# Install dependencies\nRUN apk add --no-cache \\\n\topenssl curl \\\n\tcmocka-dev \\\n\tperl perl-ipc-run \\\n\tpython3 python3-dev py3-virtualenv \\\n\tcoreutils linux-headers \\\n\tmake musl-dev gcc bison flex \\\n\tzlib-dev libedit-dev \\\n\tclang clang-analyzer;\n\n# Install fresh valgrind\nRUN apk add valgrind \\\n\t--update-cache \\\n\t--repository http://dl-3.alpinelinux.org/alpine/edge/main;\n\n# Environment\nENV LANG=C.UTF-8 PGDATA=/pg/data\n\n# Make directories\nRUN\tmkdir -p ${PGDATA} && \\\n\tmkdir -p /pg/testdir\n\n# Add data to test dir\nADD . /pg/testdir\n\n# Grant privileges\nRUN\tchown -R postgres:postgres ${PGDATA} && \\\n\tchown -R postgres:postgres /pg/testdir && \\\n\tchmod a+rwx /usr/local/lib/postgresql && \\\n\tchmod a+rwx /usr/local/share/postgresql/extension\n\nCOPY run_tests.sh /run.sh\nRUN chmod 755 /run.sh\n\nUSER postgres\nWORKDIR /pg/testdir\nENTRYPOINT LEVEL=${LEVEL} /run.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  7.308MB\r\r\nStep 1/12 : FROM postgres:${PG_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/postgrespro/pg_pathman",
    "repo_commit": "bf0a84ca516494e4459df3924108caf99edec734",
    "repo_id": 52430435
  },
  {
    "raw_dockerfile": "FROM davidcaste/alpine-java-unlimited-jce:%JVM_FLAVOUR%\n\nMAINTAINER David Castellanos <davidcaste@gmail.com>\n\nENV TOMCAT_MAJOR=%TOMCAT_MAJOR% \\\n    TOMCAT_VERSION=%TOMCAT_VERSION% \\\n    TOMCAT_HOME=/opt/tomcat \\\n    CATALINA_HOME=/opt/tomcat \\\n    CATALINA_OUT=/dev/null\n\nRUN apk upgrade --update && \\\n    apk add --update curl && \\\n    curl -jksSL -o /tmp/apache-tomcat.tar.gz http://archive.apache.org/dist/tomcat/tomcat-${TOMCAT_MAJOR}/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz && \\\n    gunzip /tmp/apache-tomcat.tar.gz && \\\n    tar -C /opt -xf /tmp/apache-tomcat.tar && \\\n    ln -s /opt/apache-tomcat-${TOMCAT_VERSION} ${TOMCAT_HOME} && \\\n    rm -rf ${TOMCAT_HOME}/webapps/* && \\\n    apk del curl && \\\n    rm -rf /tmp/* /var/cache/apk/*\n\nCOPY logging.properties ${TOMCAT_HOME}/conf/logging.properties\nCOPY server.xml ${TOMCAT_HOME}/conf/server.xml\n\nVOLUME [\"/logs\"]\nEXPOSE 8080",
    "raw_stdout_log": "Sending build context to Docker daemon    107kB\r\r\nStep 1/8 : FROM davidcaste/alpine-java-unlimited-jce:%JVM_FLAVOUR%",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/davidcaste/docker-alpine-tomcat",
    "repo_commit": "c3315b76712c2afb158a54a37a77b6bc93b0a518",
    "repo_id": 53088017
  },
  {
    "raw_dockerfile": "FROM postgres:${PG_VERSION}-alpine\n\nENV LANG=C.UTF-8 PGDATA=/pg/data\n\nRUN if [ \"${CHECK_CODE}\" = \"clang\" ] ; then \\\n\t# echo 'http://dl-3.alpinelinux.org/alpine/edge/main' > /etc/apk/repositories; \\\n\t# Use alpine/v3.6/main instead of alpine/edge/main to fix version of clang to '8.*.*'\n\tapk --no-cache add clang-analyzer make musl-dev gcc --repository http://dl-cdn.alpinelinux.org/alpine/v3.6/main; \\\n\tfi\n\nRUN if [ \"${CHECK_CODE}\" = \"cppcheck\" ] ; then \\\n\tapk --no-cache add cppcheck --repository http://dl-cdn.alpinelinux.org/alpine/v3.6/community; \\\n\tfi\n\nRUN if [ \"${CHECK_CODE}\" = \"false\" ] ; then \\\n\t# echo 'http://dl-3.alpinelinux.org/alpine/edge/main' > /etc/apk/repositories; \\\n\t# Use alpine/v3.6/main instead of alpine/edge/main to fix version of clang to '8.*.*'\n\t# Install clang as well, since LLVM is enabled in PG_VERSION >= 11 by default\n\tapk --no-cache add curl python3 gcc make musl-dev llvm clang clang-dev \\\n\t\t--repository http://dl-cdn.alpinelinux.org/alpine/v3.6/community \\\n\t\t--repository http://dl-cdn.alpinelinux.org/alpine/v3.6/main; \\\n\tfi\n\nRUN mkdir -p ${PGDATA} && \\\n\tmkdir /pg/src && \\\n\tchown postgres:postgres ${PGDATA} && \\\n\tchmod -R a+rwx /usr/local/lib/postgresql && \\\n\tchmod a+rwx /usr/local/share/postgresql/extension\n\nADD . /pg/src\nWORKDIR /pg/src\nRUN chmod -R go+rwX /pg/src\nUSER postgres\nENTRYPOINT PGDATA=${PGDATA} CHECK_CODE=${CHECK_CODE} bash run_tests.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  205.3kB\r\r\nStep 1/11 : FROM postgres:${PG_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/postgrespro/pg_wait_sampling",
    "repo_commit": "4c7549e8596905a3e19ae692e515c255846f41fd",
    "repo_id": 54636498
  },
  {
    "raw_dockerfile": "############################################################################\n# To use this code with Tripleo, the container must be modified as follows #\n# Please edit the release and tag variables to match your enviroment       #\n# See http://tripleo.org/install/containers_deployment/3rd_party.html      #\n############################################################################\nFROM $LISTENING_IP_ADDRESS:8787/tripleo$RELEASE/centos-binary-cinder-volume:$CONTAINERTAG\n\n# switch to root and install a custom RPM, etc.\nUSER root\nRUN git clone --depth=1 https://github.com/iXsystems/cinder /tmp/cinder\nRUN cp -R /tmp/cinder/driver/ixsystems /usr/lib/python2.7/site-packages/cinder/volume/drivers/ \n\n# switch the container back to the default user\nUSER cinder",
    "raw_stdout_log": "Sending build context to Docker daemon  1.004MB\r\r\nStep 1/5 : FROM $LISTENING_IP_ADDRESS:8787/tripleo$RELEASE/centos-binary-cinder-volume:$CONTAINERTAG",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/iXsystems/cinder",
    "repo_commit": "0adf334695be3014be993c7bdc9aef9c70c23d71",
    "repo_id": 55000069
  },
  {
    "raw_dockerfile": "ARG GO_VERSION\nFROM golang:${GO_VERSION} as builder\n\nARG BUILD_OPTS\n\n# RClone\nRUN go get github.com/rclone/rclone\nWORKDIR /go/src/github.com/rclone/rclone\nRUN env ${BUILD_OPTS} go build\n\n# Restic\nRUN go get github.com/restic/restic\nWORKDIR /go/src/github.com/restic/restic\nRUN env ${BUILD_OPTS} make restic\n\n# Bivac\nWORKDIR /go/src/github.com/camptocamp/bivac\nCOPY . .\nRUN env ${BUILD_OPTS} make bivac\n\nFROM debian\nRUN apt-get update && \\\n    apt-get install -y openssh-client procps && \\\n\trm -rf /var/lib/apt/lists/*\nCOPY --from=builder /etc/ssl /etc/ssl\nCOPY --from=builder /go/src/github.com/camptocamp/bivac/bivac /bin/bivac\nCOPY --from=builder /go/src/github.com/camptocamp/bivac/providers-config.default.toml /\nCOPY --from=builder /go/src/github.com/restic/restic /bin/restic\nCOPY --from=builder /go/src/github.com/rclone/rclone /bin/rclone\nENTRYPOINT [\"/bin/bivac\"]\nCMD [\"\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  55.43MB\r\r\nStep 1/21 : ARG GO_VERSION\nStep 2/21 : FROM golang:${GO_VERSION} as builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/camptocamp/bivac",
    "repo_commit": "ddb17130ae865fb6cc657cde7214e45fc7a884d3",
    "repo_id": 55408680
  },
  {
    "raw_dockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\nARG JUPYTERHUB_VERSION\nFROM jupyterhub/jupyterhub-onbuild:$JUPYTERHUB_VERSION\n\n# Install dockerspawner, oauth, postgres\nRUN /opt/conda/bin/conda install -yq psycopg2=2.7 && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    /opt/conda/bin/pip install --no-cache-dir \\\n        oauthenticator==0.8.* \\\n        dockerspawner==0.9.*\n\n# Copy TLS certificate and key\nENV SSL_CERT /srv/jupyterhub/secrets/jupyterhub.crt\nENV SSL_KEY /srv/jupyterhub/secrets/jupyterhub.key\nCOPY ./secrets/*.crt $SSL_CERT\nCOPY ./secrets/*.key $SSL_KEY\nRUN chmod 700 /srv/jupyterhub/secrets && \\\n    chmod 600 /srv/jupyterhub/secrets/*\n\nCOPY ./userlist /srv/jupyterhub/userlist",
    "raw_stdout_log": "Sending build context to Docker daemon  274.9kB\r\r\nStep 1/9 : ARG JUPYTERHUB_VERSION\nStep 2/9 : FROM jupyterhub/jupyterhub-onbuild:$JUPYTERHUB_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/jupyterhub/jupyterhub-deploy-docker",
    "repo_commit": "d2bed7a1ce5e2b140e0eea6c3781bbd7154268e7",
    "repo_id": 56241532
  },
  {
    "raw_dockerfile": "FROM postgres:${PG_VERSION}-alpine\n\n# Install dependencies\nRUN apk add --no-cache \\\n\topenssl curl \\\n\tperl perl-ipc-run \\\n\tmake musl-dev gcc bison flex coreutils \\\n\tzlib-dev libedit-dev \\\n\tclang clang-analyzer;\n\n# Install fresh valgrind\nRUN apk add valgrind \\\n\t--update-cache \\\n\t--repository http://dl-3.alpinelinux.org/alpine/edge/main;\n\n# Environment\nENV LANG=C.UTF-8 PGDATA=/pg/data\n\n# Make directories\nRUN\tmkdir -p ${PGDATA} && \\\n\tmkdir -p /pg/testdir\n\n# Grant privileges\nRUN\tchown postgres:postgres ${PGDATA} && \\\n\tchown postgres:postgres /pg/testdir && \\\n\tchmod a+rwx /usr/local/lib/postgresql && \\\n\tchmod a+rwx /usr/local/share/postgresql/extension\n\nCOPY run_tests.sh /run.sh\nRUN chmod 755 /run.sh\n\nADD . /pg/testdir\nWORKDIR /pg/testdir\n\nUSER postgres\nENTRYPOINT LEVEL=${LEVEL} /run.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  623.1kB\r\r\nStep 1/12 : FROM postgres:${PG_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/postgrespro/pg_variables",
    "repo_commit": "7c5081ee57d216694b90572e7aa0804238c9c49d",
    "repo_id": 59569235
  },
  {
    "raw_dockerfile": "ARG TRUE_BASE=cyberdojo/web-base:e8c4aba\nARG BUILD_ENV\n# copy|no_copy\n\nFROM ${TRUE_BASE} as build_copy\nONBUILD COPY . /cyber-dojo\nONBUILD RUN chown -R nobody:nogroup /cyber-dojo\n# NB: combining the above 2 lines into\n# ONBUILD COPY --chown=nobody:nogroup . /cyber-dojo\n# causes a run (docker exec cyber-dojo-web) failure...\n# /usr/lib/ruby/2.5.0/fileutils.rb:232:in `mkdir': Permission denied @ dir_s_mkdir - /cyber-dojo/tmp (Errno::EACCES)\n\nFROM ${TRUE_BASE} as build_no_copy\nONBUILD RUN echo \"I need a volume-mount\"\n\n# - - - - - - - - - - - - - - - - - - - -\nFROM build_${BUILD_ENV}\nLABEL maintainer=jon@jaggersoft.com\n\nWORKDIR /cyber-dojo\n\nARG COMMIT_SHA\nENV SHA=${COMMIT_SHA}\n\nEXPOSE  3000\nUSER nobody\nCMD [ \"./up.sh\" ]",
    "raw_stdout_log": "Sending build context to Docker daemon  2.649MB\r\r\nStep 1/15 : ARG TRUE_BASE=cyberdojo/web-base:e8c4aba\nStep 2/15 : ARG BUILD_ENV\nStep 3/15 : FROM ${TRUE_BASE} as build_copy\ne8c4aba: Pulling from cyberdojo/web-base\ncbdbe7a5bc2a: Already exists\na3b04353977a: Pulling fs layer\nf868d64e2b68: Pulling fs layer\n21fa467579dc: Pulling fs layer\n1ee67cd49994: Pulling fs layer\nf868d64e2b68: Download complete\n21fa467579dc: Download complete\na3b04353977a: Verifying Checksum\na3b04353977a: Download complete\n1ee67cd49994: Verifying Checksum\n1ee67cd49994: Download complete\na3b04353977a: Pull complete\nf868d64e2b68: Pull complete\n21fa467579dc: Pull complete\n1ee67cd49994: Pull complete\nDigest: sha256:27c576ab086f04af2d644877180f35575afef64a457b14bccdb875a34f3d0892\nStatus: Downloaded newer image for cyberdojo/web-base:e8c4aba\n ---> 5d6c1ac94fd1\nStep 4/15 : ONBUILD COPY . /cyber-dojo\n ---> Running in 53e44772826b\nRemoving intermediate container 53e44772826b\n ---> 95e1d50c0e8b\nStep 5/15 : ONBUILD RUN chown -R nobody:nogroup /cyber-dojo\n ---> Running in 0d490754e2c7\nRemoving intermediate container 0d490754e2c7\n ---> 05f6da330b15\nStep 6/15 : FROM ${TRUE_BASE} as build_no_copy\n ---> 5d6c1ac94fd1\nStep 7/15 : ONBUILD RUN echo \"I need a volume-mount\"\n ---> Running in 6da59881f9c0\nRemoving intermediate container 6da59881f9c0\n ---> dc599def4bb0\nStep 8/15 : FROM build_${BUILD_ENV}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/cyber-dojo/web",
    "repo_commit": "3cd433a1092d1d7f1b0b24d93f3f7f47c9243859",
    "repo_id": 61050443
  },
  {
    "raw_dockerfile": "# Based on https://github.com/ledermann/docker-rails/blob/develop/Dockerfile\nARG RUBY_VERSION\n# NOTE FROM clears all ARGs\nFROM ruby:$RUBY_VERSION-slim-buster\n\nARG PG_MAJOR\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\nARG CHROMEDRIVER_VERSION\nARG ADDITIONAL_PACKAGES\n\nENV RAILS_ENV ${RAILS_ENV}\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\nLABEL maintainer=\"elliot@greenriver.com\"\n\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    curl \\\n    gnupg2\n\n# Add PostgreSQL to sources list\nRUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `awk -F= '$1==\"VERSION_CODENAME\" { print $2 ;}' /etc/os-release`-pgdg main\" $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\n\n# Add NodeJS to sources list\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\n\n# Add Yarn to the sources list\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list\n\n# Set up the Chrome PPA\nRUN curl -sS https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-list.list\n\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    postgresql-client-$PG_MAJOR \\\n    libpq-dev \\\n    curl \\\n    less \\\n    git \\\n    imagemagick \\\n    tzdata \\\n    unzip \\\n    yarn \\\n    zip \\\n    $ADDITIONAL_PACKAGES \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\n# Install Chrome WebDriver\nRUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` && \\\n    mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \\\n    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    rm /tmp/chromedriver_linux64.zip && \\\n    chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver && \\\n    ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver\n\nRUN mkdir /app\nWORKDIR /app\n\n# Configure bundler and PATH\nENV LANG=C.UTF-8 \\\n  GEM_HOME=/bundle \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\nENV BUNDLE_PATH $GEM_HOME\nENV BUNDLE_APP_CONFIG=$BUNDLE_PATH \\\n  BUNDLE_BIN=$BUNDLE_PATH/bin\nENV PATH /app/bin:$BUNDLE_BIN:$PATH\n\n# Install gems\nADD Gemfile* /app/\n\n# Upgrade RubyGems and install required Bundler version\nRUN gem update --system \\\n    && gem install bundler:$BUNDLER_VERSION \\\n    && bundle \\\n    && bundle exec rails webpacker:install \\\n    && yarn install\n\nCOPY docker/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  27.79MB\r\r\nStep 1/29 : ARG RUBY_VERSION\nStep 2/29 : FROM ruby:$RUBY_VERSION-slim-buster",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/greenriver/boston-cas",
    "repo_commit": "64dd281b553c0ce90d48b7f390c0f3e99d544209",
    "repo_id": 62747920
  },
  {
    "raw_dockerfile": "ARG BASE_IMAGE_TAG\n\nFROM wodby/php-nginx:${BASE_IMAGE_TAG}\n\nARG DRUPAL_VER\n\nENV DRUPAL_VER=\"${DRUPAL_VER}\"\n\nCOPY templates/d${DRUPAL_VER}-vhost.conf.tpl /etc/gotpl/vhost.conf.tpl",
    "raw_stdout_log": "Sending build context to Docker daemon  269.8kB\r\r\nStep 1/5 : ARG BASE_IMAGE_TAG\nStep 2/5 : FROM wodby/php-nginx:${BASE_IMAGE_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/drupal-nginx",
    "repo_commit": "6e435af5881872da12ff441189642c3d61a4214d",
    "repo_id": 63230942
  },
  {
    "raw_dockerfile": "ARG GO_VERSION\nFROM golang:${GO_VERSION}-alpine AS builder\nRUN apk add --update --no-cache ca-certificates make git curl gcc libc-dev\nRUN mkdir -p /build\nWORKDIR /build\nCOPY . /build/\nRUN go mod download\nRUN make build-linux\n\nFROM golang:${GO_VERSION}-alpine \nRUN apk add --update --no-cache ca-certificates git gcc libc-dev\nENV GO111MODULE on\nCOPY --from=builder /build/gosec /bin/gosec\nENTRYPOINT [\"/bin/gosec\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  5.014MB\r\r\nStep 1/13 : ARG GO_VERSION\nStep 2/13 : FROM golang:${GO_VERSION}-alpine AS builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/securego/gosec",
    "repo_commit": "ee3146e637167cd156ccfc0310f4983f1bc76566",
    "repo_id": 63625434
  },
  {
    "raw_dockerfile": "ARG VERSION\nFROM silex/emacs:$VERSION\n\nARG UID\n\nCOPY scripts/docker-install.bash /tmp/\nRUN /tmp/docker-install.bash \"$UID\"\n\nUSER $UID\nWORKDIR /home/docker/radian\n\n# If we don't do this, then the directory gets created in the\n# container filesystem with root ownership :/\nRUN mkdir -p \"$HOME/.emacs.d/straight/repos\"\n\nCMD bash",
    "raw_stdout_log": "Sending build context to Docker daemon  2.759MB\r\r\nStep 1/9 : ARG VERSION\nStep 2/9 : FROM silex/emacs:$VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/raxod502/radian",
    "repo_commit": "5bc275e8e69eacfe7f906b00e785e4483ac66a13",
    "repo_id": 64223503
  },
  {
    "raw_dockerfile": "ARG COMPILER\n\nFROM registry.gitlab.com/offa/docker-images/${COMPILER}:stable\n\nARG COMPILER\n\nRUN mkdir deps && cd deps && \\\n    git clone --depth=1 https://github.com/Microsoft/GSL.git gsl && \\\n    cd gsl && mkdir build && cd build && \\\n    cmake -DGSL_TEST=OFF .. && make && make install && \\\n    cd ../.. && \\\n    if [ \"${COMPILER}\" != \"arm-none-eabi-gcc\" ]; then \\\n        git clone --depth=1 https://github.com/cpputest/cpputest.git cpputest && \\\n        cd cpputest && mkdir _build && cd _build && \\\n        case ${CXX} in clang* ) export CXXFLAGS=\"-stdlib=libc++\"; esac; \\\n        cmake -DC++11=ON -DTESTS=OFF -DMEMORY_LEAK_DETECTION=OFF .. && \\\n        make && make install && \\\n        cd ../..; \\\n    fi && \\\n    cd .. && rm -rf deps",
    "raw_stdout_log": "Sending build context to Docker daemon  11.62MB\r\r\nStep 1/4 : ARG COMPILER\nStep 2/4 : FROM registry.gitlab.com/offa/docker-images/${COMPILER}:stable",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/offa/stm32-eth",
    "repo_commit": "3bb989ba31dacc95239eba7852248bcdcebe613c",
    "repo_id": 64939819
  },
  {
    "raw_dockerfile": "FROM postgres:${PG_VERSION}-alpine\n\nENV PYTHON=python${PYTHON_VERSION}\nRUN if [ \"${PYTHON_VERSION}\" = \"2\" ] ; then \\\n\tapk add --no-cache curl python2 python2-dev build-base musl-dev \\\n    linux-headers py-virtualenv py-pip; \\\n\tfi\nRUN if [ \"${PYTHON_VERSION}\" = \"3\" ] ; then \\\n\tapk add --no-cache curl python3 python3-dev build-base musl-dev \\\n    linux-headers py-virtualenv; \\\n\tfi\nENV LANG=C.UTF-8\n\nRUN mkdir -p /pg\nCOPY run_tests.sh /run.sh\nRUN chmod 755 /run.sh\n\nADD . /pg/testgres\nWORKDIR /pg/testgres\nRUN chown -R postgres:postgres /pg\n\nUSER postgres\nENTRYPOINT PYTHON_VERSION=${PYTHON_VERSION} /run.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  953.3kB\r\r\nStep 1/13 : FROM postgres:${PG_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/postgrespro/testgres",
    "repo_commit": "76ea566dbd593de6e52436e107b7c3f9863d9a61",
    "repo_id": 65575678
  },
  {
    "raw_dockerfile": "ARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}\n\nARG UBUNTU_VERSION\nARG CUDA_VERSION\nARG CUDNN_VERSION\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install common dependencies (so that this step can be cached separately)\nARG EC2\nADD ./common/install_base.sh install_base.sh\nRUN bash ./install_base.sh && rm install_base.sh\n\n# Install user\nADD ./common/install_user.sh install_user.sh\nRUN bash ./install_user.sh && rm install_user.sh\n\n# Install katex\nARG KATEX\nADD ./common/install_katex.sh install_katex.sh\nRUN bash ./install_katex.sh && rm install_katex.sh\n\n# Install conda\nENV PATH /opt/conda/bin:$PATH\nARG ANACONDA_PYTHON_VERSION\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\n# Install gcc\nARG GCC_VERSION\nADD ./common/install_gcc.sh install_gcc.sh\nRUN bash ./install_gcc.sh && rm install_gcc.sh\n\n# Install non-standard Python versions (via Travis binaries)\nARG TRAVIS_PYTHON_VERSION\nENV PATH /opt/python/$TRAVIS_PYTHON_VERSION/bin:$PATH\nADD ./common/install_travis_python.sh install_travis_python.sh\nRUN bash ./install_travis_python.sh && rm install_travis_python.sh\n\n# (optional) Install protobuf for ONNX\nARG PROTOBUF\nADD ./common/install_protobuf.sh install_protobuf.sh\nRUN if [ -n \"${PROTOBUF}\" ]; then bash ./install_protobuf.sh; fi\nRUN rm install_protobuf.sh\nENV INSTALLED_PROTOBUF ${PROTOBUF}\n\n# (optional) Install database packages like LMDB and LevelDB\nARG DB\nADD ./common/install_db.sh install_db.sh\nRUN if [ -n \"${DB}\" ]; then bash ./install_db.sh; fi\nRUN rm install_db.sh\nENV INSTALLED_DB ${DB}\n\n# (optional) Install vision packages like OpenCV and ffmpeg\nARG VISION\nADD ./common/install_vision.sh install_vision.sh\nRUN if [ -n \"${VISION}\" ]; then bash ./install_vision.sh; fi\nRUN rm install_vision.sh\nENV INSTALLED_VISION ${VISION}\n\n# Install ccache/sccache (do this last, so we get priority in PATH)\nADD ./common/install_cache.sh install_cache.sh\nENV PATH /opt/cache/bin:$PATH\nRUN bash ./install_cache.sh && rm install_cache.sh\nENV CUDA_NVCC_EXECUTABLE=/opt/cache/lib/nvcc\n\n# Add jni.h for java host build\nADD ./common/install_jni.sh install_jni.sh\nADD ./java/jni.h jni.h\nRUN bash ./install_jni.sh && rm install_jni.sh\n\n# Include BUILD_ENVIRONMENT environment variable in image\nARG BUILD_ENVIRONMENT\nENV BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}\n\n# AWS specific CUDA build guidance\nENV TORCH_CUDA_ARCH_LIST Maxwell\nENV TORCH_NVCC_FLAGS \"-Xfatbin -compress-all\"\n\n# Install LLVM dev version\nADD ./common/install_llvm.sh install_llvm.sh\nRUN bash ./install_llvm.sh\n\nUSER jenkins\nCMD [\"bash\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  360.8MB\r\r\nStep 1/57 : ARG UBUNTU_VERSION\nStep 2/57 : ARG CUDA_VERSION\nStep 3/57 : ARG CUDNN_VERSION\nStep 4/57 : FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/pytorch/pytorch",
    "repo_commit": "506ae60547973464c2108bbe3dbc644f10fe01c2",
    "repo_id": 65600975
  },
  {
    "raw_dockerfile": "ARG V8_VERSION\nARG V8_SOURCE_IMAGE=augustoroman/v8-lib\n\n# ------------ Import the v8 libraries --------------------------------------\n# The v8 library & include files are taken from a pre-built docker image that\n# is expected to be called v8-lib. You can build that locally using:\n#   docker build --build-arg V8_VERSION=6.7.77 --tag augustoroman/v8-lib:6.7.77 docker-v8-lib/\n# or you can use a previously built image from:\n#   https://hub.docker.com/r/augustoroman/v8-lib/\n#\n# Once that is available, build this docker image using:\n#   docker build --build-arg V8_VERSION=6.7.77 -t v8-runjs .\n# and then run the interactive js using:\n#   docker run -it --rm v8-runjs\nFROM ${V8_SOURCE_IMAGE}:${V8_VERSION} as v8\n\n# ------------ Build go v8 library and run tests ----------------------------\nFROM golang as builder\n# Copy the v8 code from the local disk, similar to:\n#   RUN go get github.com/augustoroman/v8 ||:\n# but this allows using any local modifications.\nARG GO_V8_DIR=/go/src/github.com/augustoroman/v8/\nADD *.go *.h *.cc $GO_V8_DIR\nADD cmd $GO_V8_DIR/cmd/\nADD v8console $GO_V8_DIR/v8console/\n\n# Copy the pre-compiled library & include files for the desired v8 version.\nCOPY --from=v8 /v8/lib $GO_V8_DIR/libv8/\nCOPY --from=v8 /v8/include $GO_V8_DIR/include/\n\n# Install the go code and run tests.\nWORKDIR $GO_V8_DIR\nRUN go get ./...\nRUN go test ./...\n\n# ------------ Build the final container for v8-runjs -----------------------\n# TODO(aroman) find a smaller container for the executable! For some reason,\n# scratch, alpine, and busybox don't work. I wonder if it has something to do\n# with cgo?\nFROM ubuntu:16.04\nCOPY --from=builder /go/bin/v8-runjs /v8-runjs\nCMD /v8-runjs",
    "raw_stdout_log": "Sending build context to Docker daemon  395.8kB\r\r\nStep 1/16 : ARG V8_VERSION\nStep 2/16 : ARG V8_SOURCE_IMAGE=augustoroman/v8-lib\nStep 3/16 : FROM ${V8_SOURCE_IMAGE}:${V8_VERSION} as v8",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/augustoroman/v8",
    "repo_commit": "4b66934a28a74b91f9ade21dad5d851e59ef7473",
    "repo_id": 65984358
  },
  {
    "raw_dockerfile": "# Run skill changes against the last major release of Mycroft Core but install\n# the latest version of all skills.\nARG major_release\nFROM voight-kampff-mark-1:${major_release} as config_builder\nARG pull_request\nARG platform\nARG branch_name\nARG repo_url\nARG github_user\nARG github_api_key\nENV GITHUB_API_KEY=$github_api_key\nWORKDIR /opt/mycroft/mycroft-core\nRUN msm update\nCOPY test-requirements.txt skill-test-requirements.txt\nRUN .venv/bin/python -m pip install -r skill-test-requirements.txt\nCOPY build_test_config.py .\nRUN .venv/bin/python build_test_config.py --pull-request $pull_request --platform $platform\n\n# Use multi-stage build to forget the GitHub credentials from the previous stage\nFROM config_builder as test_setup\nARG platform\nARG branch_name\nARG repo_url\nRUN python -m test.integrationtests.voight_kampff.test_setup \\\n    --config test_skill.yml \\\n    --platform $platform \\\n    --branch $branch_name \\\n    --repo-url $repo_url\n# Set working directory for testing\nWORKDIR /opt/mycroft/mycroft-core/test/integrationtests/voight_kampff",
    "raw_stdout_log": "Sending build context to Docker daemon  12.86MB\r\r\nStep 1/21 : ARG major_release\nStep 2/21 : FROM voight-kampff-mark-1:${major_release} as config_builder",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/MycroftAI/mycroft-skills",
    "repo_commit": "2fe958e24d55b8c1b44e50a66313f86e98c036ca",
    "repo_id": 66090186
  },
  {
    "raw_dockerfile": "ARG BASE_IMAGE_TAG\n\nFROM wodby/php:${BASE_IMAGE_TAG}\n\nUSER root\n\nRUN set -ex; \\\n    \\\n    apk add --no-cache -t .fetch-deps gnupg; \\\n    \\\n    cd /tmp; \\\n    wp_cli_version=\"2.4.0\"; \\\n    url=\"https://github.com/wp-cli/wp-cli/releases/download/v${wp_cli_version}/wp-cli-${wp_cli_version}.phar\"; \\\n    curl -o wp.phar -fSL \"${url}\"; \\\n    curl -o wp.phar.asc -fSL \"${url}.asc\"; \\\n    \\\n    GPG_KEYS=63AF7AA15067C05616FDDD88A3A2E8F226F0BC06 gpg_verify /tmp/wp.phar.asc /tmp/wp.phar; \\\n    \\\n    sha512=\"4049c7e45e14276a70a41c3b0864be7a6a8cfa8ea65ebac8b184a4f503a91baa1a0d29260d03248bc74aef70729824330fb6b396336172a624332e16f64e37ef\"; \\\n\techo \"${sha512} *wp.phar\" | sha512sum -c -; \\\n\t\\\n    chmod +x wp.phar; \\\n    mv wp.phar /usr/local/bin/wp; \\\n    \\\n    url=\"https://raw.githubusercontent.com/wp-cli/wp-cli/v${wp_cli_version}/utils/wp-completion.bash\"; \\\n    curl -o /usr/local/include/wp-completion.bash -fSL \"${url}\"; \\\n    cd /home/wodby; \\\n    echo \"source /usr/local/include/wp-completion.bash\" | tee -a .bash_profile .bashrc; \\\n    \\\n    if [[ -z \"${PHP_DEV}\" ]]; then \\\n        echo \"$(cat /etc/sudoers.d/wodby), /usr/local/bin/init_wordpress\" > /etc/sudoers.d/wodby; \\\n    fi; \\\n    \\\n    mv /usr/local/bin/actions.mk /usr/local/bin/php.mk; \\\n    \\\n    apk del --purge .fetch-deps; \\\n    rm -rf /var/cache/apk/* /tmp/*\n\nUSER wodby\n\nCOPY templates /etc/gotpl/\nCOPY bin /usr/local/bin\nCOPY init /docker-entrypoint-init.d/",
    "raw_stdout_log": "Sending build context to Docker daemon  394.2kB\r\r\nStep 1/8 : ARG BASE_IMAGE_TAG\nStep 2/8 : FROM wodby/php:${BASE_IMAGE_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/wordpress-php",
    "repo_commit": "6f8af88c2757aedb5c2d83be8953c84a0837cb5c",
    "repo_id": 66251081
  },
  {
    "raw_dockerfile": "ARG BASE_IMAGE_TAG\n\nFROM wodby/php-nginx:${BASE_IMAGE_TAG}\n\nCOPY templates /etc/gotpl/",
    "raw_stdout_log": "Sending build context to Docker daemon  117.8kB\r\r\nStep 1/3 : ARG BASE_IMAGE_TAG\nStep 2/3 : FROM wodby/php-nginx:${BASE_IMAGE_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/wordpress-nginx",
    "repo_commit": "7d107cae47fc988f5824142e06ae0c1c94ee0dba",
    "repo_id": 66251102
  },
  {
    "raw_dockerfile": "FROM postgres:${PG_VERSION}-alpine\n\n# Install dependencies\nRUN apk add --no-cache \\\n\topenssl curl git \\\n\tperl perl-ipc-run \\\n\tmake musl-dev gcc bison flex coreutils \\\n\tzlib-dev libedit-dev \\\n\tclang clang-analyzer linux-headers \\\n\tpython3 python3-dev py3-virtualenv;\n\n\n# Install fresh valgrind\nRUN apk add valgrind \\\n\t--update-cache \\\n\t--repository http://dl-3.alpinelinux.org/alpine/edge/main;\n\n# Environment\nENV LANG=C.UTF-8 PGDATA=/pg/data\n\n# Make directories\nRUN\tmkdir -p ${PGDATA} && \\\n\tmkdir -p /pg/testdir\n\n# Grant privileges\nRUN\tchown postgres:postgres ${PGDATA} && \\\n\tchown postgres:postgres /pg/testdir && \\\n\tchmod -R a+rwx /usr/local/lib/postgresql && \\\n\tchmod a+rwx /usr/local/share/postgresql/extension\n\nCOPY run_tests.sh /run.sh\nRUN chmod 755 /run.sh\n\nADD . /pg/testdir\nWORKDIR /pg/testdir\n\nUSER postgres\nENTRYPOINT LEVEL=${LEVEL} USE_TPCDS=${USE_TPCDS} /run.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  402.4kB\r\r\nStep 1/12 : FROM postgres:${PG_VERSION}-alpine",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/postgrespro/pg_query_state",
    "repo_commit": "1b095a10e6c29ac2ccf657238ab724fb7457b67a",
    "repo_id": 66460640
  },
  {
    "raw_dockerfile": "ARG VERSION\nFROM silex/emacs:$VERSION\n\nARG UID\n\nCOPY scripts/docker-install.bash /tmp/\nRUN /tmp/docker-install.bash \"$UID\"\n\nUSER $UID\nWORKDIR /home/docker/src\n\nCMD bash",
    "raw_stdout_log": "Sending build context to Docker daemon  2.297MB\r\r\nStep 1/8 : ARG VERSION\nStep 2/8 : FROM silex/emacs:$VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/raxod502/straight.el",
    "repo_commit": "21c431c0d5144790df666b3888122a1594090d4f",
    "repo_id": 77983005
  },
  {
    "raw_dockerfile": "#escape = `\nARG version\nFROM microsoft/windowsservercore:${version}\nWORKDIR prep\nCOPY /Content/* prep/",
    "raw_stdout_log": "Sending build context to Docker daemon  42.45MB\r\r\nStep 1/4 : ARG version\nStep 2/4 : FROM microsoft/windowsservercore:${version}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/artisticcheese/artisticcheesecontainer",
    "repo_commit": "d743351a755514252ea385313f22bb180149660b",
    "repo_id": 78482668
  },
  {
    "raw_dockerfile": "ARG BASE_IMAGE_TAG\n\nFROM wodby/alpine:${BASE_IMAGE_TAG}\n\nARG NGINX_VER\n\nENV NGINX_VER=\"${NGINX_VER}\" \\\n    APP_ROOT=\"/var/www/html\" \\\n    FILES_DIR=\"/mnt/files\" \\\n    NGINX_VHOST_PRESET=\"html\"\n\nRUN set -ex; \\\n    \\\n    nginx_up_ver=\"0.9.1\"; \\\n    ngx_pagespeed_ver=\"1.13.35.2\"; \\\n    mod_pagespeed_ver=\"1.13.35.2\"; \\\n    ngx_modsecurity_ver=\"1.0.0\"; \\\n    modsecurity_ver=\"3.0.3\"; \\\n    owasp_crs_ver=\"3.1.0\"; \\\n    \\\n    addgroup -S nginx; \\\n    adduser -S -D -H -h /var/cache/nginx -s /sbin/nologin -G nginx nginx; \\\n    \\\n\taddgroup -g 1000 -S wodby; \\\n\tadduser -u 1000 -D -S -s /bin/bash -G wodby wodby; \\\n\tsed -i '/^wodby/s/!/*/' /etc/shadow; \\\n\techo \"PS1='\\w\\$ '\" >> /home/wodby/.bashrc; \\\n    \\\n    apk add --update --no-cache -t .tools \\\n        findutils \\\n        make \\\n        nghttp2 \\\n        sudo; \\\n    \\\n    apk add --update --no-cache -t .nginx-build-deps \\\n        apr-dev \\\n        apr-util-dev \\\n        build-base \\\n        gd-dev \\\n        git \\\n        gnupg \\\n        gperf \\\n        icu-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libressl-dev \\\n        libtool \\\n        libxslt-dev \\\n        linux-headers \\\n        pcre-dev \\\n        zlib-dev; \\\n     \\\n     apk add --no-cache -t .libmodsecurity-build-deps \\\n        autoconf \\\n        automake \\\n        bison \\\n        curl \\\n        flex \\\n        g++ \\\n        git \\\n        libmaxminddb-dev \\\n        libstdc++ \\\n        libtool \\\n        libxml2-dev \\\n        pcre-dev \\\n        rsync \\\n        sed \\\n        yajl \\\n        yajl-dev; \\\n    \\\n    # @todo download from main repo when updated to alpine 3.10.\n    apk add -U --no-cache -t .nginx-edge-build-deps -X http://dl-cdn.alpinelinux.org/alpine/edge/community/ brotli-dev; \\\n    # Modsecurity lib.\n    cd /tmp; \\\n    git clone --depth 1 -b \"v${modsecurity_ver}\" --single-branch https://github.com/SpiderLabs/ModSecurity; \\\n    cd ModSecurity; \\\n    git submodule init;  \\\n    git submodule update; \\\n    ./build.sh; \\\n    ./configure --disable-doxygen-doc --disable-doxygen-html; \\\n    make -j$(getconf _NPROCESSORS_ONLN); \\\n    make install;  \\\n    mkdir -p /etc/nginx/modsecurity/; \\\n    mv modsecurity.conf-recommended /etc/nginx/modsecurity/recommended.conf;  \\\n    sed -i 's/SecRuleEngine DetectionOnly/SecRuleEngine On/' /etc/nginx/modsecurity/recommended.conf; \\\n    cp unicode.mapping /etc/nginx/modsecurity/; \\\n    rsync -a --links /usr/local/modsecurity/lib/libmodsecurity.so* /usr/local/lib/; \\\n    \\\n    # Brotli.\n    cd /tmp; \\\n    git clone --depth 1 --single-branch https://github.com/google/ngx_brotli; \\\n    \\\n    # Get ngx modsecurity module.\n    mkdir -p /tmp/ngx_http_modsecurity_module; \\\n    ver=\"${ngx_modsecurity_ver}\"; \\\n    url=\"https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v${ver}/modsecurity-nginx-v${ver}.tar.gz\"; \\\n    wget -qO- \"${url}\" | tar xz --strip-components=1 -C /tmp/ngx_http_modsecurity_module; \\\n    \\\n    # OWASP.\n    wget -qO- \"https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${owasp_crs_ver}.tar.gz\" | tar xz -C /tmp; \\\n    cd /tmp/owasp-modsecurity-crs-*; \\\n    sed -i \"s#SecRule REQUEST_COOKIES|#SecRule REQUEST_URI|REQUEST_COOKIES|#\" rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf; \\\n    mkdir -p /etc/nginx/modsecurity/crs/; \\\n    mv crs-setup.conf.example /etc/nginx/modsecurity/crs/setup.conf; \\\n    mv rules /etc/nginx/modsecurity/crs; \\\n    \\\n    # Get ngx pagespeed module.\n    git clone -b \"v${ngx_pagespeed_ver}-stable\" \\\n          --recurse-submodules \\\n          --shallow-submodules \\\n          --depth=1 \\\n          -c advice.detachedHead=false \\\n          -j$(getconf _NPROCESSORS_ONLN) \\\n          https://github.com/apache/incubator-pagespeed-ngx.git \\\n          /tmp/ngx_pagespeed; \\\n    \\\n    # Get psol for alpine.\n    url=\"https://github.com/wodby/nginx-alpine-psol/releases/download/${mod_pagespeed_ver}/psol.tar.gz\"; \\\n    wget -qO- \"${url}\" | tar xz -C /tmp/ngx_pagespeed; \\\n    \\\n    # Get ngx uploadprogress module.\n    mkdir -p /tmp/ngx_http_uploadprogress_module; \\\n    url=\"https://github.com/masterzen/nginx-upload-progress-module/archive/v${nginx_up_ver}.tar.gz\"; \\\n    wget -qO- \"${url}\" | tar xz --strip-components=1 -C /tmp/ngx_http_uploadprogress_module; \\\n    \\\n    # Download nginx.\n    curl -fSL \"https://nginx.org/download/nginx-${NGINX_VER}.tar.gz\" -o /tmp/nginx.tar.gz; \\\n    curl -fSL \"https://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc\"  -o /tmp/nginx.tar.gz.asc; \\\n    GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 gpg_verify /tmp/nginx.tar.gz.asc /tmp/nginx.tar.gz; \\\n    tar zxf /tmp/nginx.tar.gz -C /tmp; \\\n    \\\n    cd \"/tmp/nginx-${NGINX_VER}\"; \\\n    ./configure \\\n        --prefix=/usr/share/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --pid-path=/var/run/nginx/nginx.pid \\\n        --lock-path=/var/run/nginx/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-compat \\\n        --with-file-aio \\\n        --with-http_addition_module \\\n        --with-http_auth_request_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n\t\t--with-http_image_filter_module=dynamic \\\n        --with-http_mp4_module \\\n        --with-http_random_index_module \\\n        --with-http_realip_module \\\n        --with-http_secure_link_module \\\n\t\t--with-http_slice_module \\\n        --with-http_ssl_module \\\n        --with-http_stub_status_module \\\n        --with-http_sub_module \\\n        --with-http_v2_module \\\n\t\t--with-http_xslt_module=dynamic \\\n        --with-ipv6 \\\n        --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-pcre-jit \\\n        --with-stream \\\n        --with-stream_ssl_module \\\n\t\t--with-stream_ssl_preread_module \\\n\t\t--with-stream_realip_module \\\n        --with-threads \\\n        --add-module=/tmp/ngx_http_uploadprogress_module \\\n        --add-module=/tmp/ngx_brotli \\\n        --add-dynamic-module=/tmp/ngx_pagespeed \\\n        --add-dynamic-module=/tmp/ngx_http_modsecurity_module; \\\n    \\\n    make -j$(getconf _NPROCESSORS_ONLN); \\\n    make install; \\\n    mkdir -p /usr/share/nginx/modules; \\\n    \\\n    install -g wodby -o wodby -d \\\n        \"${APP_ROOT}\" \\\n        \"${FILES_DIR}\" \\\n        /etc/nginx/conf.d \\\n        /var/cache/nginx \\\n        /var/lib/nginx; \\\n    \\\n    touch /etc/nginx/upstream.conf; \\\n    chown -R wodby:wodby /etc/nginx; \\\n    \\\n    install -g nginx -o nginx -d \\\n        /var/cache/ngx_pagespeed \\\n        /pagespeed_static \\\n        /ngx_pagespeed_beacon; \\\n    \\\n    install -m 400 -d /etc/nginx/pki; \\\n    strip /usr/sbin/nginx*; \\\n    strip /usr/lib/nginx/modules/*.so; \\\n    strip /usr/local/lib/libmodsecurity.so*; \\\n    \\\n    for i in /usr/lib/nginx/modules/*.so; do ln -s \"${i}\" /usr/share/nginx/modules/; done; \\\n    \\\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/local/modsecurity/lib/*.so /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .nginx-rundeps $runDeps; \\\n    \\\n    # Script to fix volumes permissions via sudo.\n    echo \"find ${APP_ROOT} ${FILES_DIR} -maxdepth 0 -uid 0 -type d -exec chown wodby:wodby {} +\" > /usr/local/bin/init_volumes; \\\n    chmod +x /usr/local/bin/init_volumes; \\\n    \\\n    { \\\n        echo -n 'wodby ALL=(root) NOPASSWD:SETENV: ' ; \\\n        echo -n '/usr/local/bin/init_volumes, ' ; \\\n        echo '/usr/sbin/nginx' ; \\\n    } | tee /etc/sudoers.d/wodby; \\\n    \\\n    chown wodby:wodby /usr/share/nginx/html/50x.html; \\\n    \\\n    apk del --purge .nginx-build-deps .nginx-edge-build-deps .libmodsecurity-build-deps; \\\n    rm -rf \\\n        /tmp/* \\\n        /usr/local/modsecurity \\\n        /var/cache/apk/* ;\n\nUSER wodby\n\nCOPY bin /usr/local/bin\nCOPY templates /etc/gotpl/\nCOPY docker-entrypoint.sh /\n\nWORKDIR $APP_ROOT\nEXPOSE 80\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"sudo\", \"nginx\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  560.1kB\r\r\nStep 1/13 : ARG BASE_IMAGE_TAG\nStep 2/13 : FROM wodby/alpine:${BASE_IMAGE_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/nginx",
    "repo_commit": "81d6015e03c5cca885b72f81bab95b886d15691b",
    "repo_id": 79435474
  },
  {
    "raw_dockerfile": "ARG BASE_IMAGE_TAG\n\nFROM wodby/alpine:${BASE_IMAGE_TAG}\n\nARG VARNISH_VER\n\nENV VARNISH_VER=\"${VARNISH_VER}\"\n\nCOPY patches /tmp/patches/\nCOPY GeoIP.dat.gz /usr/share/GeoIP/\n\nRUN set -ex; \\\n    \\\n    addgroup -g 101 -S varnish; \\\n\tadduser -u 100 -D -S -s /bin/bash -G varnish varnish; \\\n\techo \"PS1='\\w\\$ '\" >> /home/varnish/.bashrc; \\\n    \\\n    apk --update --no-cache -t .varnish-run-deps add \\\n        gcc \\\n        libc-dev \\\n        libedit \\\n        libexecinfo \\\n        geoip \\\n        libgcc \\\n        make \\\n        ncurses-libs \\\n        pcre \\\n        pwgen; \\\n    \\\n    apk --update --no-cache -t .varnish-build-deps add \\\n        attr \\\n        autoconf \\\n        automake \\\n        build-base \\\n        git \\\n        geoip-dev \\\n        libedit-dev \\\n        libexecinfo-dev \\\n        libtool \\\n        linux-headers \\\n        ncurses-dev \\\n        pcre-dev \\\n        py-docutils \\\n        py-sphinx \\\n        python \\\n        rsync; \\\n    \\\n    varnish_url=\"http://varnish-cache.org/_downloads/varnish-${VARNISH_VER}.tgz\"; \\\n    wget -qO- \"${varnish_url}\" | tar xz -C /tmp/; \\\n    cd /tmp/varnish-*; \\\n    mkdir -p /tmp/pkg; \\\n    # Patch from alpine varnish package repository.\n    for i in /tmp/patches/\"${VARNISH_VER:0:1}\"/*.patch; do patch -p1 -i \"${i}\"; done; \\\n    \\\n    ./configure \\\n\t\t--build=x86_64-alpine-linux-musl \\\n\t\t--host=x86_64-alpine-linux-musl \\\n\t\t--prefix=/usr \\\n\t\t--sysconfdir=/etc \\\n\t\t--mandir=/usr/share/man \\\n\t\t--infodir=/usr/share/info \\\n\t\t--localstatedir=/var/lib \\\n\t\t--without-jemalloc; \\\n    \\\n    make -j \"$(nproc)\"; \\\n    make DESTDIR=/tmp/pkg install; \\\n    \\\n    mkdir -p /usr/share/varnish; \\\n    mv LICENSE /usr/share/varnish/; \\\n    \\\n    pkgdir=\"/tmp/pkg\"; \\\n    binfiles=$(scanelf -R \"$pkgdir\" | grep ET_DYN | sed \"s:$pkgdir\\/::g\" | sed \"s:ET_DYN ::g\"); \\\n    for f in $binfiles; do \\\n        srcdir=$(dirname $pkgdir/$f); \\\n        srcfile=$(basename $pkgdir/$f); \\\n        cd $srcdir; \\\n        XATTR=$(getfattr --match=\"\" --dump \"${srcfile}\"); \\\n        strip $srcfile; \\\n        [ -n \"$XATTR\" ] && { echo \"$XATTR\" | setfattr --restore=-; } \\\n    done; \\\n    \\\n    # Remove info, help, docs (default_docs from alpinelinux/abuild).\n    pkgdir=/tmp/pkg; \\\n    for i in doc man info html sgml gtk-doc ri help; do \\\n        if [ -d \"$pkgdir/usr/share/$i\" ]; then \\\n            rm -rf \"$pkgdir/usr/share/$i\"; \\\n        fi; \\\n    done; \\\n    \\\n    # Collect info about dev packages to delete after we run make check for modules.\n    # (modified version of default_dev from alpinelinux/abuild).\n    cd /tmp/pkg; \\\n    libdirs=usr/; \\\n    [ -d lib/ ] && libdirs=\"lib/ $libdirs\"; \\\n    for i in usr/include/* usr/lib/pkgconfig/varnish* usr/share/aclocal/varnish* \\\n            usr/share/gettext usr/bin/*-config \\\n            usr/share/vala/vapi usr/share/gir-[0-9]* \\\n            usr/share/qt*/mkspecs \\\n            usr/lib/qt*/mkspecs \\\n            usr/lib/cmake \\\n            $(find $libdirs -name '*.[acho]' \\\n                -o -name '*.prl' 2>/dev/null); do \\\n        if [ -e \"$pkgdir/$i\" ] || [ -L \"$pkgdir/$i\" ]; then \\\n            echo \"/$i\" >> /tmp/varnish-dev-files; \\\n        fi; \\\n    done; \\\n    \\\n    for i in lib/*.so usr/lib/*.so; do \\\n        if [ -L \"$i\" ]; then \\\n            echo \"/$i\" >> /tmp/varnish-dev-files; \\\n        fi; \\\n    done; \\\n    \\\n    rsync -a --links /tmp/pkg/ /; \\\n    \\\n    libvmod_geoip_ver=\"1.0.3\"; \\\n    libvmod_geoip_url=\"https://github.com/varnish/libvmod-geoip/archive/libvmod-geoip-${libvmod_geoip_ver}.tar.gz\"; \\\n    wget -qO- \"${libvmod_geoip_url}\" | tar xz -C /tmp/; \\\n# @todo use .mmdb db instead of legacy .dat https://github.com/varnish/libvmod-geoip/issues/18\n#    wget -qP /usr/share/GeoIP http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz; \\\n    gunzip /usr/share/GeoIP/GeoIP.dat.gz; \\\n    cd /tmp/libvmod-geoip-*; \\\n    ./autogen.sh; \\\n    ./configure; \\\n    make; \\\n    make install; \\\n    make check; \\\n    \\\n    # we're using 6.0 branch instead of releases https://github.com/varnish/varnish-modules/issues/144\n    git clone --depth 1 -b 6.0 --single-branch https://github.com/varnish/varnish-modules /tmp/varnish-modules; \\\n    cd /tmp/varnish-modules; \\\n    ./bootstrap; \\\n    ./configure; \\\n    make; \\\n    make install; \\\n    make check; \\\n    \\\n    install -d -o varnish -g varnish -m750 \\\n\t\t/var/cache/varnish \\\n\t\t/var/log/varnish \\\n\t\t/var/lib/varnish; \\\n    \\\n    install -d -o root -g varnish -m750 \\\n\t    /etc/varnish \\\n\t    /etc/varnish/defaults \\\n\t    /etc/varnish/includes; \\\n    \\\n    touch /etc/varnish/preset.vcl /etc/init.d/varnishd; \\\n    chown varnish:varnish /etc/varnish/preset.vcl /etc/init.d/varnishd; \\\n    chmod +x /etc/init.d/varnishd; \\\n    \\\n    while IFS= read -r file ; do rm -rf -- \"${file}\" ; done < /tmp/varnish-dev-files; \\\n    apk del --purge .varnish-build-deps; \\\n    rm -rf /tmp/*; \\\n    rm -rf /var/cache/apk/*\n\nEXPOSE 6081 6082\n\nVOLUME /var/lib/varnish\n\nCOPY templates /etc/gotpl/\nCOPY bin /usr/local/bin/\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/etc/init.d/varnishd\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  1.742MB\r\r\nStep 1/14 : ARG BASE_IMAGE_TAG\nStep 2/14 : FROM wodby/alpine:${BASE_IMAGE_TAG}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/wodby/varnish",
    "repo_commit": "1b39bcb726da3d44bbbd6a934d72749b51f677eb",
    "repo_id": 80441239
  },
  {
    "raw_dockerfile": "ARG NODE_VERSION\n\nFROM auth0brokkr/node:$NODE_VERSION\n\nLABEL maintainer \"Auth0\"\n\n#==============\n# VNC and Xvfb\n#==============\nRUN apt-get update -y \\\n  && apt-get -y install \\\n    xvfb \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n#========================\n# Miscellaneous packages\n# Includes minimal runtime used for executing non GUI Java programs\n#========================\nRUN apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install \\\n    bzip2 \\\n    ca-certificates \\\n    default-jre \\\n    sudo \\\n    unzip \\\n    wget \\\n    libgconf-2-4\n\n#==========\n# Selenium\n#==========\nRUN  mkdir -p /opt/selenium \\\n  && wget --no-verbose https://selenium-release.storage.googleapis.com/3.1/selenium-server-standalone-3.1.0.jar -O /opt/selenium/selenium-server-standalone.jar\n\n#========================================\n# Add normal user with passwordless sudo\n#========================================\nRUN sudo useradd jenkins --shell /bin/bash --create-home \\\n  && sudo usermod -a -G sudo jenkins \\\n  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n  && echo 'jenkins:secret' | chpasswd\n\nUSER root\n\n#============================================\n# Google Chrome\n#============================================\n# can specify versions by CHROME_VERSION;\n#  e.g. google-chrome-stable=53.0.2785.101-1\n#       google-chrome-beta=53.0.2785.92-1\n#       google-chrome-unstable=54.0.2840.14-1\n#       latest (equivalent to google-chrome-stable)\n#       google-chrome-beta  (pull latest beta)\n#============================================\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n  && apt-get update -qqy \\\n  && apt-get -qqy install \\\n    ${CHROME_VERSION:-google-chrome-stable} \\\n  && rm /etc/apt/sources.list.d/google-chrome.list \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n#==================\n# Chrome webdriver\n#==================\nRUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` && \\\n    mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \\\n    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    rm /tmp/chromedriver_linux64.zip && \\\n    chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver && \\\n    ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/bin/chromedriver\n\n\n#=================================\n# Chrome Launch Script Modication\n#=================================\nCOPY chrome_launcher.sh /opt/google/chrome/google-chrome\nRUN chmod +x /opt/google/chrome/google-chrome\n\nRUN chown -R jenkins:jenkins /opt/selenium\n\n# Following line fixes\n# https://github.com/SeleniumHQ/docker-selenium/issues/87\nRUN echo \"DBUS_SESSION_BUS_ADDRESS=/dev/null\" >> /etc/environment\n\nUSER jenkins\n\nRUN sudo chown jenkins:jenkins /app\nRUN sudo chown jenkins:jenkins /home/jenkins\nWORKDIR /app\n\nRUN echo \"INSTALLED VERSIONS\" \\\n  && echo \"  node: `node -v`\" \\\n  && echo \"  npm: `npm -v`\" \\\n  && apt-cache policy google-chrome-stable | grep Installed | sed -e \"s/Installed/Chrome/\" \\\n  && echo \"  Chromedriver: `curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`\"",
    "raw_stdout_log": "Sending build context to Docker daemon   76.8kB\r\r\nStep 1/20 : ARG NODE_VERSION\nStep 2/20 : FROM auth0brokkr/node:$NODE_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/auth0/docker-xvfb",
    "repo_commit": "e6b6b62e6d8c5d9c9d8b15887c8278a0949559bf",
    "repo_id": 83928774
  },
  {
    "raw_dockerfile": "ARG PG_VERSION\n\nFROM postgres:${PG_VERSION}\n\nENV CARGO_HOME /cargo\nENV PATH $CARGO_HOME/bin:$PATH\nENV SRC_PATH /src\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    ca-certificates curl git make gcc gcc-multilib postgresql-server-dev-$PG_MAJOR \\\n    python-pip python-setuptools python-wheel \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && curl https://sh.rustup.rs -sSf -o rustup.sh \\\n  && bash rustup.sh -y --verbose \\\n  && pip install pgxnclient\n\nWORKDIR $SRC_PATH\n\nVOLUME $SRC_PATH\n\nCOPY util/docker /docker-entrypoint-initdb.d/docker.sh",
    "raw_stdout_log": "Sending build context to Docker daemon  7.513MB\r\r\nStep 1/9 : ARG PG_VERSION\nStep 2/9 : FROM postgres:${PG_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/instructure/jsoncdc",
    "repo_commit": "46a04f733b554d792c2609f50831a5edd5a256af",
    "repo_id": 87363074
  },
  {
    "raw_dockerfile": "ARG FEDORA_VERSION\nFROM fedora:${FEDORA_VERSION}\n\nLABEL maintainer=\"The KubeVirt Project <kubevirt-dev@googlegroups.com>\"\n\nARG COPR_VERSION\nARG LIBVIRT_VERSION\nARG QEMU_VERSION\nRUN dnf install -y dnf-plugins-core && \\\n    dnf copr enable -y @virtmaint-sig/for-kubevirt-${COPR_VERSION} && \\\n    dnf install -y \\\n      libvirt-daemon-driver-qemu-${LIBVIRT_VERSION} \\\n      libvirt-client-${LIBVIRT_VERSION} \\\n      libvirt-daemon-driver-storage-core-${LIBVIRT_VERSION} \\\n      qemu-kvm-${QEMU_VERSION} \\\n      genisoimage \\\n      selinux-policy selinux-policy-targeted \\\n      nftables \\\n      iptables \\\n      augeas && \\\n    dnf update -y libgcrypt && \\\n    dnf clean all\n\nCOPY augconf /augconf\nRUN augtool -f /augconf\n\nCOPY libvirtd.sh /libvirtd.sh\nRUN chmod a+x /libvirtd.sh\n\nRUN setcap CAP_NET_BIND_SERVICE=+eip \"/usr/libexec/qemu-kvm\"\n\nCMD [\"/libvirtd.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  164.4kB\r\r\nStep 1/13 : ARG FEDORA_VERSION\nStep 2/13 : FROM fedora:${FEDORA_VERSION}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/kubevirt/libvirt",
    "repo_commit": "930921c4f437d98ded3144eb52c08e5d89bddf6b",
    "repo_id": 87814697
  },
  {
    "raw_dockerfile": "ARG version\nFROM postgres:${version}\nARG version\n    \nRUN apt-get update && apt-get install -y make git postgresql-server-dev-${version} postgresql-${version}-pgtap curl build-essential\nRUN curl -s -L https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz | tar zxvf - && cd libsodium-1.0.18 && ./configure && make check && make install\nRUN mkdir \"/pgsodium\"\nWORKDIR \"/pgsodium\"\nCOPY . .\nRUN make && make install\nRUN ldconfig",
    "raw_stdout_log": "Sending build context to Docker daemon  248.8kB\r\r\nStep 1/10 : ARG version\nStep 2/10 : FROM postgres:${version}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/michelp/pgsodium",
    "repo_commit": "5e1ec311ab1d33488ef6addad8648d565d0691f5",
    "repo_id": 88354535
  },
  {
    "raw_dockerfile": "FROM <your-repo-name>/cdsw/engine:1\nMAINTAINER email@cloudera.com\n\nENTRYPOINT [ “/bin/bash”, “-c” ]\n\nRUN mkdir /usr/local/cuda\nCOPY cuda/* cuda/\nCOPY boost/lib/ /usr/local/lib/\nCOPY caffe.conf /etc/ld.so.conf.d/\nCOPY cuda.conf /etc/ld.so.conf.d/\nRUN ldconfig",
    "raw_stdout_log": "Sending build context to Docker daemon  205.6MB\r\r\nStep 1/9 : FROM <your-repo-name>/cdsw/engine:1",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/WhiteFangBuck/CDSW-DL",
    "repo_commit": "435c9a33a9e891032d327c0d739351cbd8b37b9b",
    "repo_id": 88371258
  },
  {
    "raw_dockerfile": "# Based on https://github.com/ledermann/docker-rails/blob/develop/Dockerfile\nARG RUBY_VERSION\n# NOTE FROM clears all ARGs\nFROM ruby:$RUBY_VERSION-slim-buster\n\nARG PG_MAJOR\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\nARG CHROMEDRIVER_VERSION\nARG ADDITIONAL_PACKAGES\n\nENV RAILS_ENV ${RAILS_ENV}\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\nLABEL maintainer=\"elliot@greenriver.com\"\n\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    curl \\\n    gnupg2\n\n# Add PostgreSQL to sources list\nRUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `awk -F= '$1==\"VERSION_CODENAME\" { print $2 ;}' /etc/os-release`-pgdg main\" $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\n\n# Add NodeJS to sources list\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\n\n# Add Yarn to the sources list\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list\n\n# Set up the Chrome PPA\nRUN curl -sS https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-list.list\n\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    postgresql-client-$PG_MAJOR \\\n    libpq-dev \\\n    curl \\\n    less \\\n    git \\\n    imagemagick \\\n    tzdata \\\n    unzip \\\n    yarn \\\n    zip \\\n    $ADDITIONAL_PACKAGES \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\n# Install Chrome WebDriver\nRUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` && \\\n    mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \\\n    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    rm /tmp/chromedriver_linux64.zip && \\\n    chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver && \\\n    ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver\n\nRUN mkdir /app\nWORKDIR /app\n\n# Configure bundler and PATH\nENV LANG=C.UTF-8 \\\n  GEM_HOME=/bundle \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\nENV BUNDLE_PATH $GEM_HOME\nENV BUNDLE_APP_CONFIG=$BUNDLE_PATH \\\n  BUNDLE_BIN=$BUNDLE_PATH/bin\nENV PATH /app/bin:$BUNDLE_BIN:$PATH\n\n# Install gems\nADD Gemfile* /app/\n\n# Upgrade RubyGems and install required Bundler version\nRUN gem update --system \\\n    && gem install bundler:$BUNDLER_VERSION \\\n    && bundle\n\nCOPY docker/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  600.7MB\r\r\nStep 1/29 : ARG RUBY_VERSION\nStep 2/29 : FROM ruby:$RUBY_VERSION-slim-buster",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/greenriver/hmis-warehouse",
    "repo_commit": "4d58103a526ecfe9672ce9950fa1aee7d1f7dee6",
    "repo_id": 90051711
  },
  {
    "raw_dockerfile": "ARG FAISS_RELEASE\nFROM plippe/faiss-docker:${FAISS_RELEASE}\n\nRUN cd /opt/faiss/python && \\\n  make install && \\\n  yum install -y epel-release && \\\n  yum install -y python-pip && \\\n  pip install --upgrade pip && \\\n  pip install Flask==1.1.1 jsonschema==3.2.0\n\nCOPY resources /opt/faiss-web-service/resources\nCOPY src /opt/faiss-web-service/src\n\nENTRYPOINT [\"python\", \"/opt/faiss-web-service/src/app.py\"]",
    "raw_stdout_log": "Sending build context to Docker daemon  118.8MB\r\r\nStep 1/6 : ARG FAISS_RELEASE\nStep 2/6 : FROM plippe/faiss-docker:${FAISS_RELEASE}",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/plippe/faiss-web-service",
    "repo_commit": "136e4682975ed6e77da250260b676e5e207ae233",
    "repo_id": 91188375
  },
  {
    "raw_dockerfile": "ARG BASEIMAGE_VERSION\nFROM lsiobase/alpine:$BASEIMAGE_VERSION\n\nMAINTAINER romancin\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG BUILD_CORES\nLABEL build_version=\"Romancin version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\n\n# package version\nARG MEDIAINF_VER=\"19.09\"\nARG CURL_VER=\"7.69.1\"\nARG GEOIP_VER=\"1.1.1\"\nARG RTORRENT_VER\nARG LIBTORRENT_VER\nARG MAXMIND_LICENSE_KEY\n\n# set env\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV CONTEXT_PATH=/\nENV CREATE_SUBDIR_BY_TRACKERS=\"no\"\nENV SSL_ENABLED=\"no\"\n\n# run commands\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} && \\\n apk add --no-cache \\\n\tbash-completion \\\n        ca-certificates \\\n        fcgi \\\n        ffmpeg \\\n        geoip \\\n        geoip-dev \\\n        gzip \\\n        logrotate \\\n        nginx \\\n        dtach \\\n        tar \\\n        unrar \\\n        unzip \\\n        sox \\\n        wget \\\n        irssi \\\n        irssi-perl \\\n        zlib \\\n        zlib-dev \\\n        libxml2-dev \\\n        perl-archive-zip \\\n        perl-net-ssleay \\\n        perl-digest-sha1 \\\n        git \\\n        libressl \\\n        binutils \\\n        findutils \\\n        zip \\\n        php7 \\\n        php7-cgi \\\n        php7-fpm \\\n        php7-json  \\\n        php7-mbstring \\\n        php7-sockets \\\n        php7-pear \\\n        php7-opcache \\\n        php7-apcu \\\n        php7-ctype \\\n        php7-dev \\\n        php7-phar \\\n\tphp7-zip \\\n        php7-bcmath \\\n        python \\\n        python3 && \\\n# install build packages\n apk add --no-cache --virtual=build-dependencies \\\n        autoconf \\\n        automake \\\n        cppunit-dev \\\n        perl-dev \\\n        file \\\n        g++ \\\n        gcc \\\n        libtool \\\n        make \\\n        ncurses-dev \\\n        build-base \\\n        libtool \\\n        subversion \\\n        linux-headers \\\n        curl-dev \\\n        libressl-dev \\\n        libffi-dev \\\n        python3-dev \\\n        go \\\n        musl-dev && \\\n# compile curl to fix ssl for rtorrent\ncd /tmp && \\\nmkdir curl && \\\ncd curl && \\\nwget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 && \\\n./configure --with-ssl && make -j ${NB_CORES} && make install && \\\nldconfig /usr/bin && ldconfig /usr/lib && \\\n# install webui\n mkdir -p \\\n        /usr/share/webapps/rutorrent \\\n        /defaults/rutorrent-conf && \\\n git clone https://github.com/Novik/ruTorrent.git \\\n        /usr/share/webapps/rutorrent/ && \\\n mv /usr/share/webapps/rutorrent/conf/* \\\n        /defaults/rutorrent-conf/ && \\\n rm -rf \\\n        /defaults/rutorrent-conf/users && \\\n pip3 install CfScrape \\\n              cloudscraper && \\\n# install webui extras\n# QuickBox Theme\ngit clone https://github.com/QuickBox/club-QuickBox /usr/share/webapps/rutorrent/plugins/theme/themes/club-QuickBox && \\\ngit clone https://github.com/Phlooo/ruTorrent-MaterialDesign /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign && \\\n# ruTorrent plugins\ncd /usr/share/webapps/rutorrent/plugins/ && \\\ngit clone https://github.com/orobardet/rutorrent-force_save_session force_save_session && \\\ngit clone https://github.com/AceP1983/ruTorrent-plugins  && \\\nmv ruTorrent-plugins/* . && \\\nrm -rf ruTorrent-plugins && \\\napk add --no-cache cksfv && \\\ngit clone https://github.com/nelu/rutorrent-thirdparty-plugins.git && \\\nmv rutorrent-thirdparty-plugins/* . && \\\nrm -rf rutorrent-thirdparty-plugins && \\\ncd /usr/share/webapps/rutorrent/ && \\\nchmod 755 plugins/filemanager/scripts/* && \\\nrm -rf plugins/fileupload && \\\ncd /tmp && \\\ngit clone https://github.com/mcrapet/plowshare.git && \\\ncd plowshare/ && \\\nmake install && \\\ncd .. && \\\nrm -rf plowshare* && \\\napk add --no-cache unzip bzip2 && \\\ncd /usr/share/webapps/rutorrent/plugins/ && \\\ngit clone https://github.com/Gyran/rutorrent-pausewebui pausewebui && \\\ngit clone https://github.com/Gyran/rutorrent-ratiocolor ratiocolor && \\\nsed -i 's/changeWhat = \"cell-background\";/changeWhat = \"font\";/g' /usr/share/webapps/rutorrent/plugins/ratiocolor/init.js && \\\ngit clone https://github.com/Micdu70/rutorrent-instantsearch instantsearch && \\\ngit clone https://github.com/xombiemp/rutorrentMobile mobile && \\\nrm -rf ipad && \\\ngit clone https://github.com/dioltas/AddZip && \\\ngit clone https://github.com/Micdu70/geoip2-rutorrent geoip2 && \\\nrm -rf geoip && \\\nmkdir -p /usr/share/GeoIP && \\\ncd /usr/share/GeoIP && \\\nwget -O GeoLite2-City.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=$MAXMIND_LICENSE_KEY&suffix=tar.gz\" && \\\nwget -O GeoLite2-Country.tar.gz  \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=$MAXMIND_LICENSE_KEY&suffix=tar.gz\" && \\\ntar xzf GeoLite2-City.tar.gz && \\\ntar xzf GeoLite2-Country.tar.gz && \\\nrm -f *.tar.gz && \\\nmv GeoLite2-*/*.mmdb . && \\\ncp *.mmdb /usr/share/webapps/rutorrent/plugins/geoip2/database/ && \\\npecl install geoip-${GEOIP_VER} && \\\nchmod +x /usr/lib/php7/modules/geoip.so && \\\necho \";extension=geoip.so\" >> /etc/php7/php.ini && \\\n# install autodl-irssi perl modules\n perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy => \"yes\"); $c->commit' && \\\n curl -L http://cpanmin.us | perl - App::cpanminus && \\\n        cpanm HTML::Entities XML::LibXML JSON JSON::XS && \\\n# compile xmlrpc-c\ncd /tmp && \\\nsvn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c && \\\ncd /tmp/xmlrpc-c && \\\n./configure --with-libwww-ssl --disable-wininet-client --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server && make -j ${NB_CORES} && make install && \\\n# compile libtorrent\nif [ \"$RTORRENT_VER\" == \"v0.9.4\" ] || [ \"$RTORRENT_VER\" == \"v0.9.6\" ]; then apk add -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main -U cppunit-dev==1.13.2-r1 cppunit==1.13.2-r1; fi && \\\ncd /tmp && \\\nmkdir libtorrent && \\\ncd libtorrent && \\\nwget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 && \\\n./autogen.sh && ./configure && make -j ${NB_CORES} && make install && \\\n# compile rtorrent\ncd /tmp && \\\nmkdir rtorrent && \\\ncd rtorrent && \\\nwget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 && \\\n./autogen.sh && ./configure --with-xmlrpc-c && make -j ${NB_CORES} && make install && \\\n# compile mediainfo packages\ncurl -o \\\n/tmp/libmediainfo.tar.gz -L \\\n        \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" && \\\ncurl -o \\\n/tmp/mediainfo.tar.gz -L \\\n        \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" && \\\nmkdir -p \\\n        /tmp/libmediainfo \\\n        /tmp/mediainfo && \\\ntar xf /tmp/libmediainfo.tar.gz -C \\\n        /tmp/libmediainfo --strip-components=1 && \\\ntar xf /tmp/mediainfo.tar.gz -C \\\n        /tmp/mediainfo --strip-components=1 && \\\ncd /tmp/libmediainfo && \\\n        ./SO_Compile.sh && \\\ncd /tmp/libmediainfo/ZenLib/Project/GNU/Library && \\\n        make install && \\\ncd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library && \\\n        make install && \\\ncd /tmp/mediainfo && \\\n        ./CLI_Compile.sh && \\\ncd /tmp/mediainfo/MediaInfo/Project/GNU/CLI && \\\n        make install && \\\n# compile and install rtelegram\nGOPATH=/usr go get -u github.com/pyed/rtelegram && \\\n# create libressl link to openssl for old alpine images\nif [ \"$RTORRENT_VER\" == \"v0.9.4\" ] || [ \"$RTORRENT_VER\" == \"v0.9.6\" ] || [ \"$RTORRENT_VER\" == \"v0.9.7\" ]; then ln -s /usr/bin/openssl /usr/bin/libressl; fi && \\\n# cleanup\napk del --purge \\\n        build-dependencies && \\\nif [ \"$RTORRENT_VER\" == \"v0.9.4\" ] || [ \"$RTORRENT_VER\" == \"v0.9.6\" ]; then apk del -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main cppunit-dev; fi && \\\nrm -rf \\\n        /tmp/*\n\n# install flood webui\nRUN apk add --no-cache \\\n      python \\\n      nodejs \\\n      nodejs-npm && \\\n    apk add --no-cache --virtual=build-dependencies \\\n      build-base && \\\n    mkdir /usr/flood && \\\n    cd /usr/flood && \\\n    git clone https://github.com/jfurrow/flood . && \\\n    cp config.template.js config.js && \\\n    npm config set unsafe-perm true && \\\n    npm install --prefix /usr/flood && \\\n    npm cache clean --force && \\\n    npm run build && \\\n    npm prune --production && \\\n    rm config.js && \\\n    apk del --purge build-dependencies && \\\n    rm -rf /root \\\n           /tmp/* && \\\n    ln -s /usr/local/bin/mediainfo /usr/bin/mediainfo\n\n# add local files\nCOPY root/ /\nCOPY VERSION /\n\n# ports and volumes\nEXPOSE 443 51415 3000\nVOLUME /config /downloads",
    "raw_stdout_log": "Sending build context to Docker daemon  520.7kB\r\r\nStep 1/24 : ARG BASEIMAGE_VERSION\nStep 2/24 : FROM lsiobase/alpine:$BASEIMAGE_VERSION",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/romancin/rutorrent-flood-docker",
    "repo_commit": "05d55ea1d8d8a85a0e5334affbb770da74ce2e3b",
    "repo_id": 91238371
  },
  {
    "raw_dockerfile": "FROM jetbrains/upsource:@VERSION@\n\nUSER root\n\nRUN apt-get update && \\\n    apt-get install -y apt-transport-https && \\\n    apt-get install -y curl && \\\n    apt-get install -y wget && \\\n# install python\n    apt-get install -y python-pip && \\\n    apt-get install -y python3 && apt-get install -y python3-pip && \\\n# install php\n    apt-get install -y libapache2-mod-php php gnupg && \\\n# install yarn\n    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install -y yarn && \\\n# install nodejs\n    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get install -y nodejs\n    \n# install Android tools\nENV ANDROID_HOME=/opt/android-sdk-linux\nENV PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\nRUN mkdir ${ANDROID_HOME} && \\\n    wget https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O android-sdk-tools.zip && \\\n    unzip -q android-sdk-tools.zip -d ${ANDROID_HOME} && \\\n    rm -f android-sdk-tools.zip && \\\n    mkdir -p ${ANDROID_HOME}/licenses\nCOPY ./android-licenses/*  ${ANDROID_HOME}/licenses/\nRUN ${ANDROID_HOME}/tools/bin/sdkmanager \"platform-tools\" && \\\n# Repeat two lines below for each SDK supported in your projects\n    ${ANDROID_HOME}/tools/bin/sdkmanager \"platforms;android-26\" && \\\n    ${ANDROID_HOME}/tools/bin/sdkmanager \"build-tools;26.0.0\"\n\nUSER jetbrains",
    "raw_stdout_log": "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/9 : FROM jetbrains/upsource:@VERSION@",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/JetBrains/upsource-with-tools-docker",
    "repo_commit": "cd5717b898f322f9b03f96f1911153fe1b3a3320",
    "repo_id": 93655874
  },
  {
    "raw_dockerfile": "ARG ruby\nFROM pakyow/ci-ruby-$ruby:latest\n\nRUN mkdir -p /pakyow\nWORKDIR /pakyow\n\nCOPY . .\n\nRUN rm -f Gemfile.lock\nRUN bundle install --jobs=3 && bundle update --jobs=3",
    "raw_stdout_log": "Sending build context to Docker daemon   25.4MB\r\r\nStep 1/7 : ARG ruby\nStep 2/7 : FROM pakyow/ci-ruby-$ruby:latest",
    "raw_stderr_log": "invalid reference format",
    "html_url": "https://github.com/pakyow/pakyow",
    "repo_commit": "7def2a9127977e2c774810fe78cd42e26f8a60c5",
    "repo_id": 970401
  }
]